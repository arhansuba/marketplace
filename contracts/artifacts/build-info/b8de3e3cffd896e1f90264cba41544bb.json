{
	"id": "b8de3e3cffd896e1f90264cba41544bb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract NftToken is ERC721Enumerable{\n  using Counters for Counters.Counter;\n\n  Counters.Counter private _tokenIds;\n  address public marketplace;\n\n  struct Item {\n    uint256 id;\n    address creator;\n    string uri;//metadata url\n  }\n\n  mapping(uint256 => Item) public Items; //id => Item\n\n  constructor () ERC721(\"ArtToken\", \"ARTK\") {}\n\n  function mint(string memory uri) public returns (uint256){\n    _tokenIds.increment();\n    uint256 newItemId = _tokenIds.current();\n    _safeMint(msg.sender, newItemId);\n    approve(marketplace, newItemId);\n\n    Items[newItemId] = Item({\n      id: newItemId, \n      creator: msg.sender,\n      uri: uri\n    });\n\n    return newItemId;\n  }\n\n  function tokenURI(uint256 tokenId) public view override returns (string memory) {\n    //require((tokenId), \"ERC721URIStorage: URI query for nonexistent token\");\n    return Items[tokenId].uri;\n  }\n\n  function setMarketplace(address market) public {\n    //require(msg.sender ==);\n    marketplace = market;\n  }\n\n}"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC721 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC721Pausable is ERC721, Pausable {\n    /**\n     * @dev See {ERC721-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(\n        address to,\n        uint256 tokenId,\n        address auth\n    ) internal virtual override whenNotPaused returns (address) {\n        return super._update(to, tokenId, auth);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.",
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1479,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1483,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1486,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1490,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol": {
				"ERC721Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"paused()": "5c975abb",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":\"ERC721Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xab7469fb4d5dbca13494abb44b720b63b62a48d594083312de4865ba50cd80b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://334002204a6c9af1bb233295dfae3052ea887c2f1913130fb931fe1b11692319\",\"dweb:/ipfs/Qme5siHWg53YLWpXBb1rBTSRaTVbtWLnYUBa4Pjq2CYFpt\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2178,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol:ERC721Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1907,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC1 STOP 0xDC COINBASE SHL 0xAD 0xC7 0xB6 MUL REVERT 0xB0 0xDA 0xC5 MOD 0xD1 0xA9 DUP8 0xB8 PUSH0 CALLDATACOPY 0x23 0x4F 0xCF ADDMOD 0xAA DIV 0xC5 XOR 0xD1 MULMOD MCOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "424:971:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC1 STOP 0xDC COINBASE SHL 0xAD 0xC7 0xB6 MUL REVERT 0xB0 0xDA 0xC5 MOD 0xD1 0xA9 DUP8 0xB8 PUSH0 CALLDATACOPY 0x23 0x4F 0xCF ADDMOD 0xAA DIV 0xC5 XOR 0xD1 MULMOD MCOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "424:971:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2178,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTToken.sol": {
				"NftToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Items",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketplace",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "market",
									"type": "address"
								}
							],
							"name": "setMarketplace",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTToken.sol\":515:1505  contract NftToken is ERC721Enumerable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTToken.sol\":808:852  constructor () ERC721(\"ArtToken\", \"ARTK\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x417274546f6b656e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4152544b00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/NFTToken.sol\":515:1505  contract NftToken is ERC721Enumerable{... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTToken.sol\":515:1505  contract NftToken is ERC721Enumerable{... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTToken.sol\":515:1505  contract NftToken is ERC721Enumerable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xabc8c7af\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xabc8c7af\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd85d3d27\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x73ad6c2d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x18160ddd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x17b47cc4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/NFTToken.sol\":753:790  mapping(uint256 => Item) public Items */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_13:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTToken.sol\":1394:1502  function setMarketplace(address market) public {... */\n    tag_15:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/NFTToken.sol\":634:660  address public marketplace */\n    tag_18:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_19:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/NFTToken.sol\":1195:1390  function tokenURI(uint256 tokenId) public view override returns (string memory) {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTToken.sol\":856:1191  function mint(string memory uri) public returns (uint256){... */\n    tag_21:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_22:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1537:1541  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1575:1610  type(IERC721Enumerable).interfaceId */\n      0x780e9d6300000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1610  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1571  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1610  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1650  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_111\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1638:1649  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1637  super.supportsInterface */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1650  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1553:1650  return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_122:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTToken.sol\":753:790  mapping(uint256 => Item) public Items */\n    tag_48:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_116\n      jump\t// in\n    tag_131:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_116\n      jump\t// in\n    tag_132:\n      dup1\n      iszero\n      tag_133\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_134\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_133)\n    tag_134:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_135:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_135\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2114:2121  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2150  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2157  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2133:2157  return _allTokens.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1824:1831  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1866:1871  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1865  balanceOf */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1852  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1872  index >= balanceOf(owner) */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1918:1923  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1925:1930  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1895:1931  ERC721OutOfBoundsIndex(owner, index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1970  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1971:1976  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1984  _ownedTokens[owner][index] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1978:1983  index */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1984  _ownedTokens[owner][index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1951:1984  return _ownedTokens[owner][index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2302:2309  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2345  totalSupply */\n      tag_52\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2330  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2347  index >= totalSupply() */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2401:2402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2405:2410  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2370:2411  ERC721OutOfBoundsIndex(address(0), index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2448  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2449:2454  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2455  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_157\n      jumpi\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n    tag_157:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2431:2455  return _allTokens[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTToken.sol\":1394:1502  function setMarketplace(address market) public {... */\n    tag_81:\n        /* \"contracts/NFTToken.sol\":1491:1497  market */\n      dup1\n        /* \"contracts/NFTToken.sol\":1477:1488  marketplace */\n      0x0b\n      0x00\n        /* \"contracts/NFTToken.sol\":1477:1497  marketplace = market */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTToken.sol\":1394:1502  function setMarketplace(address market) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_116\n      jump\t// in\n    tag_168:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_116\n      jump\t// in\n    tag_169:\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_171\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_170)\n    tag_171:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_172:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_172\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTToken.sol\":634:660  address public marketplace */\n    tag_90:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTToken.sol\":1195:1390  function tokenURI(uint256 tokenId) public view override returns (string memory) {... */\n    tag_98:\n        /* \"contracts/NFTToken.sol\":1260:1273  string memory */\n      0x60\n        /* \"contracts/NFTToken.sol\":1367:1372  Items */\n      0x0c\n        /* \"contracts/NFTToken.sol\":1367:1381  Items[tokenId] */\n      0x00\n        /* \"contracts/NFTToken.sol\":1373:1380  tokenId */\n      dup4\n        /* \"contracts/NFTToken.sol\":1367:1381  Items[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTToken.sol\":1367:1385  Items[tokenId].uri */\n      0x02\n      add\n        /* \"contracts/NFTToken.sol\":1360:1385  return Items[tokenId].uri */\n      dup1\n      sload\n      tag_182\n      swap1\n      tag_116\n      jump\t// in\n    tag_182:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_116\n      jump\t// in\n    tag_183:\n      dup1\n      iszero\n      tag_184\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_185\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_184)\n    tag_185:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_186:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_186\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTToken.sol\":1195:1390  function tokenURI(uint256 tokenId) public view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTToken.sol\":856:1191  function mint(string memory uri) public returns (uint256){... */\n    tag_103:\n        /* \"contracts/NFTToken.sol\":905:912  uint256 */\n      0x00\n        /* \"contracts/NFTToken.sol\":919:940  _tokenIds.increment() */\n      tag_188\n        /* \"contracts/NFTToken.sol\":919:928  _tokenIds */\n      0x0a\n        /* \"contracts/NFTToken.sol\":919:938  _tokenIds.increment */\n      tag_189\n        /* \"contracts/NFTToken.sol\":919:940  _tokenIds.increment() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/NFTToken.sol\":946:963  uint256 newItemId */\n      0x00\n        /* \"contracts/NFTToken.sol\":966:985  _tokenIds.current() */\n      tag_190\n        /* \"contracts/NFTToken.sol\":966:975  _tokenIds */\n      0x0a\n        /* \"contracts/NFTToken.sol\":966:983  _tokenIds.current */\n      tag_191\n        /* \"contracts/NFTToken.sol\":966:985  _tokenIds.current() */\n      jump\t// in\n    tag_190:\n        /* \"contracts/NFTToken.sol\":946:985  uint256 newItemId = _tokenIds.current() */\n      swap1\n      pop\n        /* \"contracts/NFTToken.sol\":991:1023  _safeMint(msg.sender, newItemId) */\n      tag_192\n        /* \"contracts/NFTToken.sol\":1001:1011  msg.sender */\n      caller\n        /* \"contracts/NFTToken.sol\":1013:1022  newItemId */\n      dup3\n        /* \"contracts/NFTToken.sol\":991:1000  _safeMint */\n      tag_193\n        /* \"contracts/NFTToken.sol\":991:1023  _safeMint(msg.sender, newItemId) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/NFTToken.sol\":1029:1060  approve(marketplace, newItemId) */\n      tag_194\n        /* \"contracts/NFTToken.sol\":1037:1048  marketplace */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTToken.sol\":1050:1059  newItemId */\n      dup3\n        /* \"contracts/NFTToken.sol\":1029:1036  approve */\n      tag_45\n        /* \"contracts/NFTToken.sol\":1029:1060  approve(marketplace, newItemId) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/NFTToken.sol\":1086:1163  Item({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTToken.sol\":1103:1112  newItemId */\n      dup3\n        /* \"contracts/NFTToken.sol\":1086:1163  Item({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTToken.sol\":1130:1140  msg.sender */\n      caller\n        /* \"contracts/NFTToken.sol\":1086:1163  Item({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTToken.sol\":1153:1156  uri */\n      dup5\n        /* \"contracts/NFTToken.sol\":1086:1163  Item({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTToken.sol\":1067:1072  Items */\n      0x0c\n        /* \"contracts/NFTToken.sol\":1067:1083  Items[newItemId] */\n      0x00\n        /* \"contracts/NFTToken.sol\":1073:1082  newItemId */\n      dup4\n        /* \"contracts/NFTToken.sol\":1067:1083  Items[newItemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTToken.sol\":1067:1163  Items[newItemId] = Item({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/NFTToken.sol\":1177:1186  newItemId */\n      dup1\n        /* \"contracts/NFTToken.sol\":1170:1186  return newItemId */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTToken.sol\":856:1191  function mint(string memory uri) public returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_199\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_200\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2613:2620  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2653  address previousOwner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2670:2672  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2674:2681  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2683:2687  auth */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2669  super._update */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2688  address previousOwner = super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2728:2729  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2730  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2716  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2730  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2778:2785  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2777  _addTokenToAllTokensEnumeration */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      jump(tag_219)\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2824:2826  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2820  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2803:2909  if (previousOwner != to) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2875:2888  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2890:2897  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2874  _removeTokenFromOwnerEnumeration */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2803:2909  if (previousOwner != to) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2936:2937  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2938  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2924  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2938  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2991:2998  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2990  _removeTokenFromAllTokensEnumeration */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      jump(tag_226)\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3037:3039  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3033  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3016:3106  if (previousOwner != to) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3083:3085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3087:3094  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3082  _addTokenToOwnerEnumeration */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3016:3106  if (previousOwner != to) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3123:3136  previousOwner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3116:3136  return previousOwner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      0x01\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_242\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_247\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_246)\n    tag_247:\n      0x60\n      swap2\n      pop\n    tag_246:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_262\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_265\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_266\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3846:4007  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3959  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3966  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3937  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3938:3945  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3966  _allTokensIndex[tokenId] = _allTokens.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3976:3986  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3992:3999  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3976:4000  _allTokens.push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3846:4007  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4908  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4921:4925  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4920  balanceOf */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4926  uint256 lastTokenIndex = balanceOf(from) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4936:4954  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4974  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4975:4982  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4936:4983  uint256 tokenIndex = _ownedTokensIndex[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5101:5115  lastTokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5087:5097  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5087:5115  tokenIndex != lastTokenIndex */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5131:5150  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5165  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5166:5170  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5187  _ownedTokens[from][lastTokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5172:5186  lastTokenIndex */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5187  _ownedTokens[from][lastTokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5131:5187  uint256 lastTokenId = _ownedTokens[from][lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5235:5246  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5214  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5220  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5215:5219  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5220  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5232  _ownedTokens[from][tokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5221:5231  tokenIndex */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5232  _ownedTokens[from][tokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5246  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5351:5361  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5335  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5336:5347  lastTokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5361  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5117:5406  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5516  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5517:5524  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5492:5525  delete _ownedTokensIndex[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5554  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5555:5559  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5576  _ownedTokens[from][lastTokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5561:5575  lastTokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5576  _ownedTokens[from][lastTokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5535:5576  delete _ownedTokens[from][lastTokenIndex] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4705:5583  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6142  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6165:6166  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6155  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6162  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6166  _allTokens.length - 1 */\n      tag_285\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6166  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6176:6194  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6212  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6213:6220  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6176:6221  uint256 tokenIndex = _allTokensIndex[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6543:6562  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6575  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6576:6590  lastTokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6591  _allTokens[lastTokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_287\n      jumpi\n      tag_288\n      tag_159\n      jump\t// in\n    tag_288:\n    tag_287:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6543:6591  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6627:6638  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6612  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6613:6623  tokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6624  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_290\n      jumpi\n      tag_291\n      tag_159\n      jump\t// in\n    tag_291:\n    tag_290:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6638  _allTokens[tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6737:6747  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6721  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6722:6733  lastTokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6747  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6890  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6899  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6891:6898  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6899  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6868:6899  delete _allTokensIndex[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6919  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6925  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_293\n      jumpi\n      tag_294\n      tag_295\n      jump\t// in\n    tag_294:\n    tag_293:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5942:6932  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3521:3535  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3554:3555  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3548:3550  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3547  balanceOf */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3555  balanceOf(to) - 1 */\n      tag_299\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3521:3555  uint256 length = balanceOf(to) - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3592:3599  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3577  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3578:3580  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3589  _ownedTokens[to][length] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3582:3588  length */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3589  _ownedTokens[to][length] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3599  _ownedTokens[to][length] = tokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3638:3644  length */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3626  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3627:3634  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3644  _ownedTokensIndex[tokenId] = length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3511:3651  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_303\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_305\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_319\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_320\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_321\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_322\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_324:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_325:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_326:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_327:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_328:\n        /* \"#utility.yul\":561:584   */\n      tag_387\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_327\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_388:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_329:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_390\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_328\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_28:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_393\n      tag_325\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":833:952   */\n    tag_392:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_394\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_329\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_330:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_331:\n        /* \"#utility.yul\":1268:1289   */\n      tag_397\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_330\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_31:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_399\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_331\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_332:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_333:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_334:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_335:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_336:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_405\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_332\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":2222:2293   */\n      tag_406\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_333\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_407\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_334\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2392:2421   */\n      tag_408\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_335\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_35:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_410\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_336\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_337:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_338:\n        /* \"#utility.yul\":2909:2933   */\n      tag_413\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_337\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_414:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_339:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_416\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_338\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_38:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_419\n      tag_325\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3185:3304   */\n    tag_418:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_420\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_339\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_340:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_341:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_423\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_340\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_342:\n        /* \"#utility.yul\":3765:3789   */\n      tag_425\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_341\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_41:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_427\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_342\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_343:\n        /* \"#utility.yul\":4103:4127   */\n      tag_429\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_341\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_430:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_344:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_432\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_343\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_44:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_435\n      tag_325\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4396:4515   */\n    tag_434:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_436\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_344\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_437\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_339\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:4901   */\n    tag_345:\n        /* \"#utility.yul\":4870:4894   */\n      tag_439\n        /* \"#utility.yul\":4888:4893   */\n      dup2\n        /* \"#utility.yul\":4870:4894   */\n      tag_337\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4865:4868   */\n      dup3\n        /* \"#utility.yul\":4858:4895   */\n      mstore\n        /* \"#utility.yul\":4783:4901   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4907:5440   */\n    tag_50:\n        /* \"#utility.yul\":5076:5080   */\n      0x00\n        /* \"#utility.yul\":5114:5116   */\n      0x60\n        /* \"#utility.yul\":5103:5112   */\n      dup3\n        /* \"#utility.yul\":5099:5117   */\n      add\n        /* \"#utility.yul\":5091:5117   */\n      swap1\n      pop\n        /* \"#utility.yul\":5127:5198   */\n      tag_441\n        /* \"#utility.yul\":5195:5196   */\n      0x00\n        /* \"#utility.yul\":5184:5193   */\n      dup4\n        /* \"#utility.yul\":5180:5197   */\n      add\n        /* \"#utility.yul\":5171:5177   */\n      dup7\n        /* \"#utility.yul\":5127:5198   */\n      tag_345\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5208:5280   */\n      tag_442\n        /* \"#utility.yul\":5276:5278   */\n      0x20\n        /* \"#utility.yul\":5265:5274   */\n      dup4\n        /* \"#utility.yul\":5261:5279   */\n      add\n        /* \"#utility.yul\":5252:5258   */\n      dup6\n        /* \"#utility.yul\":5208:5280   */\n      tag_342\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":5327:5336   */\n      dup2\n        /* \"#utility.yul\":5321:5325   */\n      dup2\n        /* \"#utility.yul\":5317:5337   */\n      sub\n        /* \"#utility.yul\":5312:5314   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5297:5315   */\n      add\n        /* \"#utility.yul\":5290:5338   */\n      mstore\n        /* \"#utility.yul\":5355:5433   */\n      tag_443\n        /* \"#utility.yul\":5428:5432   */\n      dup2\n        /* \"#utility.yul\":5419:5425   */\n      dup5\n        /* \"#utility.yul\":5355:5433   */\n      tag_336\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5347:5433   */\n      swap1\n      pop\n        /* \"#utility.yul\":4907:5440   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5446:5668   */\n    tag_54:\n        /* \"#utility.yul\":5539:5543   */\n      0x00\n        /* \"#utility.yul\":5577:5579   */\n      0x20\n        /* \"#utility.yul\":5566:5575   */\n      dup3\n        /* \"#utility.yul\":5562:5580   */\n      add\n        /* \"#utility.yul\":5554:5580   */\n      swap1\n      pop\n        /* \"#utility.yul\":5590:5661   */\n      tag_445\n        /* \"#utility.yul\":5658:5659   */\n      0x00\n        /* \"#utility.yul\":5647:5656   */\n      dup4\n        /* \"#utility.yul\":5643:5660   */\n      add\n        /* \"#utility.yul\":5634:5640   */\n      dup5\n        /* \"#utility.yul\":5590:5661   */\n      tag_345\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5446:5668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5674:6293   */\n    tag_57:\n        /* \"#utility.yul\":5751:5757   */\n      0x00\n        /* \"#utility.yul\":5759:5765   */\n      dup1\n        /* \"#utility.yul\":5767:5773   */\n      0x00\n        /* \"#utility.yul\":5816:5818   */\n      0x60\n        /* \"#utility.yul\":5804:5813   */\n      dup5\n        /* \"#utility.yul\":5795:5802   */\n      dup7\n        /* \"#utility.yul\":5791:5814   */\n      sub\n        /* \"#utility.yul\":5787:5819   */\n      slt\n        /* \"#utility.yul\":5784:5903   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":5822:5901   */\n      tag_448\n      tag_325\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5784:5903   */\n    tag_447:\n        /* \"#utility.yul\":5942:5943   */\n      0x00\n        /* \"#utility.yul\":5967:6020   */\n      tag_449\n        /* \"#utility.yul\":6012:6019   */\n      dup7\n        /* \"#utility.yul\":6003:6009   */\n      dup3\n        /* \"#utility.yul\":5992:6001   */\n      dup8\n        /* \"#utility.yul\":5988:6010   */\n      add\n        /* \"#utility.yul\":5967:6020   */\n      tag_344\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5957:6020   */\n      swap4\n      pop\n        /* \"#utility.yul\":5913:6030   */\n      pop\n        /* \"#utility.yul\":6069:6071   */\n      0x20\n        /* \"#utility.yul\":6095:6148   */\n      tag_450\n        /* \"#utility.yul\":6140:6147   */\n      dup7\n        /* \"#utility.yul\":6131:6137   */\n      dup3\n        /* \"#utility.yul\":6120:6129   */\n      dup8\n        /* \"#utility.yul\":6116:6138   */\n      add\n        /* \"#utility.yul\":6095:6148   */\n      tag_344\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6085:6148   */\n      swap3\n      pop\n        /* \"#utility.yul\":6040:6158   */\n      pop\n        /* \"#utility.yul\":6197:6199   */\n      0x40\n        /* \"#utility.yul\":6223:6276   */\n      tag_451\n        /* \"#utility.yul\":6268:6275   */\n      dup7\n        /* \"#utility.yul\":6259:6265   */\n      dup3\n        /* \"#utility.yul\":6248:6257   */\n      dup8\n        /* \"#utility.yul\":6244:6266   */\n      add\n        /* \"#utility.yul\":6223:6276   */\n      tag_339\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6213:6276   */\n      swap2\n      pop\n        /* \"#utility.yul\":6168:6286   */\n      pop\n        /* \"#utility.yul\":5674:6293   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6299:6628   */\n    tag_76:\n        /* \"#utility.yul\":6358:6364   */\n      0x00\n        /* \"#utility.yul\":6407:6409   */\n      0x20\n        /* \"#utility.yul\":6395:6404   */\n      dup3\n        /* \"#utility.yul\":6386:6393   */\n      dup5\n        /* \"#utility.yul\":6382:6405   */\n      sub\n        /* \"#utility.yul\":6378:6410   */\n      slt\n        /* \"#utility.yul\":6375:6494   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":6413:6492   */\n      tag_454\n      tag_325\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6375:6494   */\n    tag_453:\n        /* \"#utility.yul\":6533:6534   */\n      0x00\n        /* \"#utility.yul\":6558:6611   */\n      tag_455\n        /* \"#utility.yul\":6603:6610   */\n      dup5\n        /* \"#utility.yul\":6594:6600   */\n      dup3\n        /* \"#utility.yul\":6583:6592   */\n      dup6\n        /* \"#utility.yul\":6579:6601   */\n      add\n        /* \"#utility.yul\":6558:6611   */\n      tag_344\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6548:6611   */\n      swap2\n      pop\n        /* \"#utility.yul\":6504:6621   */\n      pop\n        /* \"#utility.yul\":6299:6628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6634:6750   */\n    tag_346:\n        /* \"#utility.yul\":6704:6725   */\n      tag_457\n        /* \"#utility.yul\":6719:6724   */\n      dup2\n        /* \"#utility.yul\":6704:6725   */\n      tag_330\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6697:6702   */\n      dup2\n        /* \"#utility.yul\":6694:6726   */\n      eq\n        /* \"#utility.yul\":6684:6744   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":6740:6741   */\n      0x00\n        /* \"#utility.yul\":6737:6738   */\n      dup1\n        /* \"#utility.yul\":6730:6742   */\n      revert\n        /* \"#utility.yul\":6684:6744   */\n    tag_458:\n        /* \"#utility.yul\":6634:6750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6756:6889   */\n    tag_347:\n        /* \"#utility.yul\":6799:6804   */\n      0x00\n        /* \"#utility.yul\":6837:6843   */\n      dup2\n        /* \"#utility.yul\":6824:6844   */\n      calldataload\n        /* \"#utility.yul\":6815:6844   */\n      swap1\n      pop\n        /* \"#utility.yul\":6853:6883   */\n      tag_460\n        /* \"#utility.yul\":6877:6882   */\n      dup2\n        /* \"#utility.yul\":6853:6883   */\n      tag_346\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6756:6889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6895:7363   */\n    tag_87:\n        /* \"#utility.yul\":6960:6966   */\n      0x00\n        /* \"#utility.yul\":6968:6974   */\n      dup1\n        /* \"#utility.yul\":7017:7019   */\n      0x40\n        /* \"#utility.yul\":7005:7014   */\n      dup4\n        /* \"#utility.yul\":6996:7003   */\n      dup6\n        /* \"#utility.yul\":6992:7015   */\n      sub\n        /* \"#utility.yul\":6988:7020   */\n      slt\n        /* \"#utility.yul\":6985:7104   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":7023:7102   */\n      tag_463\n      tag_325\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6985:7104   */\n    tag_462:\n        /* \"#utility.yul\":7143:7144   */\n      0x00\n        /* \"#utility.yul\":7168:7221   */\n      tag_464\n        /* \"#utility.yul\":7213:7220   */\n      dup6\n        /* \"#utility.yul\":7204:7210   */\n      dup3\n        /* \"#utility.yul\":7193:7202   */\n      dup7\n        /* \"#utility.yul\":7189:7211   */\n      add\n        /* \"#utility.yul\":7168:7221   */\n      tag_344\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7158:7221   */\n      swap3\n      pop\n        /* \"#utility.yul\":7114:7231   */\n      pop\n        /* \"#utility.yul\":7270:7272   */\n      0x20\n        /* \"#utility.yul\":7296:7346   */\n      tag_465\n        /* \"#utility.yul\":7338:7345   */\n      dup6\n        /* \"#utility.yul\":7329:7335   */\n      dup3\n        /* \"#utility.yul\":7318:7327   */\n      dup7\n        /* \"#utility.yul\":7314:7336   */\n      add\n        /* \"#utility.yul\":7296:7346   */\n      tag_347\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":7286:7346   */\n      swap2\n      pop\n        /* \"#utility.yul\":7241:7356   */\n      pop\n        /* \"#utility.yul\":6895:7363   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7369:7486   */\n    tag_348:\n        /* \"#utility.yul\":7478:7479   */\n      0x00\n        /* \"#utility.yul\":7475:7476   */\n      dup1\n        /* \"#utility.yul\":7468:7480   */\n      revert\n        /* \"#utility.yul\":7492:7609   */\n    tag_349:\n        /* \"#utility.yul\":7601:7602   */\n      0x00\n        /* \"#utility.yul\":7598:7599   */\n      dup1\n        /* \"#utility.yul\":7591:7603   */\n      revert\n        /* \"#utility.yul\":7615:7795   */\n    tag_350:\n        /* \"#utility.yul\":7663:7740   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7660:7661   */\n      0x00\n        /* \"#utility.yul\":7653:7741   */\n      mstore\n        /* \"#utility.yul\":7760:7764   */\n      0x41\n        /* \"#utility.yul\":7757:7758   */\n      0x04\n        /* \"#utility.yul\":7750:7765   */\n      mstore\n        /* \"#utility.yul\":7784:7788   */\n      0x24\n        /* \"#utility.yul\":7781:7782   */\n      0x00\n        /* \"#utility.yul\":7774:7789   */\n      revert\n        /* \"#utility.yul\":7801:8082   */\n    tag_351:\n        /* \"#utility.yul\":7884:7911   */\n      tag_470\n        /* \"#utility.yul\":7906:7910   */\n      dup3\n        /* \"#utility.yul\":7884:7911   */\n      tag_335\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":7876:7882   */\n      dup2\n        /* \"#utility.yul\":7872:7912   */\n      add\n        /* \"#utility.yul\":8014:8020   */\n      dup2\n        /* \"#utility.yul\":8002:8012   */\n      dup2\n        /* \"#utility.yul\":7999:8021   */\n      lt\n        /* \"#utility.yul\":7978:7996   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7966:7976   */\n      dup3\n        /* \"#utility.yul\":7963:7997   */\n      gt\n        /* \"#utility.yul\":7960:8022   */\n      or\n        /* \"#utility.yul\":7957:8045   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":8025:8043   */\n      tag_472\n      tag_350\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7957:8045   */\n    tag_471:\n        /* \"#utility.yul\":8065:8075   */\n      dup1\n        /* \"#utility.yul\":8061:8063   */\n      0x40\n        /* \"#utility.yul\":8054:8076   */\n      mstore\n        /* \"#utility.yul\":7844:8082   */\n      pop\n        /* \"#utility.yul\":7801:8082   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8088:8217   */\n    tag_352:\n        /* \"#utility.yul\":8122:8128   */\n      0x00\n        /* \"#utility.yul\":8149:8169   */\n      tag_474\n      tag_324\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":8139:8169   */\n      swap1\n      pop\n        /* \"#utility.yul\":8178:8211   */\n      tag_475\n        /* \"#utility.yul\":8206:8210   */\n      dup3\n        /* \"#utility.yul\":8198:8204   */\n      dup3\n        /* \"#utility.yul\":8178:8211   */\n      tag_351\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":8088:8217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8223:8530   */\n    tag_353:\n        /* \"#utility.yul\":8284:8288   */\n      0x00\n        /* \"#utility.yul\":8374:8392   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8366:8372   */\n      dup3\n        /* \"#utility.yul\":8363:8393   */\n      gt\n        /* \"#utility.yul\":8360:8416   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":8396:8414   */\n      tag_478\n      tag_350\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":8360:8416   */\n    tag_477:\n        /* \"#utility.yul\":8434:8463   */\n      tag_479\n        /* \"#utility.yul\":8456:8462   */\n      dup3\n        /* \"#utility.yul\":8434:8463   */\n      tag_335\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8426:8463   */\n      swap1\n      pop\n        /* \"#utility.yul\":8518:8522   */\n      0x20\n        /* \"#utility.yul\":8512:8516   */\n      dup2\n        /* \"#utility.yul\":8508:8523   */\n      add\n        /* \"#utility.yul\":8500:8523   */\n      swap1\n      pop\n        /* \"#utility.yul\":8223:8530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8536:8684   */\n    tag_354:\n        /* \"#utility.yul\":8634:8640   */\n      dup3\n        /* \"#utility.yul\":8629:8632   */\n      dup2\n        /* \"#utility.yul\":8624:8627   */\n      dup4\n        /* \"#utility.yul\":8611:8641   */\n      calldatacopy\n        /* \"#utility.yul\":8675:8676   */\n      0x00\n        /* \"#utility.yul\":8666:8672   */\n      dup4\n        /* \"#utility.yul\":8661:8664   */\n      dup4\n        /* \"#utility.yul\":8657:8673   */\n      add\n        /* \"#utility.yul\":8650:8677   */\n      mstore\n        /* \"#utility.yul\":8536:8684   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8690:9113   */\n    tag_355:\n        /* \"#utility.yul\":8767:8772   */\n      0x00\n        /* \"#utility.yul\":8792:8857   */\n      tag_482\n        /* \"#utility.yul\":8808:8856   */\n      tag_483\n        /* \"#utility.yul\":8849:8855   */\n      dup5\n        /* \"#utility.yul\":8808:8856   */\n      tag_353\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8792:8857   */\n      tag_352\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8783:8857   */\n      swap1\n      pop\n        /* \"#utility.yul\":8880:8886   */\n      dup3\n        /* \"#utility.yul\":8873:8878   */\n      dup2\n        /* \"#utility.yul\":8866:8887   */\n      mstore\n        /* \"#utility.yul\":8918:8922   */\n      0x20\n        /* \"#utility.yul\":8911:8916   */\n      dup2\n        /* \"#utility.yul\":8907:8923   */\n      add\n        /* \"#utility.yul\":8956:8959   */\n      dup5\n        /* \"#utility.yul\":8947:8953   */\n      dup5\n        /* \"#utility.yul\":8942:8945   */\n      dup5\n        /* \"#utility.yul\":8938:8954   */\n      add\n        /* \"#utility.yul\":8935:8960   */\n      gt\n        /* \"#utility.yul\":8932:9044   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":8963:9042   */\n      tag_485\n      tag_349\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8932:9044   */\n    tag_484:\n        /* \"#utility.yul\":9053:9107   */\n      tag_486\n        /* \"#utility.yul\":9100:9106   */\n      dup5\n        /* \"#utility.yul\":9095:9098   */\n      dup3\n        /* \"#utility.yul\":9090:9093   */\n      dup6\n        /* \"#utility.yul\":9053:9107   */\n      tag_354\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8773:9113   */\n      pop\n        /* \"#utility.yul\":8690:9113   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9132:9470   */\n    tag_356:\n        /* \"#utility.yul\":9187:9192   */\n      0x00\n        /* \"#utility.yul\":9236:9239   */\n      dup3\n        /* \"#utility.yul\":9229:9233   */\n      0x1f\n        /* \"#utility.yul\":9221:9227   */\n      dup4\n        /* \"#utility.yul\":9217:9234   */\n      add\n        /* \"#utility.yul\":9213:9240   */\n      slt\n        /* \"#utility.yul\":9203:9325   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":9244:9323   */\n      tag_489\n      tag_348\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9203:9325   */\n    tag_488:\n        /* \"#utility.yul\":9361:9367   */\n      dup2\n        /* \"#utility.yul\":9348:9368   */\n      calldataload\n        /* \"#utility.yul\":9386:9464   */\n      tag_490\n        /* \"#utility.yul\":9460:9463   */\n      dup5\n        /* \"#utility.yul\":9452:9458   */\n      dup3\n        /* \"#utility.yul\":9445:9449   */\n      0x20\n        /* \"#utility.yul\":9437:9443   */\n      dup7\n        /* \"#utility.yul\":9433:9450   */\n      add\n        /* \"#utility.yul\":9386:9464   */\n      tag_355\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":9377:9464   */\n      swap2\n      pop\n        /* \"#utility.yul\":9193:9470   */\n      pop\n        /* \"#utility.yul\":9132:9470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9476:10419   */\n    tag_94:\n        /* \"#utility.yul\":9571:9577   */\n      0x00\n        /* \"#utility.yul\":9579:9585   */\n      dup1\n        /* \"#utility.yul\":9587:9593   */\n      0x00\n        /* \"#utility.yul\":9595:9601   */\n      dup1\n        /* \"#utility.yul\":9644:9647   */\n      0x80\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9623:9630   */\n      dup8\n        /* \"#utility.yul\":9619:9642   */\n      sub\n        /* \"#utility.yul\":9615:9648   */\n      slt\n        /* \"#utility.yul\":9612:9732   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":9651:9730   */\n      tag_493\n      tag_325\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":9612:9732   */\n    tag_492:\n        /* \"#utility.yul\":9771:9772   */\n      0x00\n        /* \"#utility.yul\":9796:9849   */\n      tag_494\n        /* \"#utility.yul\":9841:9848   */\n      dup8\n        /* \"#utility.yul\":9832:9838   */\n      dup3\n        /* \"#utility.yul\":9821:9830   */\n      dup9\n        /* \"#utility.yul\":9817:9839   */\n      add\n        /* \"#utility.yul\":9796:9849   */\n      tag_344\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9786:9849   */\n      swap5\n      pop\n        /* \"#utility.yul\":9742:9859   */\n      pop\n        /* \"#utility.yul\":9898:9900   */\n      0x20\n        /* \"#utility.yul\":9924:9977   */\n      tag_495\n        /* \"#utility.yul\":9969:9976   */\n      dup8\n        /* \"#utility.yul\":9960:9966   */\n      dup3\n        /* \"#utility.yul\":9949:9958   */\n      dup9\n        /* \"#utility.yul\":9945:9967   */\n      add\n        /* \"#utility.yul\":9924:9977   */\n      tag_344\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":9914:9977   */\n      swap4\n      pop\n        /* \"#utility.yul\":9869:9987   */\n      pop\n        /* \"#utility.yul\":10026:10028   */\n      0x40\n        /* \"#utility.yul\":10052:10105   */\n      tag_496\n        /* \"#utility.yul\":10097:10104   */\n      dup8\n        /* \"#utility.yul\":10088:10094   */\n      dup3\n        /* \"#utility.yul\":10077:10086   */\n      dup9\n        /* \"#utility.yul\":10073:10095   */\n      add\n        /* \"#utility.yul\":10052:10105   */\n      tag_339\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10042:10105   */\n      swap3\n      pop\n        /* \"#utility.yul\":9997:10115   */\n      pop\n        /* \"#utility.yul\":10182:10184   */\n      0x60\n        /* \"#utility.yul\":10171:10180   */\n      dup6\n        /* \"#utility.yul\":10167:10185   */\n      add\n        /* \"#utility.yul\":10154:10186   */\n      calldataload\n        /* \"#utility.yul\":10213:10231   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10205:10211   */\n      dup2\n        /* \"#utility.yul\":10202:10232   */\n      gt\n        /* \"#utility.yul\":10199:10316   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":10235:10314   */\n      tag_498\n      tag_326\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10199:10316   */\n    tag_497:\n        /* \"#utility.yul\":10340:10402   */\n      tag_499\n        /* \"#utility.yul\":10394:10401   */\n      dup8\n        /* \"#utility.yul\":10385:10391   */\n      dup3\n        /* \"#utility.yul\":10374:10383   */\n      dup9\n        /* \"#utility.yul\":10370:10392   */\n      add\n        /* \"#utility.yul\":10340:10402   */\n      tag_356\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":10330:10402   */\n      swap2\n      pop\n        /* \"#utility.yul\":10125:10412   */\n      pop\n        /* \"#utility.yul\":9476:10419   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10425:10733   */\n    tag_357:\n        /* \"#utility.yul\":10487:10491   */\n      0x00\n        /* \"#utility.yul\":10577:10595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10569:10575   */\n      dup3\n        /* \"#utility.yul\":10566:10596   */\n      gt\n        /* \"#utility.yul\":10563:10619   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":10599:10617   */\n      tag_502\n      tag_350\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10563:10619   */\n    tag_501:\n        /* \"#utility.yul\":10637:10666   */\n      tag_503\n        /* \"#utility.yul\":10659:10665   */\n      dup3\n        /* \"#utility.yul\":10637:10666   */\n      tag_335\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10629:10666   */\n      swap1\n      pop\n        /* \"#utility.yul\":10721:10725   */\n      0x20\n        /* \"#utility.yul\":10715:10719   */\n      dup2\n        /* \"#utility.yul\":10711:10726   */\n      add\n        /* \"#utility.yul\":10703:10726   */\n      swap1\n      pop\n        /* \"#utility.yul\":10425:10733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10739:11164   */\n    tag_358:\n        /* \"#utility.yul\":10817:10822   */\n      0x00\n        /* \"#utility.yul\":10842:10908   */\n      tag_505\n        /* \"#utility.yul\":10858:10907   */\n      tag_506\n        /* \"#utility.yul\":10900:10906   */\n      dup5\n        /* \"#utility.yul\":10858:10907   */\n      tag_357\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":10842:10908   */\n      tag_352\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10833:10908   */\n      swap1\n      pop\n        /* \"#utility.yul\":10931:10937   */\n      dup3\n        /* \"#utility.yul\":10924:10929   */\n      dup2\n        /* \"#utility.yul\":10917:10938   */\n      mstore\n        /* \"#utility.yul\":10969:10973   */\n      0x20\n        /* \"#utility.yul\":10962:10967   */\n      dup2\n        /* \"#utility.yul\":10958:10974   */\n      add\n        /* \"#utility.yul\":11007:11010   */\n      dup5\n        /* \"#utility.yul\":10998:11004   */\n      dup5\n        /* \"#utility.yul\":10993:10996   */\n      dup5\n        /* \"#utility.yul\":10989:11005   */\n      add\n        /* \"#utility.yul\":10986:11011   */\n      gt\n        /* \"#utility.yul\":10983:11095   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":11014:11093   */\n      tag_508\n      tag_349\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10983:11095   */\n    tag_507:\n        /* \"#utility.yul\":11104:11158   */\n      tag_509\n        /* \"#utility.yul\":11151:11157   */\n      dup5\n        /* \"#utility.yul\":11146:11149   */\n      dup3\n        /* \"#utility.yul\":11141:11144   */\n      dup6\n        /* \"#utility.yul\":11104:11158   */\n      tag_354\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10823:11164   */\n      pop\n        /* \"#utility.yul\":10739:11164   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11184:11524   */\n    tag_359:\n        /* \"#utility.yul\":11240:11245   */\n      0x00\n        /* \"#utility.yul\":11289:11292   */\n      dup3\n        /* \"#utility.yul\":11282:11286   */\n      0x1f\n        /* \"#utility.yul\":11274:11280   */\n      dup4\n        /* \"#utility.yul\":11270:11287   */\n      add\n        /* \"#utility.yul\":11266:11293   */\n      slt\n        /* \"#utility.yul\":11256:11378   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":11297:11376   */\n      tag_512\n      tag_348\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":11256:11378   */\n    tag_511:\n        /* \"#utility.yul\":11414:11420   */\n      dup2\n        /* \"#utility.yul\":11401:11421   */\n      calldataload\n        /* \"#utility.yul\":11439:11518   */\n      tag_513\n        /* \"#utility.yul\":11514:11517   */\n      dup5\n        /* \"#utility.yul\":11506:11512   */\n      dup3\n        /* \"#utility.yul\":11499:11503   */\n      0x20\n        /* \"#utility.yul\":11491:11497   */\n      dup7\n        /* \"#utility.yul\":11487:11504   */\n      add\n        /* \"#utility.yul\":11439:11518   */\n      tag_358\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":11430:11518   */\n      swap2\n      pop\n        /* \"#utility.yul\":11246:11524   */\n      pop\n        /* \"#utility.yul\":11184:11524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11530:12039   */\n    tag_102:\n        /* \"#utility.yul\":11599:11605   */\n      0x00\n        /* \"#utility.yul\":11648:11650   */\n      0x20\n        /* \"#utility.yul\":11636:11645   */\n      dup3\n        /* \"#utility.yul\":11627:11634   */\n      dup5\n        /* \"#utility.yul\":11623:11646   */\n      sub\n        /* \"#utility.yul\":11619:11651   */\n      slt\n        /* \"#utility.yul\":11616:11735   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":11654:11733   */\n      tag_516\n      tag_325\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":11616:11735   */\n    tag_515:\n        /* \"#utility.yul\":11802:11803   */\n      0x00\n        /* \"#utility.yul\":11791:11800   */\n      dup3\n        /* \"#utility.yul\":11787:11804   */\n      add\n        /* \"#utility.yul\":11774:11805   */\n      calldataload\n        /* \"#utility.yul\":11832:11850   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11824:11830   */\n      dup2\n        /* \"#utility.yul\":11821:11851   */\n      gt\n        /* \"#utility.yul\":11818:11935   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":11854:11933   */\n      tag_518\n      tag_326\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11818:11935   */\n    tag_517:\n        /* \"#utility.yul\":11959:12022   */\n      tag_519\n        /* \"#utility.yul\":12014:12021   */\n      dup5\n        /* \"#utility.yul\":12005:12011   */\n      dup3\n        /* \"#utility.yul\":11994:12003   */\n      dup6\n        /* \"#utility.yul\":11990:12012   */\n      add\n        /* \"#utility.yul\":11959:12022   */\n      tag_359\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":11949:12022   */\n      swap2\n      pop\n        /* \"#utility.yul\":11745:12032   */\n      pop\n        /* \"#utility.yul\":11530:12039   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12045:12519   */\n    tag_107:\n        /* \"#utility.yul\":12113:12119   */\n      0x00\n        /* \"#utility.yul\":12121:12127   */\n      dup1\n        /* \"#utility.yul\":12170:12172   */\n      0x40\n        /* \"#utility.yul\":12158:12167   */\n      dup4\n        /* \"#utility.yul\":12149:12156   */\n      dup6\n        /* \"#utility.yul\":12145:12168   */\n      sub\n        /* \"#utility.yul\":12141:12173   */\n      slt\n        /* \"#utility.yul\":12138:12257   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":12176:12255   */\n      tag_522\n      tag_325\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":12138:12257   */\n    tag_521:\n        /* \"#utility.yul\":12296:12297   */\n      0x00\n        /* \"#utility.yul\":12321:12374   */\n      tag_523\n        /* \"#utility.yul\":12366:12373   */\n      dup6\n        /* \"#utility.yul\":12357:12363   */\n      dup3\n        /* \"#utility.yul\":12346:12355   */\n      dup7\n        /* \"#utility.yul\":12342:12364   */\n      add\n        /* \"#utility.yul\":12321:12374   */\n      tag_344\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":12311:12374   */\n      swap3\n      pop\n        /* \"#utility.yul\":12267:12384   */\n      pop\n        /* \"#utility.yul\":12423:12425   */\n      0x20\n        /* \"#utility.yul\":12449:12502   */\n      tag_524\n        /* \"#utility.yul\":12494:12501   */\n      dup6\n        /* \"#utility.yul\":12485:12491   */\n      dup3\n        /* \"#utility.yul\":12474:12483   */\n      dup7\n        /* \"#utility.yul\":12470:12492   */\n      add\n        /* \"#utility.yul\":12449:12502   */\n      tag_344\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":12439:12502   */\n      swap2\n      pop\n        /* \"#utility.yul\":12394:12512   */\n      pop\n        /* \"#utility.yul\":12045:12519   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12525:12705   */\n    tag_360:\n        /* \"#utility.yul\":12573:12650   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12570:12571   */\n      0x00\n        /* \"#utility.yul\":12563:12651   */\n      mstore\n        /* \"#utility.yul\":12670:12674   */\n      0x22\n        /* \"#utility.yul\":12667:12668   */\n      0x04\n        /* \"#utility.yul\":12660:12675   */\n      mstore\n        /* \"#utility.yul\":12694:12698   */\n      0x24\n        /* \"#utility.yul\":12691:12692   */\n      0x00\n        /* \"#utility.yul\":12684:12699   */\n      revert\n        /* \"#utility.yul\":12711:13031   */\n    tag_116:\n        /* \"#utility.yul\":12755:12761   */\n      0x00\n        /* \"#utility.yul\":12792:12793   */\n      0x02\n        /* \"#utility.yul\":12786:12790   */\n      dup3\n        /* \"#utility.yul\":12782:12794   */\n      div\n        /* \"#utility.yul\":12772:12794   */\n      swap1\n      pop\n        /* \"#utility.yul\":12839:12840   */\n      0x01\n        /* \"#utility.yul\":12833:12837   */\n      dup3\n        /* \"#utility.yul\":12829:12841   */\n      and\n        /* \"#utility.yul\":12860:12878   */\n      dup1\n        /* \"#utility.yul\":12850:12931   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":12916:12920   */\n      0x7f\n        /* \"#utility.yul\":12908:12914   */\n      dup3\n        /* \"#utility.yul\":12904:12921   */\n      and\n        /* \"#utility.yul\":12894:12921   */\n      swap2\n      pop\n        /* \"#utility.yul\":12850:12931   */\n    tag_527:\n        /* \"#utility.yul\":12978:12980   */\n      0x20\n        /* \"#utility.yul\":12970:12976   */\n      dup3\n        /* \"#utility.yul\":12967:12981   */\n      lt\n        /* \"#utility.yul\":12947:12965   */\n      dup2\n        /* \"#utility.yul\":12944:12982   */\n      sub\n        /* \"#utility.yul\":12941:13025   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":12997:13015   */\n      tag_529\n      tag_360\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":12941:13025   */\n    tag_528:\n        /* \"#utility.yul\":12762:13031   */\n      pop\n        /* \"#utility.yul\":12711:13031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13037:13479   */\n    tag_145:\n        /* \"#utility.yul\":13186:13190   */\n      0x00\n        /* \"#utility.yul\":13224:13226   */\n      0x60\n        /* \"#utility.yul\":13213:13222   */\n      dup3\n        /* \"#utility.yul\":13209:13227   */\n      add\n        /* \"#utility.yul\":13201:13227   */\n      swap1\n      pop\n        /* \"#utility.yul\":13237:13308   */\n      tag_531\n        /* \"#utility.yul\":13305:13306   */\n      0x00\n        /* \"#utility.yul\":13294:13303   */\n      dup4\n        /* \"#utility.yul\":13290:13307   */\n      add\n        /* \"#utility.yul\":13281:13287   */\n      dup7\n        /* \"#utility.yul\":13237:13308   */\n      tag_342\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":13318:13390   */\n      tag_532\n        /* \"#utility.yul\":13386:13388   */\n      0x20\n        /* \"#utility.yul\":13375:13384   */\n      dup4\n        /* \"#utility.yul\":13371:13389   */\n      add\n        /* \"#utility.yul\":13362:13368   */\n      dup6\n        /* \"#utility.yul\":13318:13390   */\n      tag_345\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":13400:13472   */\n      tag_533\n        /* \"#utility.yul\":13468:13470   */\n      0x40\n        /* \"#utility.yul\":13457:13466   */\n      dup4\n        /* \"#utility.yul\":13453:13471   */\n      add\n        /* \"#utility.yul\":13444:13450   */\n      dup5\n        /* \"#utility.yul\":13400:13472   */\n      tag_342\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":13037:13479   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13485:13817   */\n    tag_150:\n        /* \"#utility.yul\":13606:13610   */\n      0x00\n        /* \"#utility.yul\":13644:13646   */\n      0x40\n        /* \"#utility.yul\":13633:13642   */\n      dup3\n        /* \"#utility.yul\":13629:13647   */\n      add\n        /* \"#utility.yul\":13621:13647   */\n      swap1\n      pop\n        /* \"#utility.yul\":13657:13728   */\n      tag_535\n        /* \"#utility.yul\":13725:13726   */\n      0x00\n        /* \"#utility.yul\":13714:13723   */\n      dup4\n        /* \"#utility.yul\":13710:13727   */\n      add\n        /* \"#utility.yul\":13701:13707   */\n      dup6\n        /* \"#utility.yul\":13657:13728   */\n      tag_342\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":13738:13810   */\n      tag_536\n        /* \"#utility.yul\":13806:13808   */\n      0x20\n        /* \"#utility.yul\":13795:13804   */\n      dup4\n        /* \"#utility.yul\":13791:13809   */\n      add\n        /* \"#utility.yul\":13782:13788   */\n      dup5\n        /* \"#utility.yul\":13738:13810   */\n      tag_345\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":13485:13817   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13823:14003   */\n    tag_159:\n        /* \"#utility.yul\":13871:13948   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13868:13869   */\n      0x00\n        /* \"#utility.yul\":13861:13949   */\n      mstore\n        /* \"#utility.yul\":13968:13972   */\n      0x32\n        /* \"#utility.yul\":13965:13966   */\n      0x04\n        /* \"#utility.yul\":13958:13973   */\n      mstore\n        /* \"#utility.yul\":13992:13996   */\n      0x24\n        /* \"#utility.yul\":13989:13990   */\n      0x00\n        /* \"#utility.yul\":13982:13997   */\n      revert\n        /* \"#utility.yul\":14009:14150   */\n    tag_361:\n        /* \"#utility.yul\":14058:14062   */\n      0x00\n        /* \"#utility.yul\":14081:14084   */\n      dup2\n        /* \"#utility.yul\":14073:14084   */\n      swap1\n      pop\n        /* \"#utility.yul\":14104:14107   */\n      dup2\n        /* \"#utility.yul\":14101:14102   */\n      0x00\n        /* \"#utility.yul\":14094:14108   */\n      mstore\n        /* \"#utility.yul\":14138:14142   */\n      0x20\n        /* \"#utility.yul\":14135:14136   */\n      0x00\n        /* \"#utility.yul\":14125:14143   */\n      keccak256\n        /* \"#utility.yul\":14117:14143   */\n      swap1\n      pop\n        /* \"#utility.yul\":14009:14150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14156:14249   */\n    tag_362:\n        /* \"#utility.yul\":14193:14199   */\n      0x00\n        /* \"#utility.yul\":14240:14242   */\n      0x20\n        /* \"#utility.yul\":14235:14237   */\n      0x1f\n        /* \"#utility.yul\":14228:14233   */\n      dup4\n        /* \"#utility.yul\":14224:14238   */\n      add\n        /* \"#utility.yul\":14220:14243   */\n      div\n        /* \"#utility.yul\":14210:14243   */\n      swap1\n      pop\n        /* \"#utility.yul\":14156:14249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14255:14362   */\n    tag_363:\n        /* \"#utility.yul\":14299:14307   */\n      0x00\n        /* \"#utility.yul\":14349:14354   */\n      dup3\n        /* \"#utility.yul\":14343:14347   */\n      dup3\n        /* \"#utility.yul\":14339:14355   */\n      shl\n        /* \"#utility.yul\":14318:14355   */\n      swap1\n      pop\n        /* \"#utility.yul\":14255:14362   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14368:14761   */\n    tag_364:\n        /* \"#utility.yul\":14437:14443   */\n      0x00\n        /* \"#utility.yul\":14487:14488   */\n      0x08\n        /* \"#utility.yul\":14475:14485   */\n      dup4\n        /* \"#utility.yul\":14471:14489   */\n      mul\n        /* \"#utility.yul\":14510:14607   */\n      tag_542\n        /* \"#utility.yul\":14540:14606   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14529:14538   */\n      dup3\n        /* \"#utility.yul\":14510:14607   */\n      tag_363\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":14628:14667   */\n      tag_543\n        /* \"#utility.yul\":14658:14666   */\n      dup7\n        /* \"#utility.yul\":14647:14656   */\n      dup4\n        /* \"#utility.yul\":14628:14667   */\n      tag_363\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":14616:14667   */\n      swap6\n      pop\n        /* \"#utility.yul\":14700:14704   */\n      dup1\n        /* \"#utility.yul\":14696:14705   */\n      not\n        /* \"#utility.yul\":14689:14694   */\n      dup5\n        /* \"#utility.yul\":14685:14706   */\n      and\n        /* \"#utility.yul\":14676:14706   */\n      swap4\n      pop\n        /* \"#utility.yul\":14749:14753   */\n      dup1\n        /* \"#utility.yul\":14739:14747   */\n      dup7\n        /* \"#utility.yul\":14735:14754   */\n      and\n        /* \"#utility.yul\":14728:14733   */\n      dup5\n        /* \"#utility.yul\":14725:14755   */\n      or\n        /* \"#utility.yul\":14715:14755   */\n      swap3\n      pop\n        /* \"#utility.yul\":14444:14761   */\n      pop\n      pop\n        /* \"#utility.yul\":14368:14761   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14767:14827   */\n    tag_365:\n        /* \"#utility.yul\":14795:14798   */\n      0x00\n        /* \"#utility.yul\":14816:14821   */\n      dup2\n        /* \"#utility.yul\":14809:14821   */\n      swap1\n      pop\n        /* \"#utility.yul\":14767:14827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14833:14975   */\n    tag_366:\n        /* \"#utility.yul\":14883:14892   */\n      0x00\n        /* \"#utility.yul\":14916:14969   */\n      tag_546\n        /* \"#utility.yul\":14934:14968   */\n      tag_547\n        /* \"#utility.yul\":14943:14967   */\n      tag_548\n        /* \"#utility.yul\":14961:14966   */\n      dup5\n        /* \"#utility.yul\":14943:14967   */\n      tag_337\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":14934:14968   */\n      tag_365\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":14916:14969   */\n      tag_337\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14903:14969   */\n      swap1\n      pop\n        /* \"#utility.yul\":14833:14975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14981:15056   */\n    tag_367:\n        /* \"#utility.yul\":15024:15027   */\n      0x00\n        /* \"#utility.yul\":15045:15050   */\n      dup2\n        /* \"#utility.yul\":15038:15050   */\n      swap1\n      pop\n        /* \"#utility.yul\":14981:15056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15062:15331   */\n    tag_368:\n        /* \"#utility.yul\":15172:15211   */\n      tag_551\n        /* \"#utility.yul\":15203:15210   */\n      dup4\n        /* \"#utility.yul\":15172:15211   */\n      tag_366\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15233:15324   */\n      tag_552\n        /* \"#utility.yul\":15282:15323   */\n      tag_553\n        /* \"#utility.yul\":15306:15322   */\n      dup3\n        /* \"#utility.yul\":15282:15323   */\n      tag_367\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":15274:15280   */\n      dup5\n        /* \"#utility.yul\":15267:15271   */\n      dup5\n        /* \"#utility.yul\":15261:15272   */\n      sload\n        /* \"#utility.yul\":15233:15324   */\n      tag_364\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":15227:15231   */\n      dup3\n        /* \"#utility.yul\":15220:15325   */\n      sstore\n        /* \"#utility.yul\":15138:15331   */\n      pop\n        /* \"#utility.yul\":15062:15331   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15337:15410   */\n    tag_369:\n        /* \"#utility.yul\":15382:15385   */\n      0x00\n        /* \"#utility.yul\":15337:15410   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15416:15605   */\n    tag_370:\n        /* \"#utility.yul\":15493:15525   */\n      tag_556\n      tag_369\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15534:15599   */\n      tag_557\n        /* \"#utility.yul\":15592:15598   */\n      dup2\n        /* \"#utility.yul\":15584:15590   */\n      dup5\n        /* \"#utility.yul\":15578:15582   */\n      dup5\n        /* \"#utility.yul\":15534:15599   */\n      tag_368\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15469:15605   */\n      pop\n        /* \"#utility.yul\":15416:15605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15611:15797   */\n    tag_371:\n        /* \"#utility.yul\":15671:15791   */\n    tag_559:\n        /* \"#utility.yul\":15688:15691   */\n      dup2\n        /* \"#utility.yul\":15681:15686   */\n      dup2\n        /* \"#utility.yul\":15678:15692   */\n      lt\n        /* \"#utility.yul\":15671:15791   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":15742:15781   */\n      tag_562\n        /* \"#utility.yul\":15779:15780   */\n      0x00\n        /* \"#utility.yul\":15772:15777   */\n      dup3\n        /* \"#utility.yul\":15742:15781   */\n      tag_370\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":15715:15716   */\n      0x01\n        /* \"#utility.yul\":15708:15713   */\n      dup2\n        /* \"#utility.yul\":15704:15717   */\n      add\n        /* \"#utility.yul\":15695:15717   */\n      swap1\n      pop\n        /* \"#utility.yul\":15671:15791   */\n      jump(tag_559)\n    tag_561:\n        /* \"#utility.yul\":15611:15797   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15803:16346   */\n    tag_372:\n        /* \"#utility.yul\":15904:15906   */\n      0x1f\n        /* \"#utility.yul\":15899:15902   */\n      dup3\n        /* \"#utility.yul\":15896:15907   */\n      gt\n        /* \"#utility.yul\":15893:16339   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":15938:15976   */\n      tag_565\n        /* \"#utility.yul\":15970:15975   */\n      dup2\n        /* \"#utility.yul\":15938:15976   */\n      tag_361\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":16022:16051   */\n      tag_566\n        /* \"#utility.yul\":16040:16050   */\n      dup5\n        /* \"#utility.yul\":16022:16051   */\n      tag_362\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":16012:16020   */\n      dup2\n        /* \"#utility.yul\":16008:16052   */\n      add\n        /* \"#utility.yul\":16205:16207   */\n      0x20\n        /* \"#utility.yul\":16193:16203   */\n      dup6\n        /* \"#utility.yul\":16190:16208   */\n      lt\n        /* \"#utility.yul\":16187:16236   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":16226:16234   */\n      dup2\n        /* \"#utility.yul\":16211:16234   */\n      swap1\n      pop\n        /* \"#utility.yul\":16187:16236   */\n    tag_567:\n        /* \"#utility.yul\":16249:16329   */\n      tag_568\n        /* \"#utility.yul\":16305:16327   */\n      tag_569\n        /* \"#utility.yul\":16323:16326   */\n      dup6\n        /* \"#utility.yul\":16305:16327   */\n      tag_362\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16295:16303   */\n      dup4\n        /* \"#utility.yul\":16291:16328   */\n      add\n        /* \"#utility.yul\":16278:16289   */\n      dup3\n        /* \"#utility.yul\":16249:16329   */\n      tag_371\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":15908:16339   */\n      pop\n      pop\n        /* \"#utility.yul\":15893:16339   */\n    tag_564:\n        /* \"#utility.yul\":15803:16346   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16352:16469   */\n    tag_373:\n        /* \"#utility.yul\":16406:16414   */\n      0x00\n        /* \"#utility.yul\":16456:16461   */\n      dup3\n        /* \"#utility.yul\":16450:16454   */\n      dup3\n        /* \"#utility.yul\":16446:16462   */\n      shr\n        /* \"#utility.yul\":16425:16462   */\n      swap1\n      pop\n        /* \"#utility.yul\":16352:16469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16475:16644   */\n    tag_374:\n        /* \"#utility.yul\":16519:16525   */\n      0x00\n        /* \"#utility.yul\":16552:16603   */\n      tag_572\n        /* \"#utility.yul\":16600:16601   */\n      0x00\n        /* \"#utility.yul\":16596:16602   */\n      not\n        /* \"#utility.yul\":16588:16593   */\n      dup5\n        /* \"#utility.yul\":16585:16586   */\n      0x08\n        /* \"#utility.yul\":16581:16594   */\n      mul\n        /* \"#utility.yul\":16552:16603   */\n      tag_373\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16548:16604   */\n      not\n        /* \"#utility.yul\":16633:16637   */\n      dup1\n        /* \"#utility.yul\":16627:16631   */\n      dup4\n        /* \"#utility.yul\":16623:16638   */\n      and\n        /* \"#utility.yul\":16613:16638   */\n      swap2\n      pop\n        /* \"#utility.yul\":16526:16644   */\n      pop\n        /* \"#utility.yul\":16475:16644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16649:16944   */\n    tag_375:\n        /* \"#utility.yul\":16725:16729   */\n      0x00\n        /* \"#utility.yul\":16871:16900   */\n      tag_574\n        /* \"#utility.yul\":16896:16899   */\n      dup4\n        /* \"#utility.yul\":16890:16894   */\n      dup4\n        /* \"#utility.yul\":16871:16900   */\n      tag_374\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":16863:16900   */\n      swap2\n      pop\n        /* \"#utility.yul\":16933:16936   */\n      dup3\n        /* \"#utility.yul\":16930:16931   */\n      0x02\n        /* \"#utility.yul\":16926:16937   */\n      mul\n        /* \"#utility.yul\":16920:16924   */\n      dup3\n        /* \"#utility.yul\":16917:16938   */\n      or\n        /* \"#utility.yul\":16909:16938   */\n      swap1\n      pop\n        /* \"#utility.yul\":16649:16944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16949:18344   */\n    tag_196:\n        /* \"#utility.yul\":17066:17103   */\n      tag_576\n        /* \"#utility.yul\":17099:17102   */\n      dup3\n        /* \"#utility.yul\":17066:17103   */\n      tag_332\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17168:17186   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17160:17166   */\n      dup2\n        /* \"#utility.yul\":17157:17187   */\n      gt\n        /* \"#utility.yul\":17154:17210   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":17190:17208   */\n      tag_578\n      tag_350\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":17154:17210   */\n    tag_577:\n        /* \"#utility.yul\":17234:17272   */\n      tag_579\n        /* \"#utility.yul\":17266:17270   */\n      dup3\n        /* \"#utility.yul\":17260:17271   */\n      sload\n        /* \"#utility.yul\":17234:17272   */\n      tag_116\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":17319:17386   */\n      tag_580\n        /* \"#utility.yul\":17379:17385   */\n      dup3\n        /* \"#utility.yul\":17371:17377   */\n      dup3\n        /* \"#utility.yul\":17365:17369   */\n      dup6\n        /* \"#utility.yul\":17319:17386   */\n      tag_372\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":17413:17414   */\n      0x00\n        /* \"#utility.yul\":17437:17441   */\n      0x20\n        /* \"#utility.yul\":17424:17441   */\n      swap1\n      pop\n        /* \"#utility.yul\":17469:17471   */\n      0x1f\n        /* \"#utility.yul\":17461:17467   */\n      dup4\n        /* \"#utility.yul\":17458:17472   */\n      gt\n        /* \"#utility.yul\":17486:17487   */\n      0x01\n        /* \"#utility.yul\":17481:18099   */\n      dup2\n      eq\n      tag_582\n      jumpi\n        /* \"#utility.yul\":18143:18144   */\n      0x00\n        /* \"#utility.yul\":18160:18166   */\n      dup5\n        /* \"#utility.yul\":18157:18234   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":18209:18218   */\n      dup3\n        /* \"#utility.yul\":18204:18207   */\n      dup8\n        /* \"#utility.yul\":18200:18219   */\n      add\n        /* \"#utility.yul\":18194:18220   */\n      mload\n        /* \"#utility.yul\":18185:18220   */\n      swap1\n      pop\n        /* \"#utility.yul\":18157:18234   */\n    tag_583:\n        /* \"#utility.yul\":18260:18327   */\n      tag_584\n        /* \"#utility.yul\":18320:18326   */\n      dup6\n        /* \"#utility.yul\":18313:18318   */\n      dup3\n        /* \"#utility.yul\":18260:18327   */\n      tag_375\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":18254:18258   */\n      dup7\n        /* \"#utility.yul\":18247:18328   */\n      sstore\n        /* \"#utility.yul\":18116:18338   */\n      pop\n        /* \"#utility.yul\":17451:18338   */\n      jump(tag_581)\n        /* \"#utility.yul\":17481:18099   */\n    tag_582:\n        /* \"#utility.yul\":17533:17537   */\n      0x1f\n        /* \"#utility.yul\":17529:17538   */\n      not\n        /* \"#utility.yul\":17521:17527   */\n      dup5\n        /* \"#utility.yul\":17517:17539   */\n      and\n        /* \"#utility.yul\":17567:17604   */\n      tag_585\n        /* \"#utility.yul\":17599:17603   */\n      dup7\n        /* \"#utility.yul\":17567:17604   */\n      tag_361\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":17626:17627   */\n      0x00\n        /* \"#utility.yul\":17640:17848   */\n    tag_586:\n        /* \"#utility.yul\":17654:17661   */\n      dup3\n        /* \"#utility.yul\":17651:17652   */\n      dup2\n        /* \"#utility.yul\":17648:17662   */\n      lt\n        /* \"#utility.yul\":17640:17848   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":17733:17742   */\n      dup5\n        /* \"#utility.yul\":17728:17731   */\n      dup10\n        /* \"#utility.yul\":17724:17743   */\n      add\n        /* \"#utility.yul\":17718:17744   */\n      mload\n        /* \"#utility.yul\":17710:17716   */\n      dup3\n        /* \"#utility.yul\":17703:17745   */\n      sstore\n        /* \"#utility.yul\":17784:17785   */\n      0x01\n        /* \"#utility.yul\":17776:17782   */\n      dup3\n        /* \"#utility.yul\":17772:17786   */\n      add\n        /* \"#utility.yul\":17762:17786   */\n      swap2\n      pop\n        /* \"#utility.yul\":17831:17833   */\n      0x20\n        /* \"#utility.yul\":17820:17829   */\n      dup6\n        /* \"#utility.yul\":17816:17834   */\n      add\n        /* \"#utility.yul\":17803:17834   */\n      swap5\n      pop\n        /* \"#utility.yul\":17677:17681   */\n      0x20\n        /* \"#utility.yul\":17674:17675   */\n      dup2\n        /* \"#utility.yul\":17670:17682   */\n      add\n        /* \"#utility.yul\":17665:17682   */\n      swap1\n      pop\n        /* \"#utility.yul\":17640:17848   */\n      jump(tag_586)\n    tag_588:\n        /* \"#utility.yul\":17876:17882   */\n      dup7\n        /* \"#utility.yul\":17867:17874   */\n      dup4\n        /* \"#utility.yul\":17864:17883   */\n      lt\n        /* \"#utility.yul\":17861:18040   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":17934:17943   */\n      dup5\n        /* \"#utility.yul\":17929:17932   */\n      dup10\n        /* \"#utility.yul\":17925:17944   */\n      add\n        /* \"#utility.yul\":17919:17945   */\n      mload\n        /* \"#utility.yul\":17977:18025   */\n      tag_590\n        /* \"#utility.yul\":18019:18023   */\n      0x1f\n        /* \"#utility.yul\":18011:18017   */\n      dup10\n        /* \"#utility.yul\":18007:18024   */\n      and\n        /* \"#utility.yul\":17996:18005   */\n      dup3\n        /* \"#utility.yul\":17977:18025   */\n      tag_374\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":17969:17975   */\n      dup4\n        /* \"#utility.yul\":17962:18026   */\n      sstore\n        /* \"#utility.yul\":17884:18040   */\n      pop\n        /* \"#utility.yul\":17861:18040   */\n    tag_589:\n        /* \"#utility.yul\":18086:18087   */\n      0x01\n        /* \"#utility.yul\":18082:18083   */\n      0x02\n        /* \"#utility.yul\":18074:18080   */\n      dup9\n        /* \"#utility.yul\":18070:18084   */\n      mul\n        /* \"#utility.yul\":18066:18088   */\n      add\n        /* \"#utility.yul\":18060:18064   */\n      dup9\n        /* \"#utility.yul\":18053:18089   */\n      sstore\n        /* \"#utility.yul\":17488:18099   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17451:18338   */\n    tag_581:\n      pop\n        /* \"#utility.yul\":17041:18344   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16949:18344   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18350:18448   */\n    tag_376:\n        /* \"#utility.yul\":18401:18407   */\n      0x00\n        /* \"#utility.yul\":18435:18440   */\n      dup2\n        /* \"#utility.yul\":18429:18441   */\n      mload\n        /* \"#utility.yul\":18419:18441   */\n      swap1\n      pop\n        /* \"#utility.yul\":18350:18448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18454:18622   */\n    tag_377:\n        /* \"#utility.yul\":18537:18548   */\n      0x00\n        /* \"#utility.yul\":18571:18577   */\n      dup3\n        /* \"#utility.yul\":18566:18569   */\n      dup3\n        /* \"#utility.yul\":18559:18578   */\n      mstore\n        /* \"#utility.yul\":18611:18615   */\n      0x20\n        /* \"#utility.yul\":18606:18609   */\n      dup3\n        /* \"#utility.yul\":18602:18616   */\n      add\n        /* \"#utility.yul\":18587:18616   */\n      swap1\n      pop\n        /* \"#utility.yul\":18454:18622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18628:19001   */\n    tag_378:\n        /* \"#utility.yul\":18714:18717   */\n      0x00\n        /* \"#utility.yul\":18742:18780   */\n      tag_594\n        /* \"#utility.yul\":18774:18779   */\n      dup3\n        /* \"#utility.yul\":18742:18780   */\n      tag_376\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":18796:18866   */\n      tag_595\n        /* \"#utility.yul\":18859:18865   */\n      dup2\n        /* \"#utility.yul\":18854:18857   */\n      dup6\n        /* \"#utility.yul\":18796:18866   */\n      tag_377\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":18789:18866   */\n      swap4\n      pop\n        /* \"#utility.yul\":18875:18940   */\n      tag_596\n        /* \"#utility.yul\":18933:18939   */\n      dup2\n        /* \"#utility.yul\":18928:18931   */\n      dup6\n        /* \"#utility.yul\":18921:18925   */\n      0x20\n        /* \"#utility.yul\":18914:18919   */\n      dup7\n        /* \"#utility.yul\":18910:18926   */\n      add\n        /* \"#utility.yul\":18875:18940   */\n      tag_334\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":18965:18994   */\n      tag_597\n        /* \"#utility.yul\":18987:18993   */\n      dup2\n        /* \"#utility.yul\":18965:18994   */\n      tag_335\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":18960:18963   */\n      dup5\n        /* \"#utility.yul\":18956:18995   */\n      add\n        /* \"#utility.yul\":18949:18995   */\n      swap2\n      pop\n        /* \"#utility.yul\":18718:19001   */\n      pop\n        /* \"#utility.yul\":18628:19001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19007:19647   */\n    tag_238:\n        /* \"#utility.yul\":19202:19206   */\n      0x00\n        /* \"#utility.yul\":19240:19243   */\n      0x80\n        /* \"#utility.yul\":19229:19238   */\n      dup3\n        /* \"#utility.yul\":19225:19244   */\n      add\n        /* \"#utility.yul\":19217:19244   */\n      swap1\n      pop\n        /* \"#utility.yul\":19254:19325   */\n      tag_599\n        /* \"#utility.yul\":19322:19323   */\n      0x00\n        /* \"#utility.yul\":19311:19320   */\n      dup4\n        /* \"#utility.yul\":19307:19324   */\n      add\n        /* \"#utility.yul\":19298:19304   */\n      dup8\n        /* \"#utility.yul\":19254:19325   */\n      tag_342\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":19335:19407   */\n      tag_600\n        /* \"#utility.yul\":19403:19405   */\n      0x20\n        /* \"#utility.yul\":19392:19401   */\n      dup4\n        /* \"#utility.yul\":19388:19406   */\n      add\n        /* \"#utility.yul\":19379:19385   */\n      dup7\n        /* \"#utility.yul\":19335:19407   */\n      tag_342\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":19417:19489   */\n      tag_601\n        /* \"#utility.yul\":19485:19487   */\n      0x40\n        /* \"#utility.yul\":19474:19483   */\n      dup4\n        /* \"#utility.yul\":19470:19488   */\n      add\n        /* \"#utility.yul\":19461:19467   */\n      dup6\n        /* \"#utility.yul\":19417:19489   */\n      tag_345\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":19536:19545   */\n      dup2\n        /* \"#utility.yul\":19530:19534   */\n      dup2\n        /* \"#utility.yul\":19526:19546   */\n      sub\n        /* \"#utility.yul\":19521:19523   */\n      0x60\n        /* \"#utility.yul\":19510:19519   */\n      dup4\n        /* \"#utility.yul\":19506:19524   */\n      add\n        /* \"#utility.yul\":19499:19547   */\n      mstore\n        /* \"#utility.yul\":19564:19640   */\n      tag_602\n        /* \"#utility.yul\":19635:19639   */\n      dup2\n        /* \"#utility.yul\":19626:19632   */\n      dup5\n        /* \"#utility.yul\":19564:19640   */\n      tag_378\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":19556:19640   */\n      swap1\n      pop\n        /* \"#utility.yul\":19007:19647   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19653:19794   */\n    tag_379:\n        /* \"#utility.yul\":19709:19714   */\n      0x00\n        /* \"#utility.yul\":19740:19746   */\n      dup2\n        /* \"#utility.yul\":19734:19747   */\n      mload\n        /* \"#utility.yul\":19725:19747   */\n      swap1\n      pop\n        /* \"#utility.yul\":19756:19788   */\n      tag_604\n        /* \"#utility.yul\":19782:19787   */\n      dup2\n        /* \"#utility.yul\":19756:19788   */\n      tag_328\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":19653:19794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19800:20149   */\n    tag_241:\n        /* \"#utility.yul\":19869:19875   */\n      0x00\n        /* \"#utility.yul\":19918:19920   */\n      0x20\n        /* \"#utility.yul\":19906:19915   */\n      dup3\n        /* \"#utility.yul\":19897:19904   */\n      dup5\n        /* \"#utility.yul\":19893:19916   */\n      sub\n        /* \"#utility.yul\":19889:19921   */\n      slt\n        /* \"#utility.yul\":19886:20005   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":19924:20003   */\n      tag_607\n      tag_325\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":19886:20005   */\n    tag_606:\n        /* \"#utility.yul\":20044:20045   */\n      0x00\n        /* \"#utility.yul\":20069:20132   */\n      tag_608\n        /* \"#utility.yul\":20124:20131   */\n      dup5\n        /* \"#utility.yul\":20115:20121   */\n      dup3\n        /* \"#utility.yul\":20104:20113   */\n      dup6\n        /* \"#utility.yul\":20100:20122   */\n      add\n        /* \"#utility.yul\":20069:20132   */\n      tag_379\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":20059:20132   */\n      swap2\n      pop\n        /* \"#utility.yul\":20015:20142   */\n      pop\n        /* \"#utility.yul\":19800:20149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20155:20335   */\n    tag_380:\n        /* \"#utility.yul\":20203:20280   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20200:20201   */\n      0x00\n        /* \"#utility.yul\":20193:20281   */\n      mstore\n        /* \"#utility.yul\":20300:20304   */\n      0x11\n        /* \"#utility.yul\":20297:20298   */\n      0x04\n        /* \"#utility.yul\":20290:20305   */\n      mstore\n        /* \"#utility.yul\":20324:20328   */\n      0x24\n        /* \"#utility.yul\":20321:20322   */\n      0x00\n        /* \"#utility.yul\":20314:20329   */\n      revert\n        /* \"#utility.yul\":20341:20535   */\n    tag_286:\n        /* \"#utility.yul\":20381:20385   */\n      0x00\n        /* \"#utility.yul\":20401:20421   */\n      tag_611\n        /* \"#utility.yul\":20419:20420   */\n      dup3\n        /* \"#utility.yul\":20401:20421   */\n      tag_337\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":20396:20421   */\n      swap2\n      pop\n        /* \"#utility.yul\":20435:20455   */\n      tag_612\n        /* \"#utility.yul\":20453:20454   */\n      dup4\n        /* \"#utility.yul\":20435:20455   */\n      tag_337\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":20430:20455   */\n      swap3\n      pop\n        /* \"#utility.yul\":20479:20480   */\n      dup3\n        /* \"#utility.yul\":20476:20477   */\n      dup3\n        /* \"#utility.yul\":20472:20481   */\n      sub\n        /* \"#utility.yul\":20464:20481   */\n      swap1\n      pop\n        /* \"#utility.yul\":20503:20504   */\n      dup2\n        /* \"#utility.yul\":20497:20501   */\n      dup2\n        /* \"#utility.yul\":20494:20505   */\n      gt\n        /* \"#utility.yul\":20491:20528   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":20508:20526   */\n      tag_614\n      tag_380\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":20491:20528   */\n    tag_613:\n        /* \"#utility.yul\":20341:20535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20541:20721   */\n    tag_295:\n        /* \"#utility.yul\":20589:20666   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20586:20587   */\n      0x00\n        /* \"#utility.yul\":20579:20667   */\n      mstore\n        /* \"#utility.yul\":20686:20690   */\n      0x31\n        /* \"#utility.yul\":20683:20684   */\n      0x04\n        /* \"#utility.yul\":20676:20691   */\n      mstore\n        /* \"#utility.yul\":20710:20714   */\n      0x24\n        /* \"#utility.yul\":20707:20708   */\n      0x00\n        /* \"#utility.yul\":20700:20715   */\n      revert\n\n    auxdata: 0xa26469706673582212204df2a811f704e8cc1921cda1ad0a7c5565b8e4810ff25070ee8d3429300036e264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3776": {
									"entryPoint": null,
									"id": 3776,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:22",
										"nodeType": "YulBlock",
										"src": "0:5231:22",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:22",
													"nodeType": "YulBlock",
													"src": "66:40:22",
													"statements": [
														{
															"nativeSrc": "77:22:22",
															"nodeType": "YulAssignment",
															"src": "77:22:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:22"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:22"
																},
																"nativeSrc": "87:12:22",
																"nodeType": "YulFunctionCall",
																"src": "87:12:22"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:22"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:22",
														"nodeType": "YulTypedName",
														"src": "49:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:22",
														"nodeType": "YulTypedName",
														"src": "59:6:22",
														"type": ""
													}
												],
												"src": "7:99:22"
											},
											{
												"body": {
													"nativeSrc": "140:152:22",
													"nodeType": "YulBlock",
													"src": "140:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:22",
																		"nodeType": "YulLiteral",
																		"src": "157:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:22",
																		"nodeType": "YulLiteral",
																		"src": "160:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:22"
																},
																"nativeSrc": "150:88:22",
																"nodeType": "YulFunctionCall",
																"src": "150:88:22"
															},
															"nativeSrc": "150:88:22",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:22",
																		"nodeType": "YulLiteral",
																		"src": "254:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:22",
																		"nodeType": "YulLiteral",
																		"src": "257:4:22",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:22"
																},
																"nativeSrc": "247:15:22",
																"nodeType": "YulFunctionCall",
																"src": "247:15:22"
															},
															"nativeSrc": "247:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:22",
																		"nodeType": "YulLiteral",
																		"src": "278:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:22",
																		"nodeType": "YulLiteral",
																		"src": "281:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:22"
																},
																"nativeSrc": "271:15:22",
																"nodeType": "YulFunctionCall",
																"src": "271:15:22"
															},
															"nativeSrc": "271:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:22"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:22",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:22"
											},
											{
												"body": {
													"nativeSrc": "326:152:22",
													"nodeType": "YulBlock",
													"src": "326:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:22",
																		"nodeType": "YulLiteral",
																		"src": "343:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:22",
																		"nodeType": "YulLiteral",
																		"src": "346:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:22"
																},
																"nativeSrc": "336:88:22",
																"nodeType": "YulFunctionCall",
																"src": "336:88:22"
															},
															"nativeSrc": "336:88:22",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:22",
																		"nodeType": "YulLiteral",
																		"src": "440:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:22",
																		"nodeType": "YulLiteral",
																		"src": "443:4:22",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:22"
																},
																"nativeSrc": "433:15:22",
																"nodeType": "YulFunctionCall",
																"src": "433:15:22"
															},
															"nativeSrc": "433:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:22",
																		"nodeType": "YulLiteral",
																		"src": "464:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:22",
																		"nodeType": "YulLiteral",
																		"src": "467:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:22"
																},
																"nativeSrc": "457:15:22",
																"nodeType": "YulFunctionCall",
																"src": "457:15:22"
															},
															"nativeSrc": "457:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:22"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:22"
											},
											{
												"body": {
													"nativeSrc": "535:269:22",
													"nodeType": "YulBlock",
													"src": "535:269:22",
													"statements": [
														{
															"nativeSrc": "545:22:22",
															"nodeType": "YulAssignment",
															"src": "545:22:22",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:22",
																		"nodeType": "YulLiteral",
																		"src": "565:1:22",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:22"
																},
																"nativeSrc": "555:12:22",
																"nodeType": "YulFunctionCall",
																"src": "555:12:22"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:22"
																}
															]
														},
														{
															"nativeSrc": "576:38:22",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:22",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:22",
																		"nodeType": "YulLiteral",
																		"src": "612:1:22",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:22"
																},
																"nativeSrc": "602:12:22",
																"nodeType": "YulFunctionCall",
																"src": "602:12:22"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:22",
																	"nodeType": "YulTypedName",
																	"src": "580:18:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:22",
																"nodeType": "YulBlock",
																"src": "653:51:22",
																"statements": [
																	{
																		"nativeSrc": "667:27:22",
																		"nodeType": "YulAssignment",
																		"src": "667:27:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:22",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:22"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:22",
																					"nodeType": "YulLiteral",
																					"src": "689:4:22",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:22"
																			},
																			"nativeSrc": "677:17:22",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:22"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:22"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:22",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:22"
																},
																"nativeSrc": "626:26:22",
																"nodeType": "YulFunctionCall",
																"src": "626:26:22"
															},
															"nativeSrc": "623:81:22",
															"nodeType": "YulIf",
															"src": "623:81:22"
														},
														{
															"body": {
																"nativeSrc": "756:42:22",
																"nodeType": "YulBlock",
																"src": "756:42:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:22"
																			},
																			"nativeSrc": "770:18:22",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:22"
																		},
																		"nativeSrc": "770:18:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:22",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:22",
																				"nodeType": "YulLiteral",
																				"src": "751:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:22",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:22"
																		},
																		"nativeSrc": "740:14:22",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:22"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:22"
																},
																"nativeSrc": "717:38:22",
																"nodeType": "YulFunctionCall",
																"src": "717:38:22"
															},
															"nativeSrc": "714:84:22",
															"nodeType": "YulIf",
															"src": "714:84:22"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:22",
														"nodeType": "YulTypedName",
														"src": "519:4:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:22",
														"nodeType": "YulTypedName",
														"src": "528:6:22",
														"type": ""
													}
												],
												"src": "484:320:22"
											},
											{
												"body": {
													"nativeSrc": "864:87:22",
													"nodeType": "YulBlock",
													"src": "864:87:22",
													"statements": [
														{
															"nativeSrc": "874:11:22",
															"nodeType": "YulAssignment",
															"src": "874:11:22",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:22",
																"nodeType": "YulIdentifier",
																"src": "882:3:22"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:22",
																		"nodeType": "YulLiteral",
																		"src": "902:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:22"
																},
																"nativeSrc": "895:14:22",
																"nodeType": "YulFunctionCall",
																"src": "895:14:22"
															},
															"nativeSrc": "895:14:22",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:22"
														},
														{
															"nativeSrc": "918:26:22",
															"nodeType": "YulAssignment",
															"src": "918:26:22",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:22",
																		"nodeType": "YulLiteral",
																		"src": "936:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:22",
																		"nodeType": "YulLiteral",
																		"src": "939:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:22",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:22"
																},
																"nativeSrc": "926:18:22",
																"nodeType": "YulFunctionCall",
																"src": "926:18:22"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:22"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:22",
														"nodeType": "YulTypedName",
														"src": "851:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:22",
														"nodeType": "YulTypedName",
														"src": "859:4:22",
														"type": ""
													}
												],
												"src": "810:141:22"
											},
											{
												"body": {
													"nativeSrc": "1001:49:22",
													"nodeType": "YulBlock",
													"src": "1001:49:22",
													"statements": [
														{
															"nativeSrc": "1011:33:22",
															"nodeType": "YulAssignment",
															"src": "1011:33:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:22",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:22",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:22"
																		},
																		"nativeSrc": "1025:14:22",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:22",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:22"
																},
																"nativeSrc": "1021:23:22",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:22"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:22"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:22",
														"nodeType": "YulTypedName",
														"src": "984:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:22",
														"nodeType": "YulTypedName",
														"src": "994:6:22",
														"type": ""
													}
												],
												"src": "957:93:22"
											},
											{
												"body": {
													"nativeSrc": "1109:54:22",
													"nodeType": "YulBlock",
													"src": "1109:54:22",
													"statements": [
														{
															"nativeSrc": "1119:37:22",
															"nodeType": "YulAssignment",
															"src": "1119:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:22"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:22"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:22"
																},
																"nativeSrc": "1140:16:22",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:22"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:22",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:22"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:22",
														"nodeType": "YulTypedName",
														"src": "1084:4:22",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:22",
														"nodeType": "YulTypedName",
														"src": "1090:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:22",
														"nodeType": "YulTypedName",
														"src": "1100:8:22",
														"type": ""
													}
												],
												"src": "1056:107:22"
											},
											{
												"body": {
													"nativeSrc": "1245:317:22",
													"nodeType": "YulBlock",
													"src": "1245:317:22",
													"statements": [
														{
															"nativeSrc": "1255:35:22",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:22",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:22",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:22",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:22",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:22"
																},
																"nativeSrc": "1272:18:22",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:22"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:22",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:22",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:22",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:22",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:22",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:22",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:22"
																},
																"nativeSrc": "1311:97:22",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:22"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:22",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:22",
															"nodeType": "YulAssignment",
															"src": "1417:51:22",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:22"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:22",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:22"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:22",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:22"
																},
																"nativeSrc": "1429:39:22",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:22"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:22",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:22"
																}
															]
														},
														{
															"nativeSrc": "1477:30:22",
															"nodeType": "YulAssignment",
															"src": "1477:30:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:22",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:22"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:22"
																		},
																		"nativeSrc": "1497:9:22",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:22"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:22"
																},
																"nativeSrc": "1486:21:22",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:22"
																}
															]
														},
														{
															"nativeSrc": "1516:40:22",
															"nodeType": "YulAssignment",
															"src": "1516:40:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:22",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:22"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:22",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:22"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:22"
																		},
																		"nativeSrc": "1536:19:22",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:22"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:22"
																},
																"nativeSrc": "1526:30:22",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:22"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:22"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:22",
														"nodeType": "YulTypedName",
														"src": "1206:5:22",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:22",
														"nodeType": "YulTypedName",
														"src": "1213:10:22",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:22",
														"nodeType": "YulTypedName",
														"src": "1225:8:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:22",
														"nodeType": "YulTypedName",
														"src": "1238:6:22",
														"type": ""
													}
												],
												"src": "1169:393:22"
											},
											{
												"body": {
													"nativeSrc": "1613:32:22",
													"nodeType": "YulBlock",
													"src": "1613:32:22",
													"statements": [
														{
															"nativeSrc": "1623:16:22",
															"nodeType": "YulAssignment",
															"src": "1623:16:22",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:22",
																"nodeType": "YulIdentifier",
																"src": "1634:5:22"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:22",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:22"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:22",
														"nodeType": "YulTypedName",
														"src": "1595:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:22",
														"nodeType": "YulTypedName",
														"src": "1605:7:22",
														"type": ""
													}
												],
												"src": "1568:77:22"
											},
											{
												"body": {
													"nativeSrc": "1683:28:22",
													"nodeType": "YulBlock",
													"src": "1683:28:22",
													"statements": [
														{
															"nativeSrc": "1693:12:22",
															"nodeType": "YulAssignment",
															"src": "1693:12:22",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:22",
																"nodeType": "YulIdentifier",
																"src": "1700:5:22"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:22"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:22",
														"nodeType": "YulTypedName",
														"src": "1669:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:22",
														"nodeType": "YulTypedName",
														"src": "1679:3:22",
														"type": ""
													}
												],
												"src": "1651:60:22"
											},
											{
												"body": {
													"nativeSrc": "1777:82:22",
													"nodeType": "YulBlock",
													"src": "1777:82:22",
													"statements": [
														{
															"nativeSrc": "1787:66:22",
															"nodeType": "YulAssignment",
															"src": "1787:66:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:22",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:22"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:22",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:22"
																				},
																				"nativeSrc": "1827:24:22",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:22"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:22",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:22"
																		},
																		"nativeSrc": "1818:34:22",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:22"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:22",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:22"
																},
																"nativeSrc": "1800:53:22",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:22"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:22",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:22"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:22",
														"nodeType": "YulTypedName",
														"src": "1757:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:22",
														"nodeType": "YulTypedName",
														"src": "1767:9:22",
														"type": ""
													}
												],
												"src": "1717:142:22"
											},
											{
												"body": {
													"nativeSrc": "1912:28:22",
													"nodeType": "YulBlock",
													"src": "1912:28:22",
													"statements": [
														{
															"nativeSrc": "1922:12:22",
															"nodeType": "YulAssignment",
															"src": "1922:12:22",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:22",
																"nodeType": "YulIdentifier",
																"src": "1929:5:22"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:22"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:22",
														"nodeType": "YulTypedName",
														"src": "1898:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:22",
														"nodeType": "YulTypedName",
														"src": "1908:3:22",
														"type": ""
													}
												],
												"src": "1865:75:22"
											},
											{
												"body": {
													"nativeSrc": "2022:193:22",
													"nodeType": "YulBlock",
													"src": "2022:193:22",
													"statements": [
														{
															"nativeSrc": "2032:63:22",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:22",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:22",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:22"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:22",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:22"
																},
																"nativeSrc": "2056:39:22",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:22"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:22",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:22"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:22",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:22"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:22",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:22"
																				},
																				"nativeSrc": "2145:11:22",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:22"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:22",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:22"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:22",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:22"
																				},
																				"nativeSrc": "2166:41:22",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:22"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:22",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:22"
																		},
																		"nativeSrc": "2117:91:22",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:22"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:22"
																},
																"nativeSrc": "2104:105:22",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:22"
															},
															"nativeSrc": "2104:105:22",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:22"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:22",
														"nodeType": "YulTypedName",
														"src": "1999:4:22",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:22",
														"nodeType": "YulTypedName",
														"src": "2005:6:22",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:22",
														"nodeType": "YulTypedName",
														"src": "2013:7:22",
														"type": ""
													}
												],
												"src": "1946:269:22"
											},
											{
												"body": {
													"nativeSrc": "2270:24:22",
													"nodeType": "YulBlock",
													"src": "2270:24:22",
													"statements": [
														{
															"nativeSrc": "2280:8:22",
															"nodeType": "YulAssignment",
															"src": "2280:8:22",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:22",
																"nodeType": "YulLiteral",
																"src": "2287:1:22",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:22"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:22",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:22",
														"nodeType": "YulTypedName",
														"src": "2266:3:22",
														"type": ""
													}
												],
												"src": "2221:73:22"
											},
											{
												"body": {
													"nativeSrc": "2353:136:22",
													"nodeType": "YulBlock",
													"src": "2353:136:22",
													"statements": [
														{
															"nativeSrc": "2363:46:22",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:22",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:22",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:22"
																},
																"nativeSrc": "2377:32:22",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:22"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:22",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:22"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:22"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:22"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:22"
																},
																"nativeSrc": "2418:65:22",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:22"
															},
															"nativeSrc": "2418:65:22",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:22"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:22",
														"nodeType": "YulTypedName",
														"src": "2339:4:22",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:22",
														"nodeType": "YulTypedName",
														"src": "2345:6:22",
														"type": ""
													}
												],
												"src": "2300:189:22"
											},
											{
												"body": {
													"nativeSrc": "2545:136:22",
													"nodeType": "YulBlock",
													"src": "2545:136:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:22",
																"nodeType": "YulBlock",
																"src": "2612:63:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:22",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:22"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:22",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:22",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:22"
																			},
																			"nativeSrc": "2626:39:22",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:22"
																		},
																		"nativeSrc": "2626:39:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:22"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:22"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:22"
																},
																"nativeSrc": "2562:14:22",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:22"
															},
															"nativeSrc": "2555:120:22",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:22",
																"nodeType": "YulBlock",
																"src": "2577:26:22",
																"statements": [
																	{
																		"nativeSrc": "2579:22:22",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:22",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:22"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:22",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:22",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:22"
																			},
																			"nativeSrc": "2588:13:22",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:22"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:22"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:22",
																"nodeType": "YulBlock",
																"src": "2559:2:22",
																"statements": []
															},
															"src": "2555:120:22"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:22",
														"nodeType": "YulTypedName",
														"src": "2533:5:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:22",
														"nodeType": "YulTypedName",
														"src": "2540:3:22",
														"type": ""
													}
												],
												"src": "2495:186:22"
											},
											{
												"body": {
													"nativeSrc": "2766:464:22",
													"nodeType": "YulBlock",
													"src": "2766:464:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:22",
																"nodeType": "YulBlock",
																"src": "2792:431:22",
																"statements": [
																	{
																		"nativeSrc": "2806:54:22",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:22",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:22"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:22",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:22"
																			},
																			"nativeSrc": "2822:38:22",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:22"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:22",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:22",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:22",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:22"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:22",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:22"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:22",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:22"
																					},
																					"nativeSrc": "2906:29:22",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:22"
																			},
																			"nativeSrc": "2892:44:22",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:22"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:22",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:22",
																			"nodeType": "YulBlock",
																			"src": "3093:27:22",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:22",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:22",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:22",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:22"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:22",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:22"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:22",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:22"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:22",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:22",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:22",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:22"
																			},
																			"nativeSrc": "3074:18:22",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:22"
																		},
																		"nativeSrc": "3071:49:22",
																		"nodeType": "YulIf",
																		"src": "3071:49:22"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:22",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:22"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:22",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:22"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:22",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:22"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:22",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:22"
																							},
																							"nativeSrc": "3189:22:22",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:22",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:22"
																					},
																					"nativeSrc": "3175:37:22",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:22"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:22",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:22"
																			},
																			"nativeSrc": "3133:80:22",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:22"
																		},
																		"nativeSrc": "3133:80:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:22",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:22",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:22"
																},
																"nativeSrc": "2780:11:22",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:22"
															},
															"nativeSrc": "2777:446:22",
															"nodeType": "YulIf",
															"src": "2777:446:22"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:22",
														"nodeType": "YulTypedName",
														"src": "2742:5:22",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:22",
														"nodeType": "YulTypedName",
														"src": "2749:3:22",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:22",
														"nodeType": "YulTypedName",
														"src": "2754:10:22",
														"type": ""
													}
												],
												"src": "2687:543:22"
											},
											{
												"body": {
													"nativeSrc": "3299:54:22",
													"nodeType": "YulBlock",
													"src": "3299:54:22",
													"statements": [
														{
															"nativeSrc": "3309:37:22",
															"nodeType": "YulAssignment",
															"src": "3309:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:22"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:22"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:22"
																},
																"nativeSrc": "3330:16:22",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:22"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:22",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:22"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:22",
														"nodeType": "YulTypedName",
														"src": "3274:4:22",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:22",
														"nodeType": "YulTypedName",
														"src": "3280:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:22",
														"nodeType": "YulTypedName",
														"src": "3290:8:22",
														"type": ""
													}
												],
												"src": "3236:117:22"
											},
											{
												"body": {
													"nativeSrc": "3410:118:22",
													"nodeType": "YulBlock",
													"src": "3410:118:22",
													"statements": [
														{
															"nativeSrc": "3420:68:22",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:22",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:22",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:22",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:22"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:22"
																				},
																				"nativeSrc": "3465:13:22",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:22"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:22",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:22",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:22"
																				},
																				"nativeSrc": "3480:6:22",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:22"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:22",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:22"
																		},
																		"nativeSrc": "3436:51:22",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:22"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:22"
																},
																"nativeSrc": "3432:56:22",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:22"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:22",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:22",
															"nodeType": "YulAssignment",
															"src": "3497:25:22",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:22"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:22"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:22"
																},
																"nativeSrc": "3507:15:22",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:22"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:22"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:22",
														"nodeType": "YulTypedName",
														"src": "3387:4:22",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:22",
														"nodeType": "YulTypedName",
														"src": "3393:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:22",
														"nodeType": "YulTypedName",
														"src": "3403:6:22",
														"type": ""
													}
												],
												"src": "3359:169:22"
											},
											{
												"body": {
													"nativeSrc": "3614:214:22",
													"nodeType": "YulBlock",
													"src": "3614:214:22",
													"statements": [
														{
															"nativeSrc": "3747:37:22",
															"nodeType": "YulAssignment",
															"src": "3747:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:22"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:22"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:22",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:22"
																},
																"nativeSrc": "3755:29:22",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:22"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:22"
																}
															]
														},
														{
															"nativeSrc": "3793:29:22",
															"nodeType": "YulAssignment",
															"src": "3793:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:22"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:22",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:22",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:22"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:22"
																		},
																		"nativeSrc": "3810:11:22",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:22"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:22"
																},
																"nativeSrc": "3801:21:22",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:22"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:22"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:22",
														"nodeType": "YulTypedName",
														"src": "3595:4:22",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:22",
														"nodeType": "YulTypedName",
														"src": "3601:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:22",
														"nodeType": "YulTypedName",
														"src": "3609:4:22",
														"type": ""
													}
												],
												"src": "3533:295:22"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:22",
													"nodeType": "YulBlock",
													"src": "3925:1303:22",
													"statements": [
														{
															"nativeSrc": "3936:51:22",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:22",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:22"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:22",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:22"
																},
																"nativeSrc": "3950:37:22",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:22"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:22",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:22",
																"nodeType": "YulBlock",
																"src": "4072:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:22",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:22"
																			},
																			"nativeSrc": "4074:18:22",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:22"
																		},
																		"nativeSrc": "4074:18:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:22",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:22"
																},
																"nativeSrc": "4041:30:22",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:22"
															},
															"nativeSrc": "4038:56:22",
															"nodeType": "YulIf",
															"src": "4038:56:22"
														},
														{
															"nativeSrc": "4104:52:22",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:22",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:22"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:22",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:22"
																		},
																		"nativeSrc": "4144:11:22",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:22"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:22",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:22"
																},
																"nativeSrc": "4118:38:22",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:22"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:22",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:22"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:22"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:22"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:22",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:22"
																},
																"nativeSrc": "4203:67:22",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:22"
															},
															"nativeSrc": "4203:67:22",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:22"
														},
														{
															"nativeSrc": "4280:18:22",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:22",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:22",
																"nodeType": "YulLiteral",
																"src": "4297:1:22",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:22",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:22",
															"nodeType": "YulAssignment",
															"src": "4308:17:22",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:22",
																"nodeType": "YulLiteral",
																"src": "4321:4:22",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:22",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:22"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:22",
																		"nodeType": "YulBlock",
																		"src": "4372:611:22",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:22",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:22",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:22",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:22"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:22",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:22",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:22",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:22"
																							},
																							"nativeSrc": "4413:9:22",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:22"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:22",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:22"
																					},
																					"nativeSrc": "4401:22:22",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:22"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:22",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:22",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:22",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:22",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:22",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:22"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:22",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:22"
																					},
																					"nativeSrc": "4451:37:22",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:22"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:22",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:22",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:22",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:22",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:22",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:22",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:22",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:22",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:22",
																					"nodeType": "YulBlock",
																					"src": "4569:163:22",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:22",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:22"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:22",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:22"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:22",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:22"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:22",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:22"
																												},
																												"nativeSrc": "4608:19:22",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:22"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:22",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:22"
																										},
																										"nativeSrc": "4602:26:22",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:22"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:22",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:22"
																								},
																								"nativeSrc": "4587:42:22",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:22"
																							},
																							"nativeSrc": "4587:42:22",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:22"
																						},
																						{
																							"nativeSrc": "4646:24:22",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:22",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:22",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:22"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:22",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:22",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:22",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:22"
																								},
																								"nativeSrc": "4656:14:22",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:22"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:22",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:22"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:22",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:22",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:22",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:22"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:22",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:22",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:22",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:22"
																								},
																								"nativeSrc": "4700:18:22",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:22"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:22",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:22"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:22",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:22"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:22",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:22"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:22",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:22"
																					},
																					"nativeSrc": "4532:14:22",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:22"
																				},
																				"nativeSrc": "4524:208:22",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:22",
																					"nodeType": "YulBlock",
																					"src": "4547:21:22",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:22",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:22",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:22",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:22"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:22",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:22",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:22",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:22"
																								},
																								"nativeSrc": "4554:12:22",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:22"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:22",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:22"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:22",
																					"nodeType": "YulBlock",
																					"src": "4528:3:22",
																					"statements": []
																				},
																				"src": "4524:208:22"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:22",
																					"nodeType": "YulBlock",
																					"src": "4768:156:22",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:22",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:22",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:22",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:22"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:22",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:22"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:22",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:22"
																										},
																										"nativeSrc": "4809:19:22",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:22"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:22",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:22"
																								},
																								"nativeSrc": "4803:26:22",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:22"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:22",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:22",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:22",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:22"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:22",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:22"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:22",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:22"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:22",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:22",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:22",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:22"
																												},
																												"nativeSrc": "4891:17:22",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:22"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:22",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:22"
																										},
																										"nativeSrc": "4861:48:22",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:22"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:22",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:22"
																								},
																								"nativeSrc": "4846:64:22",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:22"
																							},
																							"nativeSrc": "4846:64:22",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:22"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:22",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:22"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:22",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:22"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:22",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:22"
																					},
																					"nativeSrc": "4748:19:22",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:22"
																				},
																				"nativeSrc": "4745:179:22",
																				"nodeType": "YulIf",
																				"src": "4745:179:22"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:22",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:22"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:22",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:22"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:22",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:22",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:22",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:22"
																									},
																									"nativeSrc": "4954:14:22",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:22"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:22",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:22",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:22",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:22"
																							},
																							"nativeSrc": "4950:22:22",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:22"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:22"
																					},
																					"nativeSrc": "4937:36:22",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:22"
																				},
																				"nativeSrc": "4937:36:22",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:22"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:22",
																	"nodeType": "YulCase",
																	"src": "4365:618:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:22",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:22",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:22",
																		"nodeType": "YulBlock",
																		"src": "5000:222:22",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:22",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:22",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:22",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:22",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:22",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:22",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:22",
																					"nodeType": "YulBlock",
																					"src": "5051:67:22",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:22",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:22",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:22",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:22"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:22",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:22"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:22",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:22"
																										},
																										"nativeSrc": "5084:19:22",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:22"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:22",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:22"
																								},
																								"nativeSrc": "5078:26:22",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:22"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:22",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:22"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:22",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:22"
																				},
																				"nativeSrc": "5041:77:22",
																				"nodeType": "YulIf",
																				"src": "5041:77:22"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:22",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:22"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:22",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:22"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:22",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:22"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:22",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:22"
																							},
																							"nativeSrc": "5144:67:22",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:22"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:22"
																					},
																					"nativeSrc": "5131:81:22",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:22"
																				},
																				"nativeSrc": "5131:81:22",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:22"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:22",
																	"nodeType": "YulCase",
																	"src": "4992:230:22",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:22",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:22",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:22"
																},
																"nativeSrc": "4342:14:22",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:22"
															},
															"nativeSrc": "4335:887:22",
															"nodeType": "YulSwitch",
															"src": "4335:887:22"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:22",
														"nodeType": "YulTypedName",
														"src": "3914:4:22",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:22",
														"nodeType": "YulTypedName",
														"src": "3920:3:22",
														"type": ""
													}
												],
												"src": "3833:1395:22"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 22,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600881526020017f417274546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4152544b00000000000000000000000000000000000000000000000000000000815250815f908161008a91906102dc565b50806001908161009a91906102dc565b5050506103ab565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061011d57607f821691505b6020821081036101305761012f6100d9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610157565b61019c8683610157565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e06101db6101d6846101b4565b6101bd565b6101b4565b9050919050565b5f819050919050565b6101f9836101c6565b61020d610205826101e7565b848454610163565b825550505050565b5f90565b610221610215565b61022c8184846101f0565b505050565b5b8181101561024f576102445f82610219565b600181019050610232565b5050565b601f8211156102945761026581610136565b61026e84610148565b8101602085101561027d578190505b61029161028985610148565b830182610231565b50505b505050565b5f82821c905092915050565b5f6102b45f1984600802610299565b1980831691505092915050565b5f6102cc83836102a5565b9150826002028217905092915050565b6102e5826100a2565b67ffffffffffffffff8111156102fe576102fd6100ac565b5b6103088254610106565b610313828285610253565b5f60209050601f831160018114610344575f8415610332578287015190505b61033c85826102c1565b8655506103a3565b601f19841661035286610136565b5f5b8281101561037957848901518255600182019150602085019450602081019050610354565b868310156103965784890151610392601f8916826102a5565b8355505b6001600288020188555050505b505050505050565b612809806103b85f395ff3fe608060405234801561000f575f80fd5b506004361061012a575f3560e01c80636352211e116100ab578063abc8c7af1161006f578063abc8c7af14610366578063b88d4fde14610384578063c87b56dd146103a0578063d85d3d27146103d0578063e985e9c5146104005761012a565b80636352211e146102b057806370a08231146102e057806373ad6c2d1461031057806395d89b411461032c578063a22cb4651461034a5761012a565b806318160ddd116100f257806318160ddd146101fa57806323b872dd146102185780632f745c591461023457806342842e0e146102645780634f6ccce7146102805761012a565b806301ffc9a71461012e57806306fdde031461015e578063081812fc1461017c578063095ea7b3146101ac57806317b47cc4146101c8575b5f80fd5b61014860048036038101906101439190611cf7565b610430565b6040516101559190611d3c565b60405180910390f35b6101666104a9565b6040516101739190611dc5565b60405180910390f35b61019660048036038101906101919190611e18565b610538565b6040516101a39190611e82565b60405180910390f35b6101c660048036038101906101c19190611ec5565b610553565b005b6101e260048036038101906101dd9190611e18565b610569565b6040516101f193929190611f12565b60405180910390f35b610202610634565b60405161020f9190611f4e565b60405180910390f35b610232600480360381019061022d9190611f67565b610640565b005b61024e60048036038101906102499190611ec5565b61073f565b60405161025b9190611f4e565b60405180910390f35b61027e60048036038101906102799190611f67565b6107e3565b005b61029a60048036038101906102959190611e18565b610802565b6040516102a79190611f4e565b60405180910390f35b6102ca60048036038101906102c59190611e18565b610874565b6040516102d79190611e82565b60405180910390f35b6102fa60048036038101906102f59190611fb7565b610885565b6040516103079190611f4e565b60405180910390f35b61032a60048036038101906103259190611fb7565b61093b565b005b61033461097e565b6040516103419190611dc5565b60405180910390f35b610364600480360381019061035f919061200c565b610a0e565b005b61036e610a24565b60405161037b9190611e82565b60405180910390f35b61039e60048036038101906103999190612176565b610a49565b005b6103ba60048036038101906103b59190611e18565b610a66565b6040516103c79190611dc5565b60405180910390f35b6103ea60048036038101906103e59190612294565b610b0a565b6040516103f79190611f4e565b60405180910390f35b61041a600480360381019061041591906122db565b610c09565b6040516104279190611d3c565b60405180910390f35b5f7f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104a257506104a182610c97565b5b9050919050565b60605f80546104b790612346565b80601f01602080910402602001604051908101604052809291908181526020018280546104e390612346565b801561052e5780601f106105055761010080835404028352916020019161052e565b820191905f5260205f20905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b5f61054282610d78565b5061054c82610dfe565b9050919050565b6105658282610560610e37565b610e3e565b5050565b600c602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546105b390612346565b80601f01602080910402602001604051908101604052809291908181526020018280546105df90612346565b801561062a5780601f106106015761010080835404028352916020019161062a565b820191905f5260205f20905b81548152906001019060200180831161060d57829003601f168201915b5050505050905083565b5f600880549050905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106b0575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106a79190611e82565b60405180910390fd5b5f6106c383836106be610e37565b610e50565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610739578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161073093929190612376565b60405180910390fd5b50505050565b5f61074983610885565b821061078e5782826040517fa57d13dc0000000000000000000000000000000000000000000000000000000081526004016107859291906123ab565b60405180910390fd5b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2054905092915050565b6107fd83838360405180602001604052805f815250610a49565b505050565b5f61080b610634565b8210610850575f826040517fa57d13dc0000000000000000000000000000000000000000000000000000000081526004016108479291906123ab565b60405180910390fd5b60088281548110610864576108636123d2565b5b905f5260205f2001549050919050565b5f61087e82610d78565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108f6575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108ed9190611e82565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b80600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606001805461098d90612346565b80601f01602080910402602001604051908101604052809291908181526020018280546109b990612346565b8015610a045780601f106109db57610100808354040283529160200191610a04565b820191905f5260205f20905b8154815290600101906020018083116109e757829003601f168201915b5050505050905090565b610a20610a19610e37565b8383610f6a565b5050565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a54848484610640565b610a60848484846110d3565b50505050565b6060600c5f8381526020019081526020015f206002018054610a8790612346565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab390612346565b8015610afe5780601f10610ad557610100808354040283529160200191610afe565b820191905f5260205f20905b815481529060010190602001808311610ae157829003601f168201915b50505050509050919050565b5f610b15600a611285565b5f610b20600a611299565b9050610b2c33826112a5565b610b57600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610553565b60405180606001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184815250600c5f8381526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610bfc919061259c565b5090505080915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d6157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610d715750610d70826112c2565b5b9050919050565b5f80610d838361132b565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610df557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610dec9190611f4e565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610e4b8383836001611364565b505050565b5f80610e5d858585611523565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ea057610e9b8461172e565b610edf565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ede57610edd8185611772565b5b5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610f2057610f1b846118bc565b610f5f565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f5e57610f5d858561197c565b5b5b809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fda57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610fd19190611e82565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110c69190611d3c565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b111561127f578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611116610e37565b8685856040518563ffffffff1660e01b815260040161113894939291906126bd565b6020604051808303815f875af192505050801561117357506040513d601f19601f82011682018060405250810190611170919061271b565b60015b6111f4573d805f81146111a1576040519150601f19603f3d011682016040523d82523d5f602084013e6111a6565b606091505b505f8151036111ec57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111e39190611e82565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461127d57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112749190611e82565b60405180910390fd5b505b50505050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b6112be828260405180602001604052805f815250611a00565b5050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061139c57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156114ce575f6113ab84610d78565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561141557508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561142857506114268184610c09565b155b1561146a57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114619190611e82565b60405180910390fd5b81156114cc57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b5f8061152e8461132b565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461156f5761156e818486611a1b565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115fa576115ae5f855f80611364565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461167957600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b60088054905060095f8381526020019081526020015f2081905550600881908060018154018082558091505060019003905f5260205f20015f909190919091505550565b5f61177c83610885565b90505f60075f8481526020019081526020015f20549050818114611853575f60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205490508060065f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20819055508160075f8381526020019081526020015f2081905550505b60075f8481526020019081526020015f205f905560065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f905550505050565b5f60016008805490506118cf9190612773565b90505f60095f8481526020019081526020015f205490505f600883815481106118fb576118fa6123d2565b5b905f5260205f2001549050806008838154811061191b5761191a6123d2565b5b905f5260205f2001819055508160095f8381526020019081526020015f208190555060095f8581526020019081526020015f205f90556008805480611963576119626127a6565b5b600190038181905f5260205f20015f9055905550505050565b5f600161198884610885565b6119929190612773565b90508160065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f20819055508060075f8481526020019081526020015f2081905550505050565b611a0a8383611ade565b611a165f8484846110d3565b505050565b611a26838383611bd1565b611ad9575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a9a57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a919190611f4e565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611ad09291906123ab565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b4e575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b459190611e82565b60405180910390fd5b5f611b5a83835f610e50565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611bcc575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611bc39190611e82565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611c8857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c495750611c488484610c09565b5b80611c8757508273ffffffffffffffffffffffffffffffffffffffff16611c6f83610dfe565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611cd681611ca2565b8114611ce0575f80fd5b50565b5f81359050611cf181611ccd565b92915050565b5f60208284031215611d0c57611d0b611c9a565b5b5f611d1984828501611ce3565b91505092915050565b5f8115159050919050565b611d3681611d22565b82525050565b5f602082019050611d4f5f830184611d2d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611d9782611d55565b611da18185611d5f565b9350611db1818560208601611d6f565b611dba81611d7d565b840191505092915050565b5f6020820190508181035f830152611ddd8184611d8d565b905092915050565b5f819050919050565b611df781611de5565b8114611e01575f80fd5b50565b5f81359050611e1281611dee565b92915050565b5f60208284031215611e2d57611e2c611c9a565b5b5f611e3a84828501611e04565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e6c82611e43565b9050919050565b611e7c81611e62565b82525050565b5f602082019050611e955f830184611e73565b92915050565b611ea481611e62565b8114611eae575f80fd5b50565b5f81359050611ebf81611e9b565b92915050565b5f8060408385031215611edb57611eda611c9a565b5b5f611ee885828601611eb1565b9250506020611ef985828601611e04565b9150509250929050565b611f0c81611de5565b82525050565b5f606082019050611f255f830186611f03565b611f326020830185611e73565b8181036040830152611f448184611d8d565b9050949350505050565b5f602082019050611f615f830184611f03565b92915050565b5f805f60608486031215611f7e57611f7d611c9a565b5b5f611f8b86828701611eb1565b9350506020611f9c86828701611eb1565b9250506040611fad86828701611e04565b9150509250925092565b5f60208284031215611fcc57611fcb611c9a565b5b5f611fd984828501611eb1565b91505092915050565b611feb81611d22565b8114611ff5575f80fd5b50565b5f8135905061200681611fe2565b92915050565b5f806040838503121561202257612021611c9a565b5b5f61202f85828601611eb1565b925050602061204085828601611ff8565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61208882611d7d565b810181811067ffffffffffffffff821117156120a7576120a6612052565b5b80604052505050565b5f6120b9611c91565b90506120c5828261207f565b919050565b5f67ffffffffffffffff8211156120e4576120e3612052565b5b6120ed82611d7d565b9050602081019050919050565b828183375f83830152505050565b5f61211a612115846120ca565b6120b0565b9050828152602081018484840111156121365761213561204e565b5b6121418482856120fa565b509392505050565b5f82601f83011261215d5761215c61204a565b5b813561216d848260208601612108565b91505092915050565b5f805f806080858703121561218e5761218d611c9a565b5b5f61219b87828801611eb1565b94505060206121ac87828801611eb1565b93505060406121bd87828801611e04565b925050606085013567ffffffffffffffff8111156121de576121dd611c9e565b5b6121ea87828801612149565b91505092959194509250565b5f67ffffffffffffffff8211156122105761220f612052565b5b61221982611d7d565b9050602081019050919050565b5f612238612233846121f6565b6120b0565b9050828152602081018484840111156122545761225361204e565b5b61225f8482856120fa565b509392505050565b5f82601f83011261227b5761227a61204a565b5b813561228b848260208601612226565b91505092915050565b5f602082840312156122a9576122a8611c9a565b5b5f82013567ffffffffffffffff8111156122c6576122c5611c9e565b5b6122d284828501612267565b91505092915050565b5f80604083850312156122f1576122f0611c9a565b5b5f6122fe85828601611eb1565b925050602061230f85828601611eb1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061235d57607f821691505b6020821081036123705761236f612319565b5b50919050565b5f6060820190506123895f830186611e73565b6123966020830185611f03565b6123a36040830184611e73565b949350505050565b5f6040820190506123be5f830185611e73565b6123cb6020830184611f03565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261245b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612420565b6124658683612420565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6124a061249b61249684611de5565b61247d565b611de5565b9050919050565b5f819050919050565b6124b983612486565b6124cd6124c5826124a7565b84845461242c565b825550505050565b5f90565b6124e16124d5565b6124ec8184846124b0565b505050565b5b8181101561250f576125045f826124d9565b6001810190506124f2565b5050565b601f82111561255457612525816123ff565b61252e84612411565b8101602085101561253d578190505b61255161254985612411565b8301826124f1565b50505b505050565b5f82821c905092915050565b5f6125745f1984600802612559565b1980831691505092915050565b5f61258c8383612565565b9150826002028217905092915050565b6125a582611d55565b67ffffffffffffffff8111156125be576125bd612052565b5b6125c88254612346565b6125d3828285612513565b5f60209050601f831160018114612604575f84156125f2578287015190505b6125fc8582612581565b865550612663565b601f198416612612866123ff565b5f5b8281101561263957848901518255600182019150602085019450602081019050612614565b868310156126565784890151612652601f891682612565565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f61268f8261266b565b6126998185612675565b93506126a9818560208601611d6f565b6126b281611d7d565b840191505092915050565b5f6080820190506126d05f830187611e73565b6126dd6020830186611e73565b6126ea6040830185611f03565b81810360608301526126fc8184612685565b905095945050505050565b5f8151905061271581611ccd565b92915050565b5f602082840312156127305761272f611c9a565b5b5f61273d84828501612707565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61277d82611de5565b915061278883611de5565b92508282039050818111156127a05761279f612746565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea26469706673582212204df2a811f704e8cc1921cda1ad0a7c5565b8e4810ff25070ee8d3429300036e264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417274546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4152544B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x2DC JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x2DC JUMP JUMPDEST POP POP POP PUSH2 0x3AB JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x130 JUMPI PUSH2 0x12F PUSH2 0xD9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x192 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x157 JUMP JUMPDEST PUSH2 0x19C DUP7 DUP4 PUSH2 0x157 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0 PUSH2 0x1DB PUSH2 0x1D6 DUP5 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F9 DUP4 PUSH2 0x1C6 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x205 DUP3 PUSH2 0x1E7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x163 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x221 PUSH2 0x215 JUMP JUMPDEST PUSH2 0x22C DUP2 DUP5 DUP5 PUSH2 0x1F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24F JUMPI PUSH2 0x244 PUSH0 DUP3 PUSH2 0x219 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x232 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x294 JUMPI PUSH2 0x265 DUP2 PUSH2 0x136 JUMP JUMPDEST PUSH2 0x26E DUP5 PUSH2 0x148 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x291 PUSH2 0x289 DUP6 PUSH2 0x148 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x231 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x299 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CC DUP4 DUP4 PUSH2 0x2A5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E5 DUP3 PUSH2 0xA2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0xAC JUMP JUMPDEST JUMPDEST PUSH2 0x308 DUP3 SLOAD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x313 DUP3 DUP3 DUP6 PUSH2 0x253 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x344 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x332 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x33C DUP6 DUP3 PUSH2 0x2C1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x352 DUP7 PUSH2 0x136 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x379 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x354 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x396 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x392 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2A5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2809 DUP1 PUSH2 0x3B8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xABC8C7AF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xABC8C7AF EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x400 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x73AD6C2D EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x34A JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x280 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x17B47CC4 EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x200C JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x2176 JUMP JUMPDEST PUSH2 0xA49 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x22DB JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4A2 JUMPI POP PUSH2 0x4A1 DUP3 PUSH2 0xC97 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E3 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x505 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x511 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x542 DUP3 PUSH2 0xD78 JUMP JUMPDEST POP PUSH2 0x54C DUP3 PUSH2 0xDFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x565 DUP3 DUP3 PUSH2 0x560 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x5B3 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DF SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x62A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x601 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6C3 DUP4 DUP4 PUSH2 0x6BE PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x739 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x749 DUP4 PUSH2 0x885 JUMP JUMPDEST DUP3 LT PUSH2 0x78E JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP3 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA49 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x80B PUSH2 0x634 JUMP JUMPDEST DUP3 LT PUSH2 0x850 JUMPI PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x847 SWAP3 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x864 JUMPI PUSH2 0x863 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x87E DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x98D SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9B9 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA04 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA04 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA20 PUSH2 0xA19 PUSH2 0xE37 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA54 DUP5 DUP5 DUP5 PUSH2 0x640 JUMP JUMPDEST PUSH2 0xA60 DUP5 DUP5 DUP5 DUP5 PUSH2 0x10D3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xA87 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAB3 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAFE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAFE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAE1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB15 PUSH1 0xA PUSH2 0x1285 JUMP JUMPDEST PUSH0 PUSH2 0xB20 PUSH1 0xA PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP PUSH2 0xB2C CALLER DUP3 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0xB57 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xBFC SWAP2 SWAP1 PUSH2 0x259C JUMP JUMPDEST POP SWAP1 POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xD61 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xD71 JUMPI POP PUSH2 0xD70 DUP3 PUSH2 0x12C2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD83 DUP4 PUSH2 0x132B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE4B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1364 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE5D DUP6 DUP6 DUP6 PUSH2 0x1523 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA0 JUMPI PUSH2 0xE9B DUP5 PUSH2 0x172E JUMP JUMPDEST PUSH2 0xEDF JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEDE JUMPI PUSH2 0xEDD DUP2 DUP6 PUSH2 0x1772 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF20 JUMPI PUSH2 0xF1B DUP5 PUSH2 0x18BC JUMP JUMPDEST PUSH2 0xF5F JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5E JUMPI PUSH2 0xF5D DUP6 DUP6 PUSH2 0x197C JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFDA JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x127F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1116 PUSH2 0xE37 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1138 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1173 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x271B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11F4 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x11EC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x127D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1274 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BE DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1A00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x139C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14CE JUMPI PUSH0 PUSH2 0x13AB DUP5 PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1415 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1428 JUMPI POP PUSH2 0x1426 DUP2 DUP5 PUSH2 0xC09 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x146A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1461 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x14CC JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x152E DUP5 PUSH2 0x132B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x156F JUMPI PUSH2 0x156E DUP2 DUP5 DUP7 PUSH2 0x1A1B JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15FA JUMPI PUSH2 0x15AE PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1679 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x177C DUP4 PUSH2 0x885 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1853 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x18CF SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x191B JUMPI PUSH2 0x191A PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1963 JUMPI PUSH2 0x1962 PUSH2 0x27A6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x1988 DUP5 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x1992 SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1A0A DUP4 DUP4 PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0x1A16 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x10D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A26 DUP4 DUP4 DUP4 PUSH2 0x1BD1 JUMP JUMPDEST PUSH2 0x1AD9 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A9A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A91 SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD0 SWAP3 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B4E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B45 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1B5A DUP4 DUP4 PUSH0 PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BCC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC3 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1C88 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C49 JUMPI POP PUSH2 0x1C48 DUP5 DUP5 PUSH2 0xC09 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1C87 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C6F DUP4 PUSH2 0xDFE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD6 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CF1 DUP2 PUSH2 0x1CCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0C JUMPI PUSH2 0x1D0B PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D19 DUP5 DUP3 DUP6 ADD PUSH2 0x1CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D36 DUP2 PUSH2 0x1D22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D97 DUP3 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x1DA1 DUP2 DUP6 PUSH2 0x1D5F JUMP JUMPDEST SWAP4 POP PUSH2 0x1DB1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x1DBA DUP2 PUSH2 0x1D7D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DDD DUP2 DUP5 PUSH2 0x1D8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF7 DUP2 PUSH2 0x1DE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E01 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E12 DUP2 PUSH2 0x1DEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E2D JUMPI PUSH2 0x1E2C PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E3A DUP5 DUP3 DUP6 ADD PUSH2 0x1E04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6C DUP3 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7C DUP2 PUSH2 0x1E62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E95 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EA4 DUP2 PUSH2 0x1E62 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EAE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EBF DUP2 PUSH2 0x1E9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH2 0x1EDA PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EE8 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EF9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0C DUP2 PUSH2 0x1DE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F25 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F03 JUMP JUMPDEST PUSH2 0x1F32 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E73 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1F44 DUP2 DUP5 PUSH2 0x1D8D JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F61 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F7E JUMPI PUSH2 0x1F7D PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F8B DUP7 DUP3 DUP8 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F9C DUP7 DUP3 DUP8 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FAD DUP7 DUP3 DUP8 ADD PUSH2 0x1E04 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FCC JUMPI PUSH2 0x1FCB PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FD9 DUP5 DUP3 DUP6 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEB DUP2 PUSH2 0x1D22 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2006 DUP2 PUSH2 0x1FE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2022 JUMPI PUSH2 0x2021 PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x202F DUP6 DUP3 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2040 DUP6 DUP3 DUP7 ADD PUSH2 0x1FF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2088 DUP3 PUSH2 0x1D7D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20A7 JUMPI PUSH2 0x20A6 PUSH2 0x2052 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20B9 PUSH2 0x1C91 JUMP JUMPDEST SWAP1 POP PUSH2 0x20C5 DUP3 DUP3 PUSH2 0x207F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20E4 JUMPI PUSH2 0x20E3 PUSH2 0x2052 JUMP JUMPDEST JUMPDEST PUSH2 0x20ED DUP3 PUSH2 0x1D7D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x211A PUSH2 0x2115 DUP5 PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x20B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2136 JUMPI PUSH2 0x2135 PUSH2 0x204E JUMP JUMPDEST JUMPDEST PUSH2 0x2141 DUP5 DUP3 DUP6 PUSH2 0x20FA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x215D JUMPI PUSH2 0x215C PUSH2 0x204A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x216D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2108 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x218E JUMPI PUSH2 0x218D PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x219B DUP8 DUP3 DUP9 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x21AC DUP8 DUP3 DUP9 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x21BD DUP8 DUP3 DUP9 ADD PUSH2 0x1E04 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21DE JUMPI PUSH2 0x21DD PUSH2 0x1C9E JUMP JUMPDEST JUMPDEST PUSH2 0x21EA DUP8 DUP3 DUP9 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2210 JUMPI PUSH2 0x220F PUSH2 0x2052 JUMP JUMPDEST JUMPDEST PUSH2 0x2219 DUP3 PUSH2 0x1D7D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2238 PUSH2 0x2233 DUP5 PUSH2 0x21F6 JUMP JUMPDEST PUSH2 0x20B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2254 JUMPI PUSH2 0x2253 PUSH2 0x204E JUMP JUMPDEST JUMPDEST PUSH2 0x225F DUP5 DUP3 DUP6 PUSH2 0x20FA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x227B JUMPI PUSH2 0x227A PUSH2 0x204A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x228B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2226 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A9 JUMPI PUSH2 0x22A8 PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C6 JUMPI PUSH2 0x22C5 PUSH2 0x1C9E JUMP JUMPDEST JUMPDEST PUSH2 0x22D2 DUP5 DUP3 DUP6 ADD PUSH2 0x2267 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F1 JUMPI PUSH2 0x22F0 PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22FE DUP6 DUP3 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x230F DUP6 DUP3 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x235D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2370 JUMPI PUSH2 0x236F PUSH2 0x2319 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2389 PUSH0 DUP4 ADD DUP7 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x2396 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F03 JUMP JUMPDEST PUSH2 0x23A3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E73 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23BE PUSH0 DUP4 ADD DUP6 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x245B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2420 JUMP JUMPDEST PUSH2 0x2465 DUP7 DUP4 PUSH2 0x2420 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24A0 PUSH2 0x249B PUSH2 0x2496 DUP5 PUSH2 0x1DE5 JUMP JUMPDEST PUSH2 0x247D JUMP JUMPDEST PUSH2 0x1DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B9 DUP4 PUSH2 0x2486 JUMP JUMPDEST PUSH2 0x24CD PUSH2 0x24C5 DUP3 PUSH2 0x24A7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x242C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x24E1 PUSH2 0x24D5 JUMP JUMPDEST PUSH2 0x24EC DUP2 DUP5 DUP5 PUSH2 0x24B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x250F JUMPI PUSH2 0x2504 PUSH0 DUP3 PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24F2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2554 JUMPI PUSH2 0x2525 DUP2 PUSH2 0x23FF JUMP JUMPDEST PUSH2 0x252E DUP5 PUSH2 0x2411 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x253D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2551 PUSH2 0x2549 DUP6 PUSH2 0x2411 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24F1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2574 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2559 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x258C DUP4 DUP4 PUSH2 0x2565 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25A5 DUP3 PUSH2 0x1D55 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25BE JUMPI PUSH2 0x25BD PUSH2 0x2052 JUMP JUMPDEST JUMPDEST PUSH2 0x25C8 DUP3 SLOAD PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x25D3 DUP3 DUP3 DUP6 PUSH2 0x2513 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2604 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x25F2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x25FC DUP6 DUP3 PUSH2 0x2581 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2663 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2612 DUP7 PUSH2 0x23FF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2639 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2614 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2656 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2652 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2565 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x268F DUP3 PUSH2 0x266B JUMP JUMPDEST PUSH2 0x2699 DUP2 DUP6 PUSH2 0x2675 JUMP JUMPDEST SWAP4 POP PUSH2 0x26A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x26B2 DUP2 PUSH2 0x1D7D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x26D0 PUSH0 DUP4 ADD DUP8 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x26DD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x26EA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F03 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x26FC DUP2 DUP5 PUSH2 0x2685 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2715 DUP2 PUSH2 0x1CCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2730 JUMPI PUSH2 0x272F PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x273D DUP5 DUP3 DUP6 ADD PUSH2 0x2707 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x277D DUP3 PUSH2 0x1DE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2788 DUP4 PUSH2 0x1DE5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x27A0 JUMPI PUSH2 0x279F PUSH2 0x2746 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D CALLCODE 0xA8 GT 0xF7 DIV 0xE8 0xCC NOT 0x21 0xCD LOG1 0xAD EXP PUSH29 0x5565B8E4810FF25070EE8D3429300036E264736F6C634300081A003300 ",
							"sourceMap": "515:990:21:-:0;;;808:44;;;;;;;;;;1381:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;515:990:21;;7:99:22;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;515:990:21:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Items_3768": {
									"entryPoint": 1385,
									"id": 3768,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addTokenToAllTokensEnumeration_1710": {
									"entryPoint": 5934,
									"id": 1710,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_1690": {
									"entryPoint": 6524,
									"id": 1690,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_1128": {
									"entryPoint": 3646,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1194": {
									"entryPoint": 4964,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkAuthorized_776": {
									"entryPoint": 6683,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1324": {
									"entryPoint": 4307,
									"id": 1324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_703": {
									"entryPoint": 3582,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_739": {
									"entryPoint": 7121,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_932": {
									"entryPoint": 6878,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2077": {
									"entryPoint": 3639,
									"id": 2077,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_690": {
									"entryPoint": 4907,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_1818": {
									"entryPoint": 6332,
									"id": 1818,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_1770": {
									"entryPoint": 6002,
									"id": 1770,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireOwned_1260": {
									"entryPoint": 3448,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_947": {
									"entryPoint": 4773,
									"id": 947,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_973": {
									"entryPoint": 6656,
									"id": 973,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1231": {
									"entryPoint": 3946,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1659": {
									"entryPoint": 3664,
									"id": 1659,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_882": {
									"entryPoint": 5411,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_537": {
									"entryPoint": 1363,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_445": {
									"entryPoint": 2181,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_2113": {
									"entryPoint": 4761,
									"id": 2113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_554": {
									"entryPoint": 1336,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_2127": {
									"entryPoint": 4741,
									"id": 2127,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_587": {
									"entryPoint": 3081,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@marketplace_3756": {
									"entryPoint": 2596,
									"id": 3756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_3819": {
									"entryPoint": 2826,
									"id": 3819,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_467": {
									"entryPoint": 1193,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_458": {
									"entryPoint": 2164,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_651": {
									"entryPoint": 2019,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_677": {
									"entryPoint": 2633,
									"id": 677,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_570": {
									"entryPoint": 2574,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setMarketplace_3843": {
									"entryPoint": 2363,
									"id": 3843,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1524": {
									"entryPoint": 1072,
									"id": 1524,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2564": {
									"entryPoint": 4802,
									"id": 2564,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_417": {
									"entryPoint": 3223,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_476": {
									"entryPoint": 2430,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenByIndex_1590": {
									"entryPoint": 2050,
									"id": 1590,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1553": {
									"entryPoint": 1855,
									"id": 1553,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_3833": {
									"entryPoint": 2662,
									"id": 3833,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1563": {
									"entryPoint": 1588,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_633": {
									"entryPoint": 1600,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8456,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8742,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9917,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9131,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr__to_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7535,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8985,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7322,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9260,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9392,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20724:22",
										"nodeType": "YulBlock",
										"src": "0:20724:22",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:22",
													"nodeType": "YulBlock",
													"src": "47:35:22",
													"statements": [
														{
															"nativeSrc": "57:19:22",
															"nodeType": "YulAssignment",
															"src": "57:19:22",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:22",
																		"nodeType": "YulLiteral",
																		"src": "73:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:22"
																},
																"nativeSrc": "67:9:22",
																"nodeType": "YulFunctionCall",
																"src": "67:9:22"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:22"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:22",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:22",
														"nodeType": "YulTypedName",
														"src": "40:6:22",
														"type": ""
													}
												],
												"src": "7:75:22"
											},
											{
												"body": {
													"nativeSrc": "177:28:22",
													"nodeType": "YulBlock",
													"src": "177:28:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:22",
																		"nodeType": "YulLiteral",
																		"src": "194:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:22",
																		"nodeType": "YulLiteral",
																		"src": "197:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:22"
																},
																"nativeSrc": "187:12:22",
																"nodeType": "YulFunctionCall",
																"src": "187:12:22"
															},
															"nativeSrc": "187:12:22",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:22"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:22",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:22"
											},
											{
												"body": {
													"nativeSrc": "300:28:22",
													"nodeType": "YulBlock",
													"src": "300:28:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:22",
																		"nodeType": "YulLiteral",
																		"src": "317:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:22",
																		"nodeType": "YulLiteral",
																		"src": "320:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:22"
																},
																"nativeSrc": "310:12:22",
																"nodeType": "YulFunctionCall",
																"src": "310:12:22"
															},
															"nativeSrc": "310:12:22",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:22"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:22",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:22"
											},
											{
												"body": {
													"nativeSrc": "378:105:22",
													"nodeType": "YulBlock",
													"src": "378:105:22",
													"statements": [
														{
															"nativeSrc": "388:89:22",
															"nodeType": "YulAssignment",
															"src": "388:89:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:22",
																		"nodeType": "YulLiteral",
																		"src": "410:66:22",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:22"
																},
																"nativeSrc": "399:78:22",
																"nodeType": "YulFunctionCall",
																"src": "399:78:22"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:22",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:22"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:22",
														"nodeType": "YulTypedName",
														"src": "360:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:22",
														"nodeType": "YulTypedName",
														"src": "370:7:22",
														"type": ""
													}
												],
												"src": "334:149:22"
											},
											{
												"body": {
													"nativeSrc": "531:78:22",
													"nodeType": "YulBlock",
													"src": "531:78:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:22",
																"nodeType": "YulBlock",
																"src": "587:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:22",
																					"nodeType": "YulLiteral",
																					"src": "596:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:22",
																					"nodeType": "YulLiteral",
																					"src": "599:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:22"
																			},
																			"nativeSrc": "589:12:22",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:22"
																		},
																		"nativeSrc": "589:12:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:22",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:22"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:22",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:22"
																				},
																				"nativeSrc": "561:23:22",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:22",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:22"
																		},
																		"nativeSrc": "551:34:22",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:22"
																},
																"nativeSrc": "544:42:22",
																"nodeType": "YulFunctionCall",
																"src": "544:42:22"
															},
															"nativeSrc": "541:62:22",
															"nodeType": "YulIf",
															"src": "541:62:22"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:22",
														"nodeType": "YulTypedName",
														"src": "524:5:22",
														"type": ""
													}
												],
												"src": "489:120:22"
											},
											{
												"body": {
													"nativeSrc": "666:86:22",
													"nodeType": "YulBlock",
													"src": "666:86:22",
													"statements": [
														{
															"nativeSrc": "676:29:22",
															"nodeType": "YulAssignment",
															"src": "676:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:22",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:22"
																},
																"nativeSrc": "685:20:22",
																"nodeType": "YulFunctionCall",
																"src": "685:20:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:22"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:22",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:22"
																},
																"nativeSrc": "714:32:22",
																"nodeType": "YulFunctionCall",
																"src": "714:32:22"
															},
															"nativeSrc": "714:32:22",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:22"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:22",
														"nodeType": "YulTypedName",
														"src": "644:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:22",
														"nodeType": "YulTypedName",
														"src": "652:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:22",
														"nodeType": "YulTypedName",
														"src": "660:5:22",
														"type": ""
													}
												],
												"src": "615:137:22"
											},
											{
												"body": {
													"nativeSrc": "823:262:22",
													"nodeType": "YulBlock",
													"src": "823:262:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:22",
																"nodeType": "YulBlock",
																"src": "869:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:22"
																			},
																			"nativeSrc": "871:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:22"
																		},
																		"nativeSrc": "871:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:22"
																		},
																		"nativeSrc": "840:23:22",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:22",
																		"nodeType": "YulLiteral",
																		"src": "865:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:22"
																},
																"nativeSrc": "836:32:22",
																"nodeType": "YulFunctionCall",
																"src": "836:32:22"
															},
															"nativeSrc": "833:119:22",
															"nodeType": "YulIf",
															"src": "833:119:22"
														},
														{
															"nativeSrc": "962:116:22",
															"nodeType": "YulBlock",
															"src": "962:116:22",
															"statements": [
																{
																	"nativeSrc": "977:15:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:22",
																		"nodeType": "YulLiteral",
																		"src": "991:1:22",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:22",
																			"nodeType": "YulTypedName",
																			"src": "981:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:22",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:22"
																				},
																				"nativeSrc": "1036:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:22",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:22"
																		},
																		"nativeSrc": "1016:52:22",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:22"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:22"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:22",
														"nodeType": "YulTypedName",
														"src": "793:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:22",
														"nodeType": "YulTypedName",
														"src": "804:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:22",
														"nodeType": "YulTypedName",
														"src": "816:6:22",
														"type": ""
													}
												],
												"src": "758:327:22"
											},
											{
												"body": {
													"nativeSrc": "1133:48:22",
													"nodeType": "YulBlock",
													"src": "1133:48:22",
													"statements": [
														{
															"nativeSrc": "1143:32:22",
															"nodeType": "YulAssignment",
															"src": "1143:32:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:22"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:22"
																		},
																		"nativeSrc": "1161:13:22",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:22"
																},
																"nativeSrc": "1154:21:22",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:22"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:22",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:22"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:22",
														"nodeType": "YulTypedName",
														"src": "1115:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:22",
														"nodeType": "YulTypedName",
														"src": "1125:7:22",
														"type": ""
													}
												],
												"src": "1091:90:22"
											},
											{
												"body": {
													"nativeSrc": "1246:50:22",
													"nodeType": "YulBlock",
													"src": "1246:50:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:22"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:22",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:22"
																		},
																		"nativeSrc": "1268:21:22",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:22"
																},
																"nativeSrc": "1256:34:22",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:22"
															},
															"nativeSrc": "1256:34:22",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:22"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:22",
														"nodeType": "YulTypedName",
														"src": "1234:5:22",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:22",
														"nodeType": "YulTypedName",
														"src": "1241:3:22",
														"type": ""
													}
												],
												"src": "1187:109:22"
											},
											{
												"body": {
													"nativeSrc": "1394:118:22",
													"nodeType": "YulBlock",
													"src": "1394:118:22",
													"statements": [
														{
															"nativeSrc": "1404:26:22",
															"nodeType": "YulAssignment",
															"src": "1404:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:22",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:22"
																},
																"nativeSrc": "1412:18:22",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:22",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:22",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:22"
																		},
																		"nativeSrc": "1487:17:22",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:22",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:22"
																},
																"nativeSrc": "1440:65:22",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:22"
															},
															"nativeSrc": "1440:65:22",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:22",
														"nodeType": "YulTypedName",
														"src": "1366:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:22",
														"nodeType": "YulTypedName",
														"src": "1378:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:22",
														"nodeType": "YulTypedName",
														"src": "1389:4:22",
														"type": ""
													}
												],
												"src": "1302:210:22"
											},
											{
												"body": {
													"nativeSrc": "1577:40:22",
													"nodeType": "YulBlock",
													"src": "1577:40:22",
													"statements": [
														{
															"nativeSrc": "1588:22:22",
															"nodeType": "YulAssignment",
															"src": "1588:22:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:22"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:22"
																},
																"nativeSrc": "1598:12:22",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:22"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:22"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:22",
														"nodeType": "YulTypedName",
														"src": "1560:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:22",
														"nodeType": "YulTypedName",
														"src": "1570:6:22",
														"type": ""
													}
												],
												"src": "1518:99:22"
											},
											{
												"body": {
													"nativeSrc": "1719:73:22",
													"nodeType": "YulBlock",
													"src": "1719:73:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:22"
																},
																"nativeSrc": "1729:19:22",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:22"
															},
															"nativeSrc": "1729:19:22",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:22"
														},
														{
															"nativeSrc": "1757:29:22",
															"nodeType": "YulAssignment",
															"src": "1757:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:22",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:22"
																},
																"nativeSrc": "1772:14:22",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:22"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:22",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:22"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:22",
														"nodeType": "YulTypedName",
														"src": "1691:3:22",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:22",
														"nodeType": "YulTypedName",
														"src": "1696:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:22",
														"nodeType": "YulTypedName",
														"src": "1707:11:22",
														"type": ""
													}
												],
												"src": "1623:169:22"
											},
											{
												"body": {
													"nativeSrc": "1860:77:22",
													"nodeType": "YulBlock",
													"src": "1860:77:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:22"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:22"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:22"
																},
																"nativeSrc": "1871:23:22",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:22"
															},
															"nativeSrc": "1871:23:22",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:22"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:22"
																		},
																		"nativeSrc": "1910:16:22",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:22",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:22"
																},
																"nativeSrc": "1903:27:22",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:22"
															},
															"nativeSrc": "1903:27:22",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:22"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:22",
														"nodeType": "YulTypedName",
														"src": "1842:3:22",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:22",
														"nodeType": "YulTypedName",
														"src": "1847:3:22",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:22",
														"nodeType": "YulTypedName",
														"src": "1852:6:22",
														"type": ""
													}
												],
												"src": "1798:139:22"
											},
											{
												"body": {
													"nativeSrc": "1991:54:22",
													"nodeType": "YulBlock",
													"src": "1991:54:22",
													"statements": [
														{
															"nativeSrc": "2001:38:22",
															"nodeType": "YulAssignment",
															"src": "2001:38:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:22",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:22",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:22"
																		},
																		"nativeSrc": "2015:14:22",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:22"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:22",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:22",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:22"
																		},
																		"nativeSrc": "2031:7:22",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:22"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:22"
																},
																"nativeSrc": "2011:28:22",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:22"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:22"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:22",
														"nodeType": "YulTypedName",
														"src": "1974:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:22",
														"nodeType": "YulTypedName",
														"src": "1984:6:22",
														"type": ""
													}
												],
												"src": "1943:102:22"
											},
											{
												"body": {
													"nativeSrc": "2143:285:22",
													"nodeType": "YulBlock",
													"src": "2143:285:22",
													"statements": [
														{
															"nativeSrc": "2153:53:22",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:22"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:22",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:22"
																},
																"nativeSrc": "2167:39:22",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:22"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:22",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:22",
															"nodeType": "YulAssignment",
															"src": "2215:78:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:22",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:22"
																},
																"nativeSrc": "2222:71:22",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:22"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:22",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:22"
																		},
																		"nativeSrc": "2337:16:22",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:22"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:22"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:22",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:22"
																},
																"nativeSrc": "2302:65:22",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:22"
															},
															"nativeSrc": "2302:65:22",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:22"
														},
														{
															"nativeSrc": "2376:46:22",
															"nodeType": "YulAssignment",
															"src": "2376:46:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:22"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:22",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:22"
																		},
																		"nativeSrc": "2392:29:22",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:22"
																},
																"nativeSrc": "2383:39:22",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:22",
														"nodeType": "YulTypedName",
														"src": "2124:5:22",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:22",
														"nodeType": "YulTypedName",
														"src": "2131:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:22",
														"nodeType": "YulTypedName",
														"src": "2139:3:22",
														"type": ""
													}
												],
												"src": "2051:377:22"
											},
											{
												"body": {
													"nativeSrc": "2552:195:22",
													"nodeType": "YulBlock",
													"src": "2552:195:22",
													"statements": [
														{
															"nativeSrc": "2562:26:22",
															"nodeType": "YulAssignment",
															"src": "2562:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:22",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:22"
																},
																"nativeSrc": "2570:18:22",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:22",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:22",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:22"
																		},
																		"nativeSrc": "2605:17:22",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:22",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:22"
																		},
																		"nativeSrc": "2624:20:22",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:22"
																},
																"nativeSrc": "2598:47:22",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:22"
															},
															"nativeSrc": "2598:47:22",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:22"
														},
														{
															"nativeSrc": "2654:86:22",
															"nodeType": "YulAssignment",
															"src": "2654:86:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:22"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:22",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:22"
																},
																"nativeSrc": "2662:78:22",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:22",
														"nodeType": "YulTypedName",
														"src": "2524:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:22",
														"nodeType": "YulTypedName",
														"src": "2536:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:22",
														"nodeType": "YulTypedName",
														"src": "2547:4:22",
														"type": ""
													}
												],
												"src": "2434:313:22"
											},
											{
												"body": {
													"nativeSrc": "2798:32:22",
													"nodeType": "YulBlock",
													"src": "2798:32:22",
													"statements": [
														{
															"nativeSrc": "2808:16:22",
															"nodeType": "YulAssignment",
															"src": "2808:16:22",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:22",
																"nodeType": "YulIdentifier",
																"src": "2819:5:22"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:22",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:22"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:22",
														"nodeType": "YulTypedName",
														"src": "2780:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:22",
														"nodeType": "YulTypedName",
														"src": "2790:7:22",
														"type": ""
													}
												],
												"src": "2753:77:22"
											},
											{
												"body": {
													"nativeSrc": "2879:79:22",
													"nodeType": "YulBlock",
													"src": "2879:79:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:22",
																"nodeType": "YulBlock",
																"src": "2936:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:22",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:22",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:22"
																			},
																			"nativeSrc": "2938:12:22",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:22"
																		},
																		"nativeSrc": "2938:12:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:22",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:22"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:22",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:22"
																				},
																				"nativeSrc": "2909:24:22",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:22",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:22"
																		},
																		"nativeSrc": "2899:35:22",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:22"
																},
																"nativeSrc": "2892:43:22",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:22"
															},
															"nativeSrc": "2889:63:22",
															"nodeType": "YulIf",
															"src": "2889:63:22"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:22",
														"nodeType": "YulTypedName",
														"src": "2872:5:22",
														"type": ""
													}
												],
												"src": "2836:122:22"
											},
											{
												"body": {
													"nativeSrc": "3016:87:22",
													"nodeType": "YulBlock",
													"src": "3016:87:22",
													"statements": [
														{
															"nativeSrc": "3026:29:22",
															"nodeType": "YulAssignment",
															"src": "3026:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:22",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:22"
																},
																"nativeSrc": "3035:20:22",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:22"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:22",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:22"
																},
																"nativeSrc": "3064:33:22",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:22"
															},
															"nativeSrc": "3064:33:22",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:22"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:22",
														"nodeType": "YulTypedName",
														"src": "2994:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:22",
														"nodeType": "YulTypedName",
														"src": "3002:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:22",
														"nodeType": "YulTypedName",
														"src": "3010:5:22",
														"type": ""
													}
												],
												"src": "2964:139:22"
											},
											{
												"body": {
													"nativeSrc": "3175:263:22",
													"nodeType": "YulBlock",
													"src": "3175:263:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:22",
																"nodeType": "YulBlock",
																"src": "3221:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:22"
																			},
																			"nativeSrc": "3223:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:22"
																		},
																		"nativeSrc": "3223:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:22"
																		},
																		"nativeSrc": "3192:23:22",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:22",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:22"
																},
																"nativeSrc": "3188:32:22",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:22"
															},
															"nativeSrc": "3185:119:22",
															"nodeType": "YulIf",
															"src": "3185:119:22"
														},
														{
															"nativeSrc": "3314:117:22",
															"nodeType": "YulBlock",
															"src": "3314:117:22",
															"statements": [
																{
																	"nativeSrc": "3329:15:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:22",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:22",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:22",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:22",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:22"
																				},
																				"nativeSrc": "3389:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:22"
																		},
																		"nativeSrc": "3368:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:22"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:22",
														"nodeType": "YulTypedName",
														"src": "3145:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:22",
														"nodeType": "YulTypedName",
														"src": "3156:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:22",
														"nodeType": "YulTypedName",
														"src": "3168:6:22",
														"type": ""
													}
												],
												"src": "3109:329:22"
											},
											{
												"body": {
													"nativeSrc": "3489:81:22",
													"nodeType": "YulBlock",
													"src": "3489:81:22",
													"statements": [
														{
															"nativeSrc": "3499:65:22",
															"nodeType": "YulAssignment",
															"src": "3499:65:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:22",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:22",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:22"
																},
																"nativeSrc": "3510:54:22",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:22"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:22",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:22"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:22",
														"nodeType": "YulTypedName",
														"src": "3471:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:22",
														"nodeType": "YulTypedName",
														"src": "3481:7:22",
														"type": ""
													}
												],
												"src": "3444:126:22"
											},
											{
												"body": {
													"nativeSrc": "3621:51:22",
													"nodeType": "YulBlock",
													"src": "3621:51:22",
													"statements": [
														{
															"nativeSrc": "3631:35:22",
															"nodeType": "YulAssignment",
															"src": "3631:35:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:22"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:22",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:22"
																},
																"nativeSrc": "3642:24:22",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:22"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:22",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:22"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:22",
														"nodeType": "YulTypedName",
														"src": "3603:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:22",
														"nodeType": "YulTypedName",
														"src": "3613:7:22",
														"type": ""
													}
												],
												"src": "3576:96:22"
											},
											{
												"body": {
													"nativeSrc": "3743:53:22",
													"nodeType": "YulBlock",
													"src": "3743:53:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:22"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:22",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:22"
																		},
																		"nativeSrc": "3765:24:22",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:22"
																},
																"nativeSrc": "3753:37:22",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:22"
															},
															"nativeSrc": "3753:37:22",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:22"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:22",
														"nodeType": "YulTypedName",
														"src": "3731:5:22",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:22",
														"nodeType": "YulTypedName",
														"src": "3738:3:22",
														"type": ""
													}
												],
												"src": "3678:118:22"
											},
											{
												"body": {
													"nativeSrc": "3900:124:22",
													"nodeType": "YulBlock",
													"src": "3900:124:22",
													"statements": [
														{
															"nativeSrc": "3910:26:22",
															"nodeType": "YulAssignment",
															"src": "3910:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:22",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:22"
																},
																"nativeSrc": "3918:18:22",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:22",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:22",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:22"
																		},
																		"nativeSrc": "3999:17:22",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:22"
																},
																"nativeSrc": "3946:71:22",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:22"
															},
															"nativeSrc": "3946:71:22",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:22",
														"nodeType": "YulTypedName",
														"src": "3872:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:22",
														"nodeType": "YulTypedName",
														"src": "3884:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:22",
														"nodeType": "YulTypedName",
														"src": "3895:4:22",
														"type": ""
													}
												],
												"src": "3802:222:22"
											},
											{
												"body": {
													"nativeSrc": "4073:79:22",
													"nodeType": "YulBlock",
													"src": "4073:79:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:22",
																"nodeType": "YulBlock",
																"src": "4130:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:22",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:22",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:22"
																			},
																			"nativeSrc": "4132:12:22",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:22"
																		},
																		"nativeSrc": "4132:12:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:22",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:22"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:22",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:22"
																				},
																				"nativeSrc": "4103:24:22",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:22",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:22"
																		},
																		"nativeSrc": "4093:35:22",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:22"
																},
																"nativeSrc": "4086:43:22",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:22"
															},
															"nativeSrc": "4083:63:22",
															"nodeType": "YulIf",
															"src": "4083:63:22"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:22",
														"nodeType": "YulTypedName",
														"src": "4066:5:22",
														"type": ""
													}
												],
												"src": "4030:122:22"
											},
											{
												"body": {
													"nativeSrc": "4210:87:22",
													"nodeType": "YulBlock",
													"src": "4210:87:22",
													"statements": [
														{
															"nativeSrc": "4220:29:22",
															"nodeType": "YulAssignment",
															"src": "4220:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:22",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:22"
																},
																"nativeSrc": "4229:20:22",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:22"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:22",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:22"
																},
																"nativeSrc": "4258:33:22",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:22"
															},
															"nativeSrc": "4258:33:22",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:22"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:22",
														"nodeType": "YulTypedName",
														"src": "4188:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:22",
														"nodeType": "YulTypedName",
														"src": "4196:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:22",
														"nodeType": "YulTypedName",
														"src": "4204:5:22",
														"type": ""
													}
												],
												"src": "4158:139:22"
											},
											{
												"body": {
													"nativeSrc": "4386:391:22",
													"nodeType": "YulBlock",
													"src": "4386:391:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:22",
																"nodeType": "YulBlock",
																"src": "4432:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:22"
																			},
																			"nativeSrc": "4434:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:22"
																		},
																		"nativeSrc": "4434:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:22"
																		},
																		"nativeSrc": "4403:23:22",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:22",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:22"
																},
																"nativeSrc": "4399:32:22",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:22"
															},
															"nativeSrc": "4396:119:22",
															"nodeType": "YulIf",
															"src": "4396:119:22"
														},
														{
															"nativeSrc": "4525:117:22",
															"nodeType": "YulBlock",
															"src": "4525:117:22",
															"statements": [
																{
																	"nativeSrc": "4540:15:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:22",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:22",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:22",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:22",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:22"
																				},
																				"nativeSrc": "4600:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:22"
																		},
																		"nativeSrc": "4579:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:22"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:22",
															"nodeType": "YulBlock",
															"src": "4652:118:22",
															"statements": [
																{
																	"nativeSrc": "4667:16:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:22",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:22",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:22",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:22",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:22"
																				},
																				"nativeSrc": "4728:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:22"
																		},
																		"nativeSrc": "4707:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:22"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:22",
														"nodeType": "YulTypedName",
														"src": "4348:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:22",
														"nodeType": "YulTypedName",
														"src": "4359:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:22",
														"nodeType": "YulTypedName",
														"src": "4371:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:22",
														"nodeType": "YulTypedName",
														"src": "4379:6:22",
														"type": ""
													}
												],
												"src": "4303:474:22"
											},
											{
												"body": {
													"nativeSrc": "4848:53:22",
													"nodeType": "YulBlock",
													"src": "4848:53:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4865:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "4865:3:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4888:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "4888:5:22"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4870:17:22",
																			"nodeType": "YulIdentifier",
																			"src": "4870:17:22"
																		},
																		"nativeSrc": "4870:24:22",
																		"nodeType": "YulFunctionCall",
																		"src": "4870:24:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4858:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "4858:6:22"
																},
																"nativeSrc": "4858:37:22",
																"nodeType": "YulFunctionCall",
																"src": "4858:37:22"
															},
															"nativeSrc": "4858:37:22",
															"nodeType": "YulExpressionStatement",
															"src": "4858:37:22"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4783:118:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4836:5:22",
														"nodeType": "YulTypedName",
														"src": "4836:5:22",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4843:3:22",
														"nodeType": "YulTypedName",
														"src": "4843:3:22",
														"type": ""
													}
												],
												"src": "4783:118:22"
											},
											{
												"body": {
													"nativeSrc": "5081:359:22",
													"nodeType": "YulBlock",
													"src": "5081:359:22",
													"statements": [
														{
															"nativeSrc": "5091:26:22",
															"nodeType": "YulAssignment",
															"src": "5091:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5103:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "5103:9:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5114:2:22",
																		"nodeType": "YulLiteral",
																		"src": "5114:2:22",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5099:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "5099:3:22"
																},
																"nativeSrc": "5099:18:22",
																"nodeType": "YulFunctionCall",
																"src": "5099:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5091:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "5091:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5171:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "5171:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5184:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "5184:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5195:1:22",
																				"nodeType": "YulLiteral",
																				"src": "5195:1:22",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5180:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "5180:3:22"
																		},
																		"nativeSrc": "5180:17:22",
																		"nodeType": "YulFunctionCall",
																		"src": "5180:17:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5127:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "5127:43:22"
																},
																"nativeSrc": "5127:71:22",
																"nodeType": "YulFunctionCall",
																"src": "5127:71:22"
															},
															"nativeSrc": "5127:71:22",
															"nodeType": "YulExpressionStatement",
															"src": "5127:71:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5252:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "5252:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5265:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "5265:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5276:2:22",
																				"nodeType": "YulLiteral",
																				"src": "5276:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5261:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "5261:3:22"
																		},
																		"nativeSrc": "5261:18:22",
																		"nodeType": "YulFunctionCall",
																		"src": "5261:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5208:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "5208:43:22"
																},
																"nativeSrc": "5208:72:22",
																"nodeType": "YulFunctionCall",
																"src": "5208:72:22"
															},
															"nativeSrc": "5208:72:22",
															"nodeType": "YulExpressionStatement",
															"src": "5208:72:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5301:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5312:2:22",
																				"nodeType": "YulLiteral",
																				"src": "5312:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5297:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "5297:3:22"
																		},
																		"nativeSrc": "5297:18:22",
																		"nodeType": "YulFunctionCall",
																		"src": "5297:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5321:4:22",
																				"nodeType": "YulIdentifier",
																				"src": "5321:4:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5327:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "5327:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5317:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "5317:3:22"
																		},
																		"nativeSrc": "5317:20:22",
																		"nodeType": "YulFunctionCall",
																		"src": "5317:20:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5290:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "5290:6:22"
																},
																"nativeSrc": "5290:48:22",
																"nodeType": "YulFunctionCall",
																"src": "5290:48:22"
															},
															"nativeSrc": "5290:48:22",
															"nodeType": "YulExpressionStatement",
															"src": "5290:48:22"
														},
														{
															"nativeSrc": "5347:86:22",
															"nodeType": "YulAssignment",
															"src": "5347:86:22",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5419:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "5419:6:22"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5428:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "5428:4:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5355:63:22",
																	"nodeType": "YulIdentifier",
																	"src": "5355:63:22"
																},
																"nativeSrc": "5355:78:22",
																"nodeType": "YulFunctionCall",
																"src": "5355:78:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5347:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "5347:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr__to_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4907:533:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5037:9:22",
														"nodeType": "YulTypedName",
														"src": "5037:9:22",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5049:6:22",
														"nodeType": "YulTypedName",
														"src": "5049:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5057:6:22",
														"nodeType": "YulTypedName",
														"src": "5057:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5065:6:22",
														"nodeType": "YulTypedName",
														"src": "5065:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5076:4:22",
														"nodeType": "YulTypedName",
														"src": "5076:4:22",
														"type": ""
													}
												],
												"src": "4907:533:22"
											},
											{
												"body": {
													"nativeSrc": "5544:124:22",
													"nodeType": "YulBlock",
													"src": "5544:124:22",
													"statements": [
														{
															"nativeSrc": "5554:26:22",
															"nodeType": "YulAssignment",
															"src": "5554:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5566:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "5566:9:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5577:2:22",
																		"nodeType": "YulLiteral",
																		"src": "5577:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5562:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "5562:3:22"
																},
																"nativeSrc": "5562:18:22",
																"nodeType": "YulFunctionCall",
																"src": "5562:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5554:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "5554:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5634:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "5634:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:1:22",
																				"nodeType": "YulLiteral",
																				"src": "5658:1:22",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:22"
																		},
																		"nativeSrc": "5643:17:22",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:17:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5590:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "5590:43:22"
																},
																"nativeSrc": "5590:71:22",
																"nodeType": "YulFunctionCall",
																"src": "5590:71:22"
															},
															"nativeSrc": "5590:71:22",
															"nodeType": "YulExpressionStatement",
															"src": "5590:71:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5446:222:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5516:9:22",
														"nodeType": "YulTypedName",
														"src": "5516:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5528:6:22",
														"nodeType": "YulTypedName",
														"src": "5528:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5539:4:22",
														"nodeType": "YulTypedName",
														"src": "5539:4:22",
														"type": ""
													}
												],
												"src": "5446:222:22"
											},
											{
												"body": {
													"nativeSrc": "5774:519:22",
													"nodeType": "YulBlock",
													"src": "5774:519:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "5820:83:22",
																"nodeType": "YulBlock",
																"src": "5820:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5822:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "5822:77:22"
																			},
																			"nativeSrc": "5822:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "5822:79:22"
																		},
																		"nativeSrc": "5822:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "5822:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5795:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "5795:7:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5804:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "5804:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5791:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:22"
																		},
																		"nativeSrc": "5791:23:22",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:23:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5816:2:22",
																		"nodeType": "YulLiteral",
																		"src": "5816:2:22",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5787:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "5787:3:22"
																},
																"nativeSrc": "5787:32:22",
																"nodeType": "YulFunctionCall",
																"src": "5787:32:22"
															},
															"nativeSrc": "5784:119:22",
															"nodeType": "YulIf",
															"src": "5784:119:22"
														},
														{
															"nativeSrc": "5913:117:22",
															"nodeType": "YulBlock",
															"src": "5913:117:22",
															"statements": [
																{
																	"nativeSrc": "5928:15:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5928:15:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5942:1:22",
																		"nodeType": "YulLiteral",
																		"src": "5942:1:22",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5932:6:22",
																			"nodeType": "YulTypedName",
																			"src": "5932:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5957:63:22",
																	"nodeType": "YulAssignment",
																	"src": "5957:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5992:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "5992:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6003:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "6003:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5988:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "5988:3:22"
																				},
																				"nativeSrc": "5988:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "5988:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6012:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "6012:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5967:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "5967:20:22"
																		},
																		"nativeSrc": "5967:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "5967:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5957:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "5957:6:22"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6040:118:22",
															"nodeType": "YulBlock",
															"src": "6040:118:22",
															"statements": [
																{
																	"nativeSrc": "6055:16:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6055:16:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6069:2:22",
																		"nodeType": "YulLiteral",
																		"src": "6069:2:22",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6059:6:22",
																			"nodeType": "YulTypedName",
																			"src": "6059:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6085:63:22",
																	"nodeType": "YulAssignment",
																	"src": "6085:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6120:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "6120:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6131:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "6131:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6116:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "6116:3:22"
																				},
																				"nativeSrc": "6116:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "6116:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6140:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6095:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "6095:20:22"
																		},
																		"nativeSrc": "6095:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "6095:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6085:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "6085:6:22"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6168:118:22",
															"nodeType": "YulBlock",
															"src": "6168:118:22",
															"statements": [
																{
																	"nativeSrc": "6183:16:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6183:16:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6197:2:22",
																		"nodeType": "YulLiteral",
																		"src": "6197:2:22",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6187:6:22",
																			"nodeType": "YulTypedName",
																			"src": "6187:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6213:63:22",
																	"nodeType": "YulAssignment",
																	"src": "6213:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6248:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "6248:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6259:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "6259:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6244:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "6244:3:22"
																				},
																				"nativeSrc": "6244:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "6244:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6268:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "6268:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6223:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "6223:20:22"
																		},
																		"nativeSrc": "6223:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "6223:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6213:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "6213:6:22"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5674:619:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5728:9:22",
														"nodeType": "YulTypedName",
														"src": "5728:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5739:7:22",
														"nodeType": "YulTypedName",
														"src": "5739:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5751:6:22",
														"nodeType": "YulTypedName",
														"src": "5751:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5759:6:22",
														"nodeType": "YulTypedName",
														"src": "5759:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5767:6:22",
														"nodeType": "YulTypedName",
														"src": "5767:6:22",
														"type": ""
													}
												],
												"src": "5674:619:22"
											},
											{
												"body": {
													"nativeSrc": "6365:263:22",
													"nodeType": "YulBlock",
													"src": "6365:263:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "6411:83:22",
																"nodeType": "YulBlock",
																"src": "6411:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6413:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "6413:77:22"
																			},
																			"nativeSrc": "6413:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "6413:79:22"
																		},
																		"nativeSrc": "6413:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "6413:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6386:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "6386:7:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6395:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "6395:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6382:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "6382:3:22"
																		},
																		"nativeSrc": "6382:23:22",
																		"nodeType": "YulFunctionCall",
																		"src": "6382:23:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6407:2:22",
																		"nodeType": "YulLiteral",
																		"src": "6407:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6378:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "6378:3:22"
																},
																"nativeSrc": "6378:32:22",
																"nodeType": "YulFunctionCall",
																"src": "6378:32:22"
															},
															"nativeSrc": "6375:119:22",
															"nodeType": "YulIf",
															"src": "6375:119:22"
														},
														{
															"nativeSrc": "6504:117:22",
															"nodeType": "YulBlock",
															"src": "6504:117:22",
															"statements": [
																{
																	"nativeSrc": "6519:15:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6519:15:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6533:1:22",
																		"nodeType": "YulLiteral",
																		"src": "6533:1:22",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6523:6:22",
																			"nodeType": "YulTypedName",
																			"src": "6523:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6548:63:22",
																	"nodeType": "YulAssignment",
																	"src": "6548:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6583:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "6583:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6594:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "6594:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6579:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "6579:3:22"
																				},
																				"nativeSrc": "6579:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "6579:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6603:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "6603:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6558:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "6558:20:22"
																		},
																		"nativeSrc": "6558:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "6558:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6548:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "6548:6:22"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6299:329:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6335:9:22",
														"nodeType": "YulTypedName",
														"src": "6335:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6346:7:22",
														"nodeType": "YulTypedName",
														"src": "6346:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6358:6:22",
														"nodeType": "YulTypedName",
														"src": "6358:6:22",
														"type": ""
													}
												],
												"src": "6299:329:22"
											},
											{
												"body": {
													"nativeSrc": "6674:76:22",
													"nodeType": "YulBlock",
													"src": "6674:76:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "6728:16:22",
																"nodeType": "YulBlock",
																"src": "6728:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6737:1:22",
																					"nodeType": "YulLiteral",
																					"src": "6737:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6740:1:22",
																					"nodeType": "YulLiteral",
																					"src": "6740:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6730:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "6730:6:22"
																			},
																			"nativeSrc": "6730:12:22",
																			"nodeType": "YulFunctionCall",
																			"src": "6730:12:22"
																		},
																		"nativeSrc": "6730:12:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "6730:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6697:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "6697:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6719:5:22",
																						"nodeType": "YulIdentifier",
																						"src": "6719:5:22"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6704:14:22",
																					"nodeType": "YulIdentifier",
																					"src": "6704:14:22"
																				},
																				"nativeSrc": "6704:21:22",
																				"nodeType": "YulFunctionCall",
																				"src": "6704:21:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6694:2:22",
																			"nodeType": "YulIdentifier",
																			"src": "6694:2:22"
																		},
																		"nativeSrc": "6694:32:22",
																		"nodeType": "YulFunctionCall",
																		"src": "6694:32:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6687:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "6687:6:22"
																},
																"nativeSrc": "6687:40:22",
																"nodeType": "YulFunctionCall",
																"src": "6687:40:22"
															},
															"nativeSrc": "6684:60:22",
															"nodeType": "YulIf",
															"src": "6684:60:22"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6634:116:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6667:5:22",
														"nodeType": "YulTypedName",
														"src": "6667:5:22",
														"type": ""
													}
												],
												"src": "6634:116:22"
											},
											{
												"body": {
													"nativeSrc": "6805:84:22",
													"nodeType": "YulBlock",
													"src": "6805:84:22",
													"statements": [
														{
															"nativeSrc": "6815:29:22",
															"nodeType": "YulAssignment",
															"src": "6815:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6837:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "6837:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6824:12:22",
																	"nodeType": "YulIdentifier",
																	"src": "6824:12:22"
																},
																"nativeSrc": "6824:20:22",
																"nodeType": "YulFunctionCall",
																"src": "6824:20:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6815:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "6815:5:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6877:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "6877:5:22"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6853:23:22",
																	"nodeType": "YulIdentifier",
																	"src": "6853:23:22"
																},
																"nativeSrc": "6853:30:22",
																"nodeType": "YulFunctionCall",
																"src": "6853:30:22"
															},
															"nativeSrc": "6853:30:22",
															"nodeType": "YulExpressionStatement",
															"src": "6853:30:22"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6756:133:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6783:6:22",
														"nodeType": "YulTypedName",
														"src": "6783:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6791:3:22",
														"nodeType": "YulTypedName",
														"src": "6791:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6799:5:22",
														"nodeType": "YulTypedName",
														"src": "6799:5:22",
														"type": ""
													}
												],
												"src": "6756:133:22"
											},
											{
												"body": {
													"nativeSrc": "6975:388:22",
													"nodeType": "YulBlock",
													"src": "6975:388:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "7021:83:22",
																"nodeType": "YulBlock",
																"src": "7021:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7023:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "7023:77:22"
																			},
																			"nativeSrc": "7023:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "7023:79:22"
																		},
																		"nativeSrc": "7023:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "7023:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6996:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "6996:7:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7005:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "7005:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6992:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "6992:3:22"
																		},
																		"nativeSrc": "6992:23:22",
																		"nodeType": "YulFunctionCall",
																		"src": "6992:23:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7017:2:22",
																		"nodeType": "YulLiteral",
																		"src": "7017:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6988:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "6988:3:22"
																},
																"nativeSrc": "6988:32:22",
																"nodeType": "YulFunctionCall",
																"src": "6988:32:22"
															},
															"nativeSrc": "6985:119:22",
															"nodeType": "YulIf",
															"src": "6985:119:22"
														},
														{
															"nativeSrc": "7114:117:22",
															"nodeType": "YulBlock",
															"src": "7114:117:22",
															"statements": [
																{
																	"nativeSrc": "7129:15:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7129:15:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7143:1:22",
																		"nodeType": "YulLiteral",
																		"src": "7143:1:22",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7133:6:22",
																			"nodeType": "YulTypedName",
																			"src": "7133:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7158:63:22",
																	"nodeType": "YulAssignment",
																	"src": "7158:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7193:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "7193:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7204:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "7204:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7189:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "7189:3:22"
																				},
																				"nativeSrc": "7189:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "7189:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7213:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "7213:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7168:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "7168:20:22"
																		},
																		"nativeSrc": "7168:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "7168:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7158:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "7158:6:22"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7241:115:22",
															"nodeType": "YulBlock",
															"src": "7241:115:22",
															"statements": [
																{
																	"nativeSrc": "7256:16:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7256:16:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7270:2:22",
																		"nodeType": "YulLiteral",
																		"src": "7270:2:22",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7260:6:22",
																			"nodeType": "YulTypedName",
																			"src": "7260:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7286:60:22",
																	"nodeType": "YulAssignment",
																	"src": "7286:60:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7318:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "7318:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7329:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "7329:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7314:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "7314:3:22"
																				},
																				"nativeSrc": "7314:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "7314:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7338:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "7338:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7296:17:22",
																			"nodeType": "YulIdentifier",
																			"src": "7296:17:22"
																		},
																		"nativeSrc": "7296:50:22",
																		"nodeType": "YulFunctionCall",
																		"src": "7296:50:22"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7286:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "7286:6:22"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6895:468:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6937:9:22",
														"nodeType": "YulTypedName",
														"src": "6937:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6948:7:22",
														"nodeType": "YulTypedName",
														"src": "6948:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6960:6:22",
														"nodeType": "YulTypedName",
														"src": "6960:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6968:6:22",
														"nodeType": "YulTypedName",
														"src": "6968:6:22",
														"type": ""
													}
												],
												"src": "6895:468:22"
											},
											{
												"body": {
													"nativeSrc": "7458:28:22",
													"nodeType": "YulBlock",
													"src": "7458:28:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7475:1:22",
																		"nodeType": "YulLiteral",
																		"src": "7475:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7478:1:22",
																		"nodeType": "YulLiteral",
																		"src": "7478:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7468:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "7468:6:22"
																},
																"nativeSrc": "7468:12:22",
																"nodeType": "YulFunctionCall",
																"src": "7468:12:22"
															},
															"nativeSrc": "7468:12:22",
															"nodeType": "YulExpressionStatement",
															"src": "7468:12:22"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7369:117:22",
												"nodeType": "YulFunctionDefinition",
												"src": "7369:117:22"
											},
											{
												"body": {
													"nativeSrc": "7581:28:22",
													"nodeType": "YulBlock",
													"src": "7581:28:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7598:1:22",
																		"nodeType": "YulLiteral",
																		"src": "7598:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7601:1:22",
																		"nodeType": "YulLiteral",
																		"src": "7601:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7591:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "7591:6:22"
																},
																"nativeSrc": "7591:12:22",
																"nodeType": "YulFunctionCall",
																"src": "7591:12:22"
															},
															"nativeSrc": "7591:12:22",
															"nodeType": "YulExpressionStatement",
															"src": "7591:12:22"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7492:117:22",
												"nodeType": "YulFunctionDefinition",
												"src": "7492:117:22"
											},
											{
												"body": {
													"nativeSrc": "7643:152:22",
													"nodeType": "YulBlock",
													"src": "7643:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7660:1:22",
																		"nodeType": "YulLiteral",
																		"src": "7660:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7663:77:22",
																		"nodeType": "YulLiteral",
																		"src": "7663:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7653:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "7653:6:22"
																},
																"nativeSrc": "7653:88:22",
																"nodeType": "YulFunctionCall",
																"src": "7653:88:22"
															},
															"nativeSrc": "7653:88:22",
															"nodeType": "YulExpressionStatement",
															"src": "7653:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7757:1:22",
																		"nodeType": "YulLiteral",
																		"src": "7757:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7760:4:22",
																		"nodeType": "YulLiteral",
																		"src": "7760:4:22",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7750:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "7750:6:22"
																},
																"nativeSrc": "7750:15:22",
																"nodeType": "YulFunctionCall",
																"src": "7750:15:22"
															},
															"nativeSrc": "7750:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "7750:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7781:1:22",
																		"nodeType": "YulLiteral",
																		"src": "7781:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7784:4:22",
																		"nodeType": "YulLiteral",
																		"src": "7784:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7774:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "7774:6:22"
																},
																"nativeSrc": "7774:15:22",
																"nodeType": "YulFunctionCall",
																"src": "7774:15:22"
															},
															"nativeSrc": "7774:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "7774:15:22"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7615:180:22",
												"nodeType": "YulFunctionDefinition",
												"src": "7615:180:22"
											},
											{
												"body": {
													"nativeSrc": "7844:238:22",
													"nodeType": "YulBlock",
													"src": "7844:238:22",
													"statements": [
														{
															"nativeSrc": "7854:58:22",
															"nodeType": "YulVariableDeclaration",
															"src": "7854:58:22",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7876:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "7876:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7906:4:22",
																				"nodeType": "YulIdentifier",
																				"src": "7906:4:22"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7884:21:22",
																			"nodeType": "YulIdentifier",
																			"src": "7884:21:22"
																		},
																		"nativeSrc": "7884:27:22",
																		"nodeType": "YulFunctionCall",
																		"src": "7884:27:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7872:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "7872:3:22"
																},
																"nativeSrc": "7872:40:22",
																"nodeType": "YulFunctionCall",
																"src": "7872:40:22"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7858:10:22",
																	"nodeType": "YulTypedName",
																	"src": "7858:10:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8023:22:22",
																"nodeType": "YulBlock",
																"src": "8023:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8025:16:22",
																				"nodeType": "YulIdentifier",
																				"src": "8025:16:22"
																			},
																			"nativeSrc": "8025:18:22",
																			"nodeType": "YulFunctionCall",
																			"src": "8025:18:22"
																		},
																		"nativeSrc": "8025:18:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "8025:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7966:10:22",
																				"nodeType": "YulIdentifier",
																				"src": "7966:10:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7978:18:22",
																				"nodeType": "YulLiteral",
																				"src": "7978:18:22",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7963:2:22",
																			"nodeType": "YulIdentifier",
																			"src": "7963:2:22"
																		},
																		"nativeSrc": "7963:34:22",
																		"nodeType": "YulFunctionCall",
																		"src": "7963:34:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8002:10:22",
																				"nodeType": "YulIdentifier",
																				"src": "8002:10:22"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8014:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "8014:6:22"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7999:2:22",
																			"nodeType": "YulIdentifier",
																			"src": "7999:2:22"
																		},
																		"nativeSrc": "7999:22:22",
																		"nodeType": "YulFunctionCall",
																		"src": "7999:22:22"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7960:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "7960:2:22"
																},
																"nativeSrc": "7960:62:22",
																"nodeType": "YulFunctionCall",
																"src": "7960:62:22"
															},
															"nativeSrc": "7957:88:22",
															"nodeType": "YulIf",
															"src": "7957:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8061:2:22",
																		"nodeType": "YulLiteral",
																		"src": "8061:2:22",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8065:10:22",
																		"nodeType": "YulIdentifier",
																		"src": "8065:10:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8054:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "8054:6:22"
																},
																"nativeSrc": "8054:22:22",
																"nodeType": "YulFunctionCall",
																"src": "8054:22:22"
															},
															"nativeSrc": "8054:22:22",
															"nodeType": "YulExpressionStatement",
															"src": "8054:22:22"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7801:281:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7830:6:22",
														"nodeType": "YulTypedName",
														"src": "7830:6:22",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7838:4:22",
														"nodeType": "YulTypedName",
														"src": "7838:4:22",
														"type": ""
													}
												],
												"src": "7801:281:22"
											},
											{
												"body": {
													"nativeSrc": "8129:88:22",
													"nodeType": "YulBlock",
													"src": "8129:88:22",
													"statements": [
														{
															"nativeSrc": "8139:30:22",
															"nodeType": "YulAssignment",
															"src": "8139:30:22",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8149:18:22",
																	"nodeType": "YulIdentifier",
																	"src": "8149:18:22"
																},
																"nativeSrc": "8149:20:22",
																"nodeType": "YulFunctionCall",
																"src": "8149:20:22"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8139:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "8139:6:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8198:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "8198:6:22"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8206:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "8206:4:22"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8178:19:22",
																	"nodeType": "YulIdentifier",
																	"src": "8178:19:22"
																},
																"nativeSrc": "8178:33:22",
																"nodeType": "YulFunctionCall",
																"src": "8178:33:22"
															},
															"nativeSrc": "8178:33:22",
															"nodeType": "YulExpressionStatement",
															"src": "8178:33:22"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8088:129:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8113:4:22",
														"nodeType": "YulTypedName",
														"src": "8113:4:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8122:6:22",
														"nodeType": "YulTypedName",
														"src": "8122:6:22",
														"type": ""
													}
												],
												"src": "8088:129:22"
											},
											{
												"body": {
													"nativeSrc": "8289:241:22",
													"nodeType": "YulBlock",
													"src": "8289:241:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "8394:22:22",
																"nodeType": "YulBlock",
																"src": "8394:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8396:16:22",
																				"nodeType": "YulIdentifier",
																				"src": "8396:16:22"
																			},
																			"nativeSrc": "8396:18:22",
																			"nodeType": "YulFunctionCall",
																			"src": "8396:18:22"
																		},
																		"nativeSrc": "8396:18:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "8396:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8366:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "8366:6:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8374:18:22",
																		"nodeType": "YulLiteral",
																		"src": "8374:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8363:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "8363:2:22"
																},
																"nativeSrc": "8363:30:22",
																"nodeType": "YulFunctionCall",
																"src": "8363:30:22"
															},
															"nativeSrc": "8360:56:22",
															"nodeType": "YulIf",
															"src": "8360:56:22"
														},
														{
															"nativeSrc": "8426:37:22",
															"nodeType": "YulAssignment",
															"src": "8426:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8456:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "8456:6:22"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8434:21:22",
																	"nodeType": "YulIdentifier",
																	"src": "8434:21:22"
																},
																"nativeSrc": "8434:29:22",
																"nodeType": "YulFunctionCall",
																"src": "8434:29:22"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8426:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "8426:4:22"
																}
															]
														},
														{
															"nativeSrc": "8500:23:22",
															"nodeType": "YulAssignment",
															"src": "8500:23:22",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8512:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "8512:4:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8518:4:22",
																		"nodeType": "YulLiteral",
																		"src": "8518:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8508:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "8508:3:22"
																},
																"nativeSrc": "8508:15:22",
																"nodeType": "YulFunctionCall",
																"src": "8508:15:22"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8500:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "8500:4:22"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8223:307:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8273:6:22",
														"nodeType": "YulTypedName",
														"src": "8273:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8284:4:22",
														"nodeType": "YulTypedName",
														"src": "8284:4:22",
														"type": ""
													}
												],
												"src": "8223:307:22"
											},
											{
												"body": {
													"nativeSrc": "8600:84:22",
													"nodeType": "YulBlock",
													"src": "8600:84:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8624:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "8624:3:22"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8629:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "8629:3:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8634:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "8634:6:22"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8611:12:22",
																	"nodeType": "YulIdentifier",
																	"src": "8611:12:22"
																},
																"nativeSrc": "8611:30:22",
																"nodeType": "YulFunctionCall",
																"src": "8611:30:22"
															},
															"nativeSrc": "8611:30:22",
															"nodeType": "YulExpressionStatement",
															"src": "8611:30:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8661:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "8661:3:22"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8666:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "8666:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8657:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "8657:3:22"
																		},
																		"nativeSrc": "8657:16:22",
																		"nodeType": "YulFunctionCall",
																		"src": "8657:16:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8675:1:22",
																		"nodeType": "YulLiteral",
																		"src": "8675:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8650:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "8650:6:22"
																},
																"nativeSrc": "8650:27:22",
																"nodeType": "YulFunctionCall",
																"src": "8650:27:22"
															},
															"nativeSrc": "8650:27:22",
															"nodeType": "YulExpressionStatement",
															"src": "8650:27:22"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8536:148:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8582:3:22",
														"nodeType": "YulTypedName",
														"src": "8582:3:22",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8587:3:22",
														"nodeType": "YulTypedName",
														"src": "8587:3:22",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8592:6:22",
														"nodeType": "YulTypedName",
														"src": "8592:6:22",
														"type": ""
													}
												],
												"src": "8536:148:22"
											},
											{
												"body": {
													"nativeSrc": "8773:340:22",
													"nodeType": "YulBlock",
													"src": "8773:340:22",
													"statements": [
														{
															"nativeSrc": "8783:74:22",
															"nodeType": "YulAssignment",
															"src": "8783:74:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8849:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "8849:6:22"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8808:40:22",
																			"nodeType": "YulIdentifier",
																			"src": "8808:40:22"
																		},
																		"nativeSrc": "8808:48:22",
																		"nodeType": "YulFunctionCall",
																		"src": "8808:48:22"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8792:15:22",
																	"nodeType": "YulIdentifier",
																	"src": "8792:15:22"
																},
																"nativeSrc": "8792:65:22",
																"nodeType": "YulFunctionCall",
																"src": "8792:65:22"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8783:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "8783:5:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8873:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "8873:5:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8880:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "8880:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8866:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "8866:6:22"
																},
																"nativeSrc": "8866:21:22",
																"nodeType": "YulFunctionCall",
																"src": "8866:21:22"
															},
															"nativeSrc": "8866:21:22",
															"nodeType": "YulExpressionStatement",
															"src": "8866:21:22"
														},
														{
															"nativeSrc": "8896:27:22",
															"nodeType": "YulVariableDeclaration",
															"src": "8896:27:22",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8911:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "8911:5:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8918:4:22",
																		"nodeType": "YulLiteral",
																		"src": "8918:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8907:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "8907:3:22"
																},
																"nativeSrc": "8907:16:22",
																"nodeType": "YulFunctionCall",
																"src": "8907:16:22"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8900:3:22",
																	"nodeType": "YulTypedName",
																	"src": "8900:3:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8961:83:22",
																"nodeType": "YulBlock",
																"src": "8961:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8963:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "8963:77:22"
																			},
																			"nativeSrc": "8963:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "8963:79:22"
																		},
																		"nativeSrc": "8963:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "8963:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8942:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "8942:3:22"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8947:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "8947:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8938:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "8938:3:22"
																		},
																		"nativeSrc": "8938:16:22",
																		"nodeType": "YulFunctionCall",
																		"src": "8938:16:22"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8956:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "8956:3:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8935:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "8935:2:22"
																},
																"nativeSrc": "8935:25:22",
																"nodeType": "YulFunctionCall",
																"src": "8935:25:22"
															},
															"nativeSrc": "8932:112:22",
															"nodeType": "YulIf",
															"src": "8932:112:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9090:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "9090:3:22"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9095:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "9095:3:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9100:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "9100:6:22"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9053:36:22",
																	"nodeType": "YulIdentifier",
																	"src": "9053:36:22"
																},
																"nativeSrc": "9053:54:22",
																"nodeType": "YulFunctionCall",
																"src": "9053:54:22"
															},
															"nativeSrc": "9053:54:22",
															"nodeType": "YulExpressionStatement",
															"src": "9053:54:22"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8690:423:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8746:3:22",
														"nodeType": "YulTypedName",
														"src": "8746:3:22",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8751:6:22",
														"nodeType": "YulTypedName",
														"src": "8751:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8759:3:22",
														"nodeType": "YulTypedName",
														"src": "8759:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8767:5:22",
														"nodeType": "YulTypedName",
														"src": "8767:5:22",
														"type": ""
													}
												],
												"src": "8690:423:22"
											},
											{
												"body": {
													"nativeSrc": "9193:277:22",
													"nodeType": "YulBlock",
													"src": "9193:277:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "9242:83:22",
																"nodeType": "YulBlock",
																"src": "9242:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9244:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "9244:77:22"
																			},
																			"nativeSrc": "9244:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "9244:79:22"
																		},
																		"nativeSrc": "9244:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "9244:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9221:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "9221:6:22"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9229:4:22",
																						"nodeType": "YulLiteral",
																						"src": "9229:4:22",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9217:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "9217:3:22"
																				},
																				"nativeSrc": "9217:17:22",
																				"nodeType": "YulFunctionCall",
																				"src": "9217:17:22"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9236:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "9236:3:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9213:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "9213:3:22"
																		},
																		"nativeSrc": "9213:27:22",
																		"nodeType": "YulFunctionCall",
																		"src": "9213:27:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9206:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "9206:6:22"
																},
																"nativeSrc": "9206:35:22",
																"nodeType": "YulFunctionCall",
																"src": "9206:35:22"
															},
															"nativeSrc": "9203:122:22",
															"nodeType": "YulIf",
															"src": "9203:122:22"
														},
														{
															"nativeSrc": "9334:34:22",
															"nodeType": "YulVariableDeclaration",
															"src": "9334:34:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9361:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "9361:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9348:12:22",
																	"nodeType": "YulIdentifier",
																	"src": "9348:12:22"
																},
																"nativeSrc": "9348:20:22",
																"nodeType": "YulFunctionCall",
																"src": "9348:20:22"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9338:6:22",
																	"nodeType": "YulTypedName",
																	"src": "9338:6:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9377:87:22",
															"nodeType": "YulAssignment",
															"src": "9377:87:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9437:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "9437:6:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9445:4:22",
																				"nodeType": "YulLiteral",
																				"src": "9445:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9433:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "9433:3:22"
																		},
																		"nativeSrc": "9433:17:22",
																		"nodeType": "YulFunctionCall",
																		"src": "9433:17:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9452:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "9452:6:22"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9460:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "9460:3:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9386:46:22",
																	"nodeType": "YulIdentifier",
																	"src": "9386:46:22"
																},
																"nativeSrc": "9386:78:22",
																"nodeType": "YulFunctionCall",
																"src": "9386:78:22"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9377:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "9377:5:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9132:338:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9171:6:22",
														"nodeType": "YulTypedName",
														"src": "9171:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9179:3:22",
														"nodeType": "YulTypedName",
														"src": "9179:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9187:5:22",
														"nodeType": "YulTypedName",
														"src": "9187:5:22",
														"type": ""
													}
												],
												"src": "9132:338:22"
											},
											{
												"body": {
													"nativeSrc": "9602:817:22",
													"nodeType": "YulBlock",
													"src": "9602:817:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "9649:83:22",
																"nodeType": "YulBlock",
																"src": "9649:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9651:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "9651:77:22"
																			},
																			"nativeSrc": "9651:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "9651:79:22"
																		},
																		"nativeSrc": "9651:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "9651:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9623:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "9623:7:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9632:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "9632:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9619:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "9619:3:22"
																		},
																		"nativeSrc": "9619:23:22",
																		"nodeType": "YulFunctionCall",
																		"src": "9619:23:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9644:3:22",
																		"nodeType": "YulLiteral",
																		"src": "9644:3:22",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9615:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "9615:3:22"
																},
																"nativeSrc": "9615:33:22",
																"nodeType": "YulFunctionCall",
																"src": "9615:33:22"
															},
															"nativeSrc": "9612:120:22",
															"nodeType": "YulIf",
															"src": "9612:120:22"
														},
														{
															"nativeSrc": "9742:117:22",
															"nodeType": "YulBlock",
															"src": "9742:117:22",
															"statements": [
																{
																	"nativeSrc": "9757:15:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9757:15:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9771:1:22",
																		"nodeType": "YulLiteral",
																		"src": "9771:1:22",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9761:6:22",
																			"nodeType": "YulTypedName",
																			"src": "9761:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9786:63:22",
																	"nodeType": "YulAssignment",
																	"src": "9786:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9821:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "9821:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9832:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "9832:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9817:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "9817:3:22"
																				},
																				"nativeSrc": "9817:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "9817:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9841:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "9841:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9796:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "9796:20:22"
																		},
																		"nativeSrc": "9796:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "9796:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9786:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "9786:6:22"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9869:118:22",
															"nodeType": "YulBlock",
															"src": "9869:118:22",
															"statements": [
																{
																	"nativeSrc": "9884:16:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9884:16:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9898:2:22",
																		"nodeType": "YulLiteral",
																		"src": "9898:2:22",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9888:6:22",
																			"nodeType": "YulTypedName",
																			"src": "9888:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9914:63:22",
																	"nodeType": "YulAssignment",
																	"src": "9914:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9949:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "9949:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9960:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "9960:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9945:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "9945:3:22"
																				},
																				"nativeSrc": "9945:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "9945:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9969:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "9969:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9924:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "9924:20:22"
																		},
																		"nativeSrc": "9924:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "9924:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9914:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "9914:6:22"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9997:118:22",
															"nodeType": "YulBlock",
															"src": "9997:118:22",
															"statements": [
																{
																	"nativeSrc": "10012:16:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10012:16:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10026:2:22",
																		"nodeType": "YulLiteral",
																		"src": "10026:2:22",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10016:6:22",
																			"nodeType": "YulTypedName",
																			"src": "10016:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10042:63:22",
																	"nodeType": "YulAssignment",
																	"src": "10042:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10077:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "10077:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10088:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "10088:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10073:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "10073:3:22"
																				},
																				"nativeSrc": "10073:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "10073:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10097:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "10097:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10052:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "10052:20:22"
																		},
																		"nativeSrc": "10052:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "10052:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10042:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "10042:6:22"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10125:287:22",
															"nodeType": "YulBlock",
															"src": "10125:287:22",
															"statements": [
																{
																	"nativeSrc": "10140:46:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10140:46:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10171:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "10171:9:22"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10182:2:22",
																						"nodeType": "YulLiteral",
																						"src": "10182:2:22",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10167:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "10167:3:22"
																				},
																				"nativeSrc": "10167:18:22",
																				"nodeType": "YulFunctionCall",
																				"src": "10167:18:22"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10154:12:22",
																			"nodeType": "YulIdentifier",
																			"src": "10154:12:22"
																		},
																		"nativeSrc": "10154:32:22",
																		"nodeType": "YulFunctionCall",
																		"src": "10154:32:22"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10144:6:22",
																			"nodeType": "YulTypedName",
																			"src": "10144:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10233:83:22",
																		"nodeType": "YulBlock",
																		"src": "10233:83:22",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10235:77:22",
																						"nodeType": "YulIdentifier",
																						"src": "10235:77:22"
																					},
																					"nativeSrc": "10235:79:22",
																					"nodeType": "YulFunctionCall",
																					"src": "10235:79:22"
																				},
																				"nativeSrc": "10235:79:22",
																				"nodeType": "YulExpressionStatement",
																				"src": "10235:79:22"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10205:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "10205:6:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10213:18:22",
																				"nodeType": "YulLiteral",
																				"src": "10213:18:22",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10202:2:22",
																			"nodeType": "YulIdentifier",
																			"src": "10202:2:22"
																		},
																		"nativeSrc": "10202:30:22",
																		"nodeType": "YulFunctionCall",
																		"src": "10202:30:22"
																	},
																	"nativeSrc": "10199:117:22",
																	"nodeType": "YulIf",
																	"src": "10199:117:22"
																},
																{
																	"nativeSrc": "10330:72:22",
																	"nodeType": "YulAssignment",
																	"src": "10330:72:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10374:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "10374:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10385:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "10385:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10370:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "10370:3:22"
																				},
																				"nativeSrc": "10370:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "10370:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10394:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "10394:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10340:29:22",
																			"nodeType": "YulIdentifier",
																			"src": "10340:29:22"
																		},
																		"nativeSrc": "10340:62:22",
																		"nodeType": "YulFunctionCall",
																		"src": "10340:62:22"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10330:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "10330:6:22"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9476:943:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9548:9:22",
														"nodeType": "YulTypedName",
														"src": "9548:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9559:7:22",
														"nodeType": "YulTypedName",
														"src": "9559:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9571:6:22",
														"nodeType": "YulTypedName",
														"src": "9571:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9579:6:22",
														"nodeType": "YulTypedName",
														"src": "9579:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9587:6:22",
														"nodeType": "YulTypedName",
														"src": "9587:6:22",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9595:6:22",
														"nodeType": "YulTypedName",
														"src": "9595:6:22",
														"type": ""
													}
												],
												"src": "9476:943:22"
											},
											{
												"body": {
													"nativeSrc": "10492:241:22",
													"nodeType": "YulBlock",
													"src": "10492:241:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "10597:22:22",
																"nodeType": "YulBlock",
																"src": "10597:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10599:16:22",
																				"nodeType": "YulIdentifier",
																				"src": "10599:16:22"
																			},
																			"nativeSrc": "10599:18:22",
																			"nodeType": "YulFunctionCall",
																			"src": "10599:18:22"
																		},
																		"nativeSrc": "10599:18:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "10599:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10569:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "10569:6:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10577:18:22",
																		"nodeType": "YulLiteral",
																		"src": "10577:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10566:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "10566:2:22"
																},
																"nativeSrc": "10566:30:22",
																"nodeType": "YulFunctionCall",
																"src": "10566:30:22"
															},
															"nativeSrc": "10563:56:22",
															"nodeType": "YulIf",
															"src": "10563:56:22"
														},
														{
															"nativeSrc": "10629:37:22",
															"nodeType": "YulAssignment",
															"src": "10629:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10659:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "10659:6:22"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10637:21:22",
																	"nodeType": "YulIdentifier",
																	"src": "10637:21:22"
																},
																"nativeSrc": "10637:29:22",
																"nodeType": "YulFunctionCall",
																"src": "10637:29:22"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10629:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "10629:4:22"
																}
															]
														},
														{
															"nativeSrc": "10703:23:22",
															"nodeType": "YulAssignment",
															"src": "10703:23:22",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10715:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "10715:4:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10721:4:22",
																		"nodeType": "YulLiteral",
																		"src": "10721:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10711:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "10711:3:22"
																},
																"nativeSrc": "10711:15:22",
																"nodeType": "YulFunctionCall",
																"src": "10711:15:22"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10703:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "10703:4:22"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "10425:308:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10476:6:22",
														"nodeType": "YulTypedName",
														"src": "10476:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10487:4:22",
														"nodeType": "YulTypedName",
														"src": "10487:4:22",
														"type": ""
													}
												],
												"src": "10425:308:22"
											},
											{
												"body": {
													"nativeSrc": "10823:341:22",
													"nodeType": "YulBlock",
													"src": "10823:341:22",
													"statements": [
														{
															"nativeSrc": "10833:75:22",
															"nodeType": "YulAssignment",
															"src": "10833:75:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10900:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "10900:6:22"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "10858:41:22",
																			"nodeType": "YulIdentifier",
																			"src": "10858:41:22"
																		},
																		"nativeSrc": "10858:49:22",
																		"nodeType": "YulFunctionCall",
																		"src": "10858:49:22"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10842:15:22",
																	"nodeType": "YulIdentifier",
																	"src": "10842:15:22"
																},
																"nativeSrc": "10842:66:22",
																"nodeType": "YulFunctionCall",
																"src": "10842:66:22"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10833:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "10833:5:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10924:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "10924:5:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10931:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "10931:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10917:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "10917:6:22"
																},
																"nativeSrc": "10917:21:22",
																"nodeType": "YulFunctionCall",
																"src": "10917:21:22"
															},
															"nativeSrc": "10917:21:22",
															"nodeType": "YulExpressionStatement",
															"src": "10917:21:22"
														},
														{
															"nativeSrc": "10947:27:22",
															"nodeType": "YulVariableDeclaration",
															"src": "10947:27:22",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10962:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "10962:5:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10969:4:22",
																		"nodeType": "YulLiteral",
																		"src": "10969:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10958:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "10958:3:22"
																},
																"nativeSrc": "10958:16:22",
																"nodeType": "YulFunctionCall",
																"src": "10958:16:22"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10951:3:22",
																	"nodeType": "YulTypedName",
																	"src": "10951:3:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11012:83:22",
																"nodeType": "YulBlock",
																"src": "11012:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11014:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "11014:77:22"
																			},
																			"nativeSrc": "11014:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "11014:79:22"
																		},
																		"nativeSrc": "11014:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "11014:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10993:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "10993:3:22"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10998:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "10998:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10989:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "10989:3:22"
																		},
																		"nativeSrc": "10989:16:22",
																		"nodeType": "YulFunctionCall",
																		"src": "10989:16:22"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11007:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "11007:3:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10986:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "10986:2:22"
																},
																"nativeSrc": "10986:25:22",
																"nodeType": "YulFunctionCall",
																"src": "10986:25:22"
															},
															"nativeSrc": "10983:112:22",
															"nodeType": "YulIf",
															"src": "10983:112:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11141:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "11141:3:22"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11146:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "11146:3:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11151:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "11151:6:22"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11104:36:22",
																	"nodeType": "YulIdentifier",
																	"src": "11104:36:22"
																},
																"nativeSrc": "11104:54:22",
																"nodeType": "YulFunctionCall",
																"src": "11104:54:22"
															},
															"nativeSrc": "11104:54:22",
															"nodeType": "YulExpressionStatement",
															"src": "11104:54:22"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "10739:425:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10796:3:22",
														"nodeType": "YulTypedName",
														"src": "10796:3:22",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10801:6:22",
														"nodeType": "YulTypedName",
														"src": "10801:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10809:3:22",
														"nodeType": "YulTypedName",
														"src": "10809:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10817:5:22",
														"nodeType": "YulTypedName",
														"src": "10817:5:22",
														"type": ""
													}
												],
												"src": "10739:425:22"
											},
											{
												"body": {
													"nativeSrc": "11246:278:22",
													"nodeType": "YulBlock",
													"src": "11246:278:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "11295:83:22",
																"nodeType": "YulBlock",
																"src": "11295:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11297:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "11297:77:22"
																			},
																			"nativeSrc": "11297:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "11297:79:22"
																		},
																		"nativeSrc": "11297:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "11297:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11274:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "11274:6:22"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11282:4:22",
																						"nodeType": "YulLiteral",
																						"src": "11282:4:22",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11270:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "11270:3:22"
																				},
																				"nativeSrc": "11270:17:22",
																				"nodeType": "YulFunctionCall",
																				"src": "11270:17:22"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11289:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "11289:3:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11266:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "11266:3:22"
																		},
																		"nativeSrc": "11266:27:22",
																		"nodeType": "YulFunctionCall",
																		"src": "11266:27:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11259:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "11259:6:22"
																},
																"nativeSrc": "11259:35:22",
																"nodeType": "YulFunctionCall",
																"src": "11259:35:22"
															},
															"nativeSrc": "11256:122:22",
															"nodeType": "YulIf",
															"src": "11256:122:22"
														},
														{
															"nativeSrc": "11387:34:22",
															"nodeType": "YulVariableDeclaration",
															"src": "11387:34:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11414:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "11414:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11401:12:22",
																	"nodeType": "YulIdentifier",
																	"src": "11401:12:22"
																},
																"nativeSrc": "11401:20:22",
																"nodeType": "YulFunctionCall",
																"src": "11401:20:22"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11391:6:22",
																	"nodeType": "YulTypedName",
																	"src": "11391:6:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11430:88:22",
															"nodeType": "YulAssignment",
															"src": "11430:88:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11491:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "11491:6:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11499:4:22",
																				"nodeType": "YulLiteral",
																				"src": "11499:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11487:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "11487:3:22"
																		},
																		"nativeSrc": "11487:17:22",
																		"nodeType": "YulFunctionCall",
																		"src": "11487:17:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11506:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "11506:6:22"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11514:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "11514:3:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11439:47:22",
																	"nodeType": "YulIdentifier",
																	"src": "11439:47:22"
																},
																"nativeSrc": "11439:79:22",
																"nodeType": "YulFunctionCall",
																"src": "11439:79:22"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11430:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "11430:5:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "11184:340:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11224:6:22",
														"nodeType": "YulTypedName",
														"src": "11224:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11232:3:22",
														"nodeType": "YulTypedName",
														"src": "11232:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11240:5:22",
														"nodeType": "YulTypedName",
														"src": "11240:5:22",
														"type": ""
													}
												],
												"src": "11184:340:22"
											},
											{
												"body": {
													"nativeSrc": "11606:433:22",
													"nodeType": "YulBlock",
													"src": "11606:433:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "11652:83:22",
																"nodeType": "YulBlock",
																"src": "11652:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11654:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "11654:77:22"
																			},
																			"nativeSrc": "11654:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "11654:79:22"
																		},
																		"nativeSrc": "11654:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "11654:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11627:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "11627:7:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11636:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "11636:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11623:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "11623:3:22"
																		},
																		"nativeSrc": "11623:23:22",
																		"nodeType": "YulFunctionCall",
																		"src": "11623:23:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11648:2:22",
																		"nodeType": "YulLiteral",
																		"src": "11648:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11619:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "11619:3:22"
																},
																"nativeSrc": "11619:32:22",
																"nodeType": "YulFunctionCall",
																"src": "11619:32:22"
															},
															"nativeSrc": "11616:119:22",
															"nodeType": "YulIf",
															"src": "11616:119:22"
														},
														{
															"nativeSrc": "11745:287:22",
															"nodeType": "YulBlock",
															"src": "11745:287:22",
															"statements": [
																{
																	"nativeSrc": "11760:45:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11760:45:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11791:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "11791:9:22"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11802:1:22",
																						"nodeType": "YulLiteral",
																						"src": "11802:1:22",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11787:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "11787:3:22"
																				},
																				"nativeSrc": "11787:17:22",
																				"nodeType": "YulFunctionCall",
																				"src": "11787:17:22"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11774:12:22",
																			"nodeType": "YulIdentifier",
																			"src": "11774:12:22"
																		},
																		"nativeSrc": "11774:31:22",
																		"nodeType": "YulFunctionCall",
																		"src": "11774:31:22"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11764:6:22",
																			"nodeType": "YulTypedName",
																			"src": "11764:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11852:83:22",
																		"nodeType": "YulBlock",
																		"src": "11852:83:22",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11854:77:22",
																						"nodeType": "YulIdentifier",
																						"src": "11854:77:22"
																					},
																					"nativeSrc": "11854:79:22",
																					"nodeType": "YulFunctionCall",
																					"src": "11854:79:22"
																				},
																				"nativeSrc": "11854:79:22",
																				"nodeType": "YulExpressionStatement",
																				"src": "11854:79:22"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11824:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "11824:6:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11832:18:22",
																				"nodeType": "YulLiteral",
																				"src": "11832:18:22",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11821:2:22",
																			"nodeType": "YulIdentifier",
																			"src": "11821:2:22"
																		},
																		"nativeSrc": "11821:30:22",
																		"nodeType": "YulFunctionCall",
																		"src": "11821:30:22"
																	},
																	"nativeSrc": "11818:117:22",
																	"nodeType": "YulIf",
																	"src": "11818:117:22"
																},
																{
																	"nativeSrc": "11949:73:22",
																	"nodeType": "YulAssignment",
																	"src": "11949:73:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11994:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "11994:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12005:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "12005:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11990:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "11990:3:22"
																				},
																				"nativeSrc": "11990:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "11990:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12014:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "12014:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "11959:30:22",
																			"nodeType": "YulIdentifier",
																			"src": "11959:30:22"
																		},
																		"nativeSrc": "11959:63:22",
																		"nodeType": "YulFunctionCall",
																		"src": "11959:63:22"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11949:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "11949:6:22"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "11530:509:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11576:9:22",
														"nodeType": "YulTypedName",
														"src": "11576:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11587:7:22",
														"nodeType": "YulTypedName",
														"src": "11587:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11599:6:22",
														"nodeType": "YulTypedName",
														"src": "11599:6:22",
														"type": ""
													}
												],
												"src": "11530:509:22"
											},
											{
												"body": {
													"nativeSrc": "12128:391:22",
													"nodeType": "YulBlock",
													"src": "12128:391:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "12174:83:22",
																"nodeType": "YulBlock",
																"src": "12174:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12176:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "12176:77:22"
																			},
																			"nativeSrc": "12176:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "12176:79:22"
																		},
																		"nativeSrc": "12176:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "12176:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12149:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "12149:7:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12158:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "12158:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12145:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "12145:3:22"
																		},
																		"nativeSrc": "12145:23:22",
																		"nodeType": "YulFunctionCall",
																		"src": "12145:23:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12170:2:22",
																		"nodeType": "YulLiteral",
																		"src": "12170:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12141:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "12141:3:22"
																},
																"nativeSrc": "12141:32:22",
																"nodeType": "YulFunctionCall",
																"src": "12141:32:22"
															},
															"nativeSrc": "12138:119:22",
															"nodeType": "YulIf",
															"src": "12138:119:22"
														},
														{
															"nativeSrc": "12267:117:22",
															"nodeType": "YulBlock",
															"src": "12267:117:22",
															"statements": [
																{
																	"nativeSrc": "12282:15:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12282:15:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12296:1:22",
																		"nodeType": "YulLiteral",
																		"src": "12296:1:22",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12286:6:22",
																			"nodeType": "YulTypedName",
																			"src": "12286:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12311:63:22",
																	"nodeType": "YulAssignment",
																	"src": "12311:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12346:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "12346:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12357:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "12357:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12342:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "12342:3:22"
																				},
																				"nativeSrc": "12342:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "12342:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12366:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "12366:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12321:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "12321:20:22"
																		},
																		"nativeSrc": "12321:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "12321:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12311:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "12311:6:22"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12394:118:22",
															"nodeType": "YulBlock",
															"src": "12394:118:22",
															"statements": [
																{
																	"nativeSrc": "12409:16:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12409:16:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12423:2:22",
																		"nodeType": "YulLiteral",
																		"src": "12423:2:22",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12413:6:22",
																			"nodeType": "YulTypedName",
																			"src": "12413:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12439:63:22",
																	"nodeType": "YulAssignment",
																	"src": "12439:63:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12474:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "12474:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12485:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "12485:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12470:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "12470:3:22"
																				},
																				"nativeSrc": "12470:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "12470:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12494:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "12494:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12449:20:22",
																			"nodeType": "YulIdentifier",
																			"src": "12449:20:22"
																		},
																		"nativeSrc": "12449:53:22",
																		"nodeType": "YulFunctionCall",
																		"src": "12449:53:22"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12439:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "12439:6:22"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12045:474:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12090:9:22",
														"nodeType": "YulTypedName",
														"src": "12090:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12101:7:22",
														"nodeType": "YulTypedName",
														"src": "12101:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12113:6:22",
														"nodeType": "YulTypedName",
														"src": "12113:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12121:6:22",
														"nodeType": "YulTypedName",
														"src": "12121:6:22",
														"type": ""
													}
												],
												"src": "12045:474:22"
											},
											{
												"body": {
													"nativeSrc": "12553:152:22",
													"nodeType": "YulBlock",
													"src": "12553:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12570:1:22",
																		"nodeType": "YulLiteral",
																		"src": "12570:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12573:77:22",
																		"nodeType": "YulLiteral",
																		"src": "12573:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12563:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "12563:6:22"
																},
																"nativeSrc": "12563:88:22",
																"nodeType": "YulFunctionCall",
																"src": "12563:88:22"
															},
															"nativeSrc": "12563:88:22",
															"nodeType": "YulExpressionStatement",
															"src": "12563:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12667:1:22",
																		"nodeType": "YulLiteral",
																		"src": "12667:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12670:4:22",
																		"nodeType": "YulLiteral",
																		"src": "12670:4:22",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12660:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "12660:6:22"
																},
																"nativeSrc": "12660:15:22",
																"nodeType": "YulFunctionCall",
																"src": "12660:15:22"
															},
															"nativeSrc": "12660:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "12660:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12691:1:22",
																		"nodeType": "YulLiteral",
																		"src": "12691:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12694:4:22",
																		"nodeType": "YulLiteral",
																		"src": "12694:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12684:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "12684:6:22"
																},
																"nativeSrc": "12684:15:22",
																"nodeType": "YulFunctionCall",
																"src": "12684:15:22"
															},
															"nativeSrc": "12684:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "12684:15:22"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12525:180:22",
												"nodeType": "YulFunctionDefinition",
												"src": "12525:180:22"
											},
											{
												"body": {
													"nativeSrc": "12762:269:22",
													"nodeType": "YulBlock",
													"src": "12762:269:22",
													"statements": [
														{
															"nativeSrc": "12772:22:22",
															"nodeType": "YulAssignment",
															"src": "12772:22:22",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12786:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "12786:4:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12792:1:22",
																		"nodeType": "YulLiteral",
																		"src": "12792:1:22",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12782:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "12782:3:22"
																},
																"nativeSrc": "12782:12:22",
																"nodeType": "YulFunctionCall",
																"src": "12782:12:22"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12772:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "12772:6:22"
																}
															]
														},
														{
															"nativeSrc": "12803:38:22",
															"nodeType": "YulVariableDeclaration",
															"src": "12803:38:22",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12833:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "12833:4:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12839:1:22",
																		"nodeType": "YulLiteral",
																		"src": "12839:1:22",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12829:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "12829:3:22"
																},
																"nativeSrc": "12829:12:22",
																"nodeType": "YulFunctionCall",
																"src": "12829:12:22"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12807:18:22",
																	"nodeType": "YulTypedName",
																	"src": "12807:18:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12880:51:22",
																"nodeType": "YulBlock",
																"src": "12880:51:22",
																"statements": [
																	{
																		"nativeSrc": "12894:27:22",
																		"nodeType": "YulAssignment",
																		"src": "12894:27:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12908:6:22",
																					"nodeType": "YulIdentifier",
																					"src": "12908:6:22"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12916:4:22",
																					"nodeType": "YulLiteral",
																					"src": "12916:4:22",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12904:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "12904:3:22"
																			},
																			"nativeSrc": "12904:17:22",
																			"nodeType": "YulFunctionCall",
																			"src": "12904:17:22"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12894:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "12894:6:22"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12860:18:22",
																		"nodeType": "YulIdentifier",
																		"src": "12860:18:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12853:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "12853:6:22"
																},
																"nativeSrc": "12853:26:22",
																"nodeType": "YulFunctionCall",
																"src": "12853:26:22"
															},
															"nativeSrc": "12850:81:22",
															"nodeType": "YulIf",
															"src": "12850:81:22"
														},
														{
															"body": {
																"nativeSrc": "12983:42:22",
																"nodeType": "YulBlock",
																"src": "12983:42:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12997:16:22",
																				"nodeType": "YulIdentifier",
																				"src": "12997:16:22"
																			},
																			"nativeSrc": "12997:18:22",
																			"nodeType": "YulFunctionCall",
																			"src": "12997:18:22"
																		},
																		"nativeSrc": "12997:18:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "12997:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12947:18:22",
																		"nodeType": "YulIdentifier",
																		"src": "12947:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12970:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "12970:6:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12978:2:22",
																				"nodeType": "YulLiteral",
																				"src": "12978:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12967:2:22",
																			"nodeType": "YulIdentifier",
																			"src": "12967:2:22"
																		},
																		"nativeSrc": "12967:14:22",
																		"nodeType": "YulFunctionCall",
																		"src": "12967:14:22"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12944:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "12944:2:22"
																},
																"nativeSrc": "12944:38:22",
																"nodeType": "YulFunctionCall",
																"src": "12944:38:22"
															},
															"nativeSrc": "12941:84:22",
															"nodeType": "YulIf",
															"src": "12941:84:22"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12711:320:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12746:4:22",
														"nodeType": "YulTypedName",
														"src": "12746:4:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12755:6:22",
														"nodeType": "YulTypedName",
														"src": "12755:6:22",
														"type": ""
													}
												],
												"src": "12711:320:22"
											},
											{
												"body": {
													"nativeSrc": "13191:288:22",
													"nodeType": "YulBlock",
													"src": "13191:288:22",
													"statements": [
														{
															"nativeSrc": "13201:26:22",
															"nodeType": "YulAssignment",
															"src": "13201:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13213:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "13213:9:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13224:2:22",
																		"nodeType": "YulLiteral",
																		"src": "13224:2:22",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13209:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "13209:3:22"
																},
																"nativeSrc": "13209:18:22",
																"nodeType": "YulFunctionCall",
																"src": "13209:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13201:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "13201:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13281:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "13281:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13294:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "13294:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13305:1:22",
																				"nodeType": "YulLiteral",
																				"src": "13305:1:22",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13290:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "13290:3:22"
																		},
																		"nativeSrc": "13290:17:22",
																		"nodeType": "YulFunctionCall",
																		"src": "13290:17:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13237:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "13237:43:22"
																},
																"nativeSrc": "13237:71:22",
																"nodeType": "YulFunctionCall",
																"src": "13237:71:22"
															},
															"nativeSrc": "13237:71:22",
															"nodeType": "YulExpressionStatement",
															"src": "13237:71:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13362:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "13362:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13375:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "13375:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13386:2:22",
																				"nodeType": "YulLiteral",
																				"src": "13386:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13371:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "13371:3:22"
																		},
																		"nativeSrc": "13371:18:22",
																		"nodeType": "YulFunctionCall",
																		"src": "13371:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13318:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "13318:43:22"
																},
																"nativeSrc": "13318:72:22",
																"nodeType": "YulFunctionCall",
																"src": "13318:72:22"
															},
															"nativeSrc": "13318:72:22",
															"nodeType": "YulExpressionStatement",
															"src": "13318:72:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13444:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "13444:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13457:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "13457:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13468:2:22",
																				"nodeType": "YulLiteral",
																				"src": "13468:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13453:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "13453:3:22"
																		},
																		"nativeSrc": "13453:18:22",
																		"nodeType": "YulFunctionCall",
																		"src": "13453:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13400:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "13400:43:22"
																},
																"nativeSrc": "13400:72:22",
																"nodeType": "YulFunctionCall",
																"src": "13400:72:22"
															},
															"nativeSrc": "13400:72:22",
															"nodeType": "YulExpressionStatement",
															"src": "13400:72:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13037:442:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13147:9:22",
														"nodeType": "YulTypedName",
														"src": "13147:9:22",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13159:6:22",
														"nodeType": "YulTypedName",
														"src": "13159:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13167:6:22",
														"nodeType": "YulTypedName",
														"src": "13167:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13175:6:22",
														"nodeType": "YulTypedName",
														"src": "13175:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13186:4:22",
														"nodeType": "YulTypedName",
														"src": "13186:4:22",
														"type": ""
													}
												],
												"src": "13037:442:22"
											},
											{
												"body": {
													"nativeSrc": "13611:206:22",
													"nodeType": "YulBlock",
													"src": "13611:206:22",
													"statements": [
														{
															"nativeSrc": "13621:26:22",
															"nodeType": "YulAssignment",
															"src": "13621:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13633:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "13633:9:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13644:2:22",
																		"nodeType": "YulLiteral",
																		"src": "13644:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13629:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "13629:3:22"
																},
																"nativeSrc": "13629:18:22",
																"nodeType": "YulFunctionCall",
																"src": "13629:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13621:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "13621:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13701:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "13701:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13714:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "13714:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13725:1:22",
																				"nodeType": "YulLiteral",
																				"src": "13725:1:22",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13710:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "13710:3:22"
																		},
																		"nativeSrc": "13710:17:22",
																		"nodeType": "YulFunctionCall",
																		"src": "13710:17:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13657:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "13657:43:22"
																},
																"nativeSrc": "13657:71:22",
																"nodeType": "YulFunctionCall",
																"src": "13657:71:22"
															},
															"nativeSrc": "13657:71:22",
															"nodeType": "YulExpressionStatement",
															"src": "13657:71:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13782:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "13782:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13795:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "13795:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13806:2:22",
																				"nodeType": "YulLiteral",
																				"src": "13806:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13791:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "13791:3:22"
																		},
																		"nativeSrc": "13791:18:22",
																		"nodeType": "YulFunctionCall",
																		"src": "13791:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13738:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "13738:43:22"
																},
																"nativeSrc": "13738:72:22",
																"nodeType": "YulFunctionCall",
																"src": "13738:72:22"
															},
															"nativeSrc": "13738:72:22",
															"nodeType": "YulExpressionStatement",
															"src": "13738:72:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13485:332:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13575:9:22",
														"nodeType": "YulTypedName",
														"src": "13575:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13587:6:22",
														"nodeType": "YulTypedName",
														"src": "13587:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13595:6:22",
														"nodeType": "YulTypedName",
														"src": "13595:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13606:4:22",
														"nodeType": "YulTypedName",
														"src": "13606:4:22",
														"type": ""
													}
												],
												"src": "13485:332:22"
											},
											{
												"body": {
													"nativeSrc": "13851:152:22",
													"nodeType": "YulBlock",
													"src": "13851:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13868:1:22",
																		"nodeType": "YulLiteral",
																		"src": "13868:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13871:77:22",
																		"nodeType": "YulLiteral",
																		"src": "13871:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13861:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "13861:6:22"
																},
																"nativeSrc": "13861:88:22",
																"nodeType": "YulFunctionCall",
																"src": "13861:88:22"
															},
															"nativeSrc": "13861:88:22",
															"nodeType": "YulExpressionStatement",
															"src": "13861:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13965:1:22",
																		"nodeType": "YulLiteral",
																		"src": "13965:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13968:4:22",
																		"nodeType": "YulLiteral",
																		"src": "13968:4:22",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13958:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "13958:6:22"
																},
																"nativeSrc": "13958:15:22",
																"nodeType": "YulFunctionCall",
																"src": "13958:15:22"
															},
															"nativeSrc": "13958:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "13958:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13989:1:22",
																		"nodeType": "YulLiteral",
																		"src": "13989:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13992:4:22",
																		"nodeType": "YulLiteral",
																		"src": "13992:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13982:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "13982:6:22"
																},
																"nativeSrc": "13982:15:22",
																"nodeType": "YulFunctionCall",
																"src": "13982:15:22"
															},
															"nativeSrc": "13982:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "13982:15:22"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "13823:180:22",
												"nodeType": "YulFunctionDefinition",
												"src": "13823:180:22"
											},
											{
												"body": {
													"nativeSrc": "14063:87:22",
													"nodeType": "YulBlock",
													"src": "14063:87:22",
													"statements": [
														{
															"nativeSrc": "14073:11:22",
															"nodeType": "YulAssignment",
															"src": "14073:11:22",
															"value": {
																"name": "ptr",
																"nativeSrc": "14081:3:22",
																"nodeType": "YulIdentifier",
																"src": "14081:3:22"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14073:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "14073:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14101:1:22",
																		"nodeType": "YulLiteral",
																		"src": "14101:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "14104:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "14104:3:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14094:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "14094:6:22"
																},
																"nativeSrc": "14094:14:22",
																"nodeType": "YulFunctionCall",
																"src": "14094:14:22"
															},
															"nativeSrc": "14094:14:22",
															"nodeType": "YulExpressionStatement",
															"src": "14094:14:22"
														},
														{
															"nativeSrc": "14117:26:22",
															"nodeType": "YulAssignment",
															"src": "14117:26:22",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14135:1:22",
																		"nodeType": "YulLiteral",
																		"src": "14135:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14138:4:22",
																		"nodeType": "YulLiteral",
																		"src": "14138:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "14125:9:22",
																	"nodeType": "YulIdentifier",
																	"src": "14125:9:22"
																},
																"nativeSrc": "14125:18:22",
																"nodeType": "YulFunctionCall",
																"src": "14125:18:22"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14117:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "14117:4:22"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "14009:141:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14050:3:22",
														"nodeType": "YulTypedName",
														"src": "14050:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14058:4:22",
														"nodeType": "YulTypedName",
														"src": "14058:4:22",
														"type": ""
													}
												],
												"src": "14009:141:22"
											},
											{
												"body": {
													"nativeSrc": "14200:49:22",
													"nodeType": "YulBlock",
													"src": "14200:49:22",
													"statements": [
														{
															"nativeSrc": "14210:33:22",
															"nodeType": "YulAssignment",
															"src": "14210:33:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14228:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "14228:5:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14235:2:22",
																				"nodeType": "YulLiteral",
																				"src": "14235:2:22",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14224:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "14224:3:22"
																		},
																		"nativeSrc": "14224:14:22",
																		"nodeType": "YulFunctionCall",
																		"src": "14224:14:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14240:2:22",
																		"nodeType": "YulLiteral",
																		"src": "14240:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14220:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "14220:3:22"
																},
																"nativeSrc": "14220:23:22",
																"nodeType": "YulFunctionCall",
																"src": "14220:23:22"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14210:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "14210:6:22"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "14156:93:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14183:5:22",
														"nodeType": "YulTypedName",
														"src": "14183:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14193:6:22",
														"nodeType": "YulTypedName",
														"src": "14193:6:22",
														"type": ""
													}
												],
												"src": "14156:93:22"
											},
											{
												"body": {
													"nativeSrc": "14308:54:22",
													"nodeType": "YulBlock",
													"src": "14308:54:22",
													"statements": [
														{
															"nativeSrc": "14318:37:22",
															"nodeType": "YulAssignment",
															"src": "14318:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14343:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "14343:4:22"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14349:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "14349:5:22"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14339:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "14339:3:22"
																},
																"nativeSrc": "14339:16:22",
																"nodeType": "YulFunctionCall",
																"src": "14339:16:22"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14318:8:22",
																	"nodeType": "YulIdentifier",
																	"src": "14318:8:22"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "14255:107:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14283:4:22",
														"nodeType": "YulTypedName",
														"src": "14283:4:22",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14289:5:22",
														"nodeType": "YulTypedName",
														"src": "14289:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14299:8:22",
														"nodeType": "YulTypedName",
														"src": "14299:8:22",
														"type": ""
													}
												],
												"src": "14255:107:22"
											},
											{
												"body": {
													"nativeSrc": "14444:317:22",
													"nodeType": "YulBlock",
													"src": "14444:317:22",
													"statements": [
														{
															"nativeSrc": "14454:35:22",
															"nodeType": "YulVariableDeclaration",
															"src": "14454:35:22",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14475:10:22",
																		"nodeType": "YulIdentifier",
																		"src": "14475:10:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14487:1:22",
																		"nodeType": "YulLiteral",
																		"src": "14487:1:22",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14471:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "14471:3:22"
																},
																"nativeSrc": "14471:18:22",
																"nodeType": "YulFunctionCall",
																"src": "14471:18:22"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14458:9:22",
																	"nodeType": "YulTypedName",
																	"src": "14458:9:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14498:109:22",
															"nodeType": "YulVariableDeclaration",
															"src": "14498:109:22",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14529:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "14529:9:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14540:66:22",
																		"nodeType": "YulLiteral",
																		"src": "14540:66:22",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14510:18:22",
																	"nodeType": "YulIdentifier",
																	"src": "14510:18:22"
																},
																"nativeSrc": "14510:97:22",
																"nodeType": "YulFunctionCall",
																"src": "14510:97:22"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14502:4:22",
																	"nodeType": "YulTypedName",
																	"src": "14502:4:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14616:51:22",
															"nodeType": "YulAssignment",
															"src": "14616:51:22",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14647:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "14647:9:22"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14658:8:22",
																		"nodeType": "YulIdentifier",
																		"src": "14658:8:22"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14628:18:22",
																	"nodeType": "YulIdentifier",
																	"src": "14628:18:22"
																},
																"nativeSrc": "14628:39:22",
																"nodeType": "YulFunctionCall",
																"src": "14628:39:22"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14616:8:22",
																	"nodeType": "YulIdentifier",
																	"src": "14616:8:22"
																}
															]
														},
														{
															"nativeSrc": "14676:30:22",
															"nodeType": "YulAssignment",
															"src": "14676:30:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14689:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "14689:5:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14700:4:22",
																				"nodeType": "YulIdentifier",
																				"src": "14700:4:22"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14696:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "14696:3:22"
																		},
																		"nativeSrc": "14696:9:22",
																		"nodeType": "YulFunctionCall",
																		"src": "14696:9:22"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14685:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "14685:3:22"
																},
																"nativeSrc": "14685:21:22",
																"nodeType": "YulFunctionCall",
																"src": "14685:21:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14676:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "14676:5:22"
																}
															]
														},
														{
															"nativeSrc": "14715:40:22",
															"nodeType": "YulAssignment",
															"src": "14715:40:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14728:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "14728:5:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "14739:8:22",
																				"nodeType": "YulIdentifier",
																				"src": "14739:8:22"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "14749:4:22",
																				"nodeType": "YulIdentifier",
																				"src": "14749:4:22"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14735:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "14735:3:22"
																		},
																		"nativeSrc": "14735:19:22",
																		"nodeType": "YulFunctionCall",
																		"src": "14735:19:22"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14725:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "14725:2:22"
																},
																"nativeSrc": "14725:30:22",
																"nodeType": "YulFunctionCall",
																"src": "14725:30:22"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14715:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "14715:6:22"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14368:393:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14405:5:22",
														"nodeType": "YulTypedName",
														"src": "14405:5:22",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14412:10:22",
														"nodeType": "YulTypedName",
														"src": "14412:10:22",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14424:8:22",
														"nodeType": "YulTypedName",
														"src": "14424:8:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14437:6:22",
														"nodeType": "YulTypedName",
														"src": "14437:6:22",
														"type": ""
													}
												],
												"src": "14368:393:22"
											},
											{
												"body": {
													"nativeSrc": "14799:28:22",
													"nodeType": "YulBlock",
													"src": "14799:28:22",
													"statements": [
														{
															"nativeSrc": "14809:12:22",
															"nodeType": "YulAssignment",
															"src": "14809:12:22",
															"value": {
																"name": "value",
																"nativeSrc": "14816:5:22",
																"nodeType": "YulIdentifier",
																"src": "14816:5:22"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14809:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "14809:3:22"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14767:60:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14785:5:22",
														"nodeType": "YulTypedName",
														"src": "14785:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14795:3:22",
														"nodeType": "YulTypedName",
														"src": "14795:3:22",
														"type": ""
													}
												],
												"src": "14767:60:22"
											},
											{
												"body": {
													"nativeSrc": "14893:82:22",
													"nodeType": "YulBlock",
													"src": "14893:82:22",
													"statements": [
														{
															"nativeSrc": "14903:66:22",
															"nodeType": "YulAssignment",
															"src": "14903:66:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14961:5:22",
																						"nodeType": "YulIdentifier",
																						"src": "14961:5:22"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14943:17:22",
																					"nodeType": "YulIdentifier",
																					"src": "14943:17:22"
																				},
																				"nativeSrc": "14943:24:22",
																				"nodeType": "YulFunctionCall",
																				"src": "14943:24:22"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14934:8:22",
																			"nodeType": "YulIdentifier",
																			"src": "14934:8:22"
																		},
																		"nativeSrc": "14934:34:22",
																		"nodeType": "YulFunctionCall",
																		"src": "14934:34:22"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14916:17:22",
																	"nodeType": "YulIdentifier",
																	"src": "14916:17:22"
																},
																"nativeSrc": "14916:53:22",
																"nodeType": "YulFunctionCall",
																"src": "14916:53:22"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14903:9:22",
																	"nodeType": "YulIdentifier",
																	"src": "14903:9:22"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "14833:142:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14873:5:22",
														"nodeType": "YulTypedName",
														"src": "14873:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14883:9:22",
														"nodeType": "YulTypedName",
														"src": "14883:9:22",
														"type": ""
													}
												],
												"src": "14833:142:22"
											},
											{
												"body": {
													"nativeSrc": "15028:28:22",
													"nodeType": "YulBlock",
													"src": "15028:28:22",
													"statements": [
														{
															"nativeSrc": "15038:12:22",
															"nodeType": "YulAssignment",
															"src": "15038:12:22",
															"value": {
																"name": "value",
																"nativeSrc": "15045:5:22",
																"nodeType": "YulIdentifier",
																"src": "15045:5:22"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15038:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "15038:3:22"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "14981:75:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15014:5:22",
														"nodeType": "YulTypedName",
														"src": "15014:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15024:3:22",
														"nodeType": "YulTypedName",
														"src": "15024:3:22",
														"type": ""
													}
												],
												"src": "14981:75:22"
											},
											{
												"body": {
													"nativeSrc": "15138:193:22",
													"nodeType": "YulBlock",
													"src": "15138:193:22",
													"statements": [
														{
															"nativeSrc": "15148:63:22",
															"nodeType": "YulVariableDeclaration",
															"src": "15148:63:22",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "15203:7:22",
																		"nodeType": "YulIdentifier",
																		"src": "15203:7:22"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "15172:30:22",
																	"nodeType": "YulIdentifier",
																	"src": "15172:30:22"
																},
																"nativeSrc": "15172:39:22",
																"nodeType": "YulFunctionCall",
																"src": "15172:39:22"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "15152:16:22",
																	"nodeType": "YulTypedName",
																	"src": "15152:16:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15227:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "15227:4:22"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15267:4:22",
																						"nodeType": "YulIdentifier",
																						"src": "15267:4:22"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15261:5:22",
																					"nodeType": "YulIdentifier",
																					"src": "15261:5:22"
																				},
																				"nativeSrc": "15261:11:22",
																				"nodeType": "YulFunctionCall",
																				"src": "15261:11:22"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15274:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "15274:6:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15306:16:22",
																						"nodeType": "YulIdentifier",
																						"src": "15306:16:22"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15282:23:22",
																					"nodeType": "YulIdentifier",
																					"src": "15282:23:22"
																				},
																				"nativeSrc": "15282:41:22",
																				"nodeType": "YulFunctionCall",
																				"src": "15282:41:22"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "15233:27:22",
																			"nodeType": "YulIdentifier",
																			"src": "15233:27:22"
																		},
																		"nativeSrc": "15233:91:22",
																		"nodeType": "YulFunctionCall",
																		"src": "15233:91:22"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15220:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "15220:6:22"
																},
																"nativeSrc": "15220:105:22",
																"nodeType": "YulFunctionCall",
																"src": "15220:105:22"
															},
															"nativeSrc": "15220:105:22",
															"nodeType": "YulExpressionStatement",
															"src": "15220:105:22"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "15062:269:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15115:4:22",
														"nodeType": "YulTypedName",
														"src": "15115:4:22",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15121:6:22",
														"nodeType": "YulTypedName",
														"src": "15121:6:22",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "15129:7:22",
														"nodeType": "YulTypedName",
														"src": "15129:7:22",
														"type": ""
													}
												],
												"src": "15062:269:22"
											},
											{
												"body": {
													"nativeSrc": "15386:24:22",
													"nodeType": "YulBlock",
													"src": "15386:24:22",
													"statements": [
														{
															"nativeSrc": "15396:8:22",
															"nodeType": "YulAssignment",
															"src": "15396:8:22",
															"value": {
																"kind": "number",
																"nativeSrc": "15403:1:22",
																"nodeType": "YulLiteral",
																"src": "15403:1:22",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15396:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "15396:3:22"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "15337:73:22",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15382:3:22",
														"nodeType": "YulTypedName",
														"src": "15382:3:22",
														"type": ""
													}
												],
												"src": "15337:73:22"
											},
											{
												"body": {
													"nativeSrc": "15469:136:22",
													"nodeType": "YulBlock",
													"src": "15469:136:22",
													"statements": [
														{
															"nativeSrc": "15479:46:22",
															"nodeType": "YulVariableDeclaration",
															"src": "15479:46:22",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15493:30:22",
																	"nodeType": "YulIdentifier",
																	"src": "15493:30:22"
																},
																"nativeSrc": "15493:32:22",
																"nodeType": "YulFunctionCall",
																"src": "15493:32:22"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15483:6:22",
																	"nodeType": "YulTypedName",
																	"src": "15483:6:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15578:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "15578:4:22"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15584:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "15584:6:22"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15592:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "15592:6:22"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15534:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "15534:43:22"
																},
																"nativeSrc": "15534:65:22",
																"nodeType": "YulFunctionCall",
																"src": "15534:65:22"
															},
															"nativeSrc": "15534:65:22",
															"nodeType": "YulExpressionStatement",
															"src": "15534:65:22"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15416:189:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15455:4:22",
														"nodeType": "YulTypedName",
														"src": "15455:4:22",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15461:6:22",
														"nodeType": "YulTypedName",
														"src": "15461:6:22",
														"type": ""
													}
												],
												"src": "15416:189:22"
											},
											{
												"body": {
													"nativeSrc": "15661:136:22",
													"nodeType": "YulBlock",
													"src": "15661:136:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "15728:63:22",
																"nodeType": "YulBlock",
																"src": "15728:63:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15772:5:22",
																					"nodeType": "YulIdentifier",
																					"src": "15772:5:22"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15779:1:22",
																					"nodeType": "YulLiteral",
																					"src": "15779:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "15742:29:22",
																				"nodeType": "YulIdentifier",
																				"src": "15742:29:22"
																			},
																			"nativeSrc": "15742:39:22",
																			"nodeType": "YulFunctionCall",
																			"src": "15742:39:22"
																		},
																		"nativeSrc": "15742:39:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "15742:39:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15681:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "15681:5:22"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15688:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "15688:3:22"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15678:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "15678:2:22"
																},
																"nativeSrc": "15678:14:22",
																"nodeType": "YulFunctionCall",
																"src": "15678:14:22"
															},
															"nativeSrc": "15671:120:22",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15693:26:22",
																"nodeType": "YulBlock",
																"src": "15693:26:22",
																"statements": [
																	{
																		"nativeSrc": "15695:22:22",
																		"nodeType": "YulAssignment",
																		"src": "15695:22:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15708:5:22",
																					"nodeType": "YulIdentifier",
																					"src": "15708:5:22"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15715:1:22",
																					"nodeType": "YulLiteral",
																					"src": "15715:1:22",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15704:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "15704:3:22"
																			},
																			"nativeSrc": "15704:13:22",
																			"nodeType": "YulFunctionCall",
																			"src": "15704:13:22"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15695:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "15695:5:22"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15675:2:22",
																"nodeType": "YulBlock",
																"src": "15675:2:22",
																"statements": []
															},
															"src": "15671:120:22"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15611:186:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15649:5:22",
														"nodeType": "YulTypedName",
														"src": "15649:5:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15656:3:22",
														"nodeType": "YulTypedName",
														"src": "15656:3:22",
														"type": ""
													}
												],
												"src": "15611:186:22"
											},
											{
												"body": {
													"nativeSrc": "15882:464:22",
													"nodeType": "YulBlock",
													"src": "15882:464:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "15908:431:22",
																"nodeType": "YulBlock",
																"src": "15908:431:22",
																"statements": [
																	{
																		"nativeSrc": "15922:54:22",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15922:54:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "15970:5:22",
																					"nodeType": "YulIdentifier",
																					"src": "15970:5:22"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "15938:31:22",
																				"nodeType": "YulIdentifier",
																				"src": "15938:31:22"
																			},
																			"nativeSrc": "15938:38:22",
																			"nodeType": "YulFunctionCall",
																			"src": "15938:38:22"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "15926:8:22",
																				"nodeType": "YulTypedName",
																				"src": "15926:8:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15989:63:22",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15989:63:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "16012:8:22",
																					"nodeType": "YulIdentifier",
																					"src": "16012:8:22"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "16040:10:22",
																							"nodeType": "YulIdentifier",
																							"src": "16040:10:22"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "16022:17:22",
																						"nodeType": "YulIdentifier",
																						"src": "16022:17:22"
																					},
																					"nativeSrc": "16022:29:22",
																					"nodeType": "YulFunctionCall",
																					"src": "16022:29:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16008:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "16008:3:22"
																			},
																			"nativeSrc": "16008:44:22",
																			"nodeType": "YulFunctionCall",
																			"src": "16008:44:22"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15993:11:22",
																				"nodeType": "YulTypedName",
																				"src": "15993:11:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16209:27:22",
																			"nodeType": "YulBlock",
																			"src": "16209:27:22",
																			"statements": [
																				{
																					"nativeSrc": "16211:23:22",
																					"nodeType": "YulAssignment",
																					"src": "16211:23:22",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "16226:8:22",
																						"nodeType": "YulIdentifier",
																						"src": "16226:8:22"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "16211:11:22",
																							"nodeType": "YulIdentifier",
																							"src": "16211:11:22"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "16193:10:22",
																					"nodeType": "YulIdentifier",
																					"src": "16193:10:22"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16205:2:22",
																					"nodeType": "YulLiteral",
																					"src": "16205:2:22",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "16190:2:22",
																				"nodeType": "YulIdentifier",
																				"src": "16190:2:22"
																			},
																			"nativeSrc": "16190:18:22",
																			"nodeType": "YulFunctionCall",
																			"src": "16190:18:22"
																		},
																		"nativeSrc": "16187:49:22",
																		"nodeType": "YulIf",
																		"src": "16187:49:22"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16278:11:22",
																					"nodeType": "YulIdentifier",
																					"src": "16278:11:22"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16295:8:22",
																							"nodeType": "YulIdentifier",
																							"src": "16295:8:22"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "16323:3:22",
																									"nodeType": "YulIdentifier",
																									"src": "16323:3:22"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16305:17:22",
																								"nodeType": "YulIdentifier",
																								"src": "16305:17:22"
																							},
																							"nativeSrc": "16305:22:22",
																							"nodeType": "YulFunctionCall",
																							"src": "16305:22:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16291:3:22",
																						"nodeType": "YulIdentifier",
																						"src": "16291:3:22"
																					},
																					"nativeSrc": "16291:37:22",
																					"nodeType": "YulFunctionCall",
																					"src": "16291:37:22"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "16249:28:22",
																				"nodeType": "YulIdentifier",
																				"src": "16249:28:22"
																			},
																			"nativeSrc": "16249:80:22",
																			"nodeType": "YulFunctionCall",
																			"src": "16249:80:22"
																		},
																		"nativeSrc": "16249:80:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "16249:80:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15899:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "15899:3:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15904:2:22",
																		"nodeType": "YulLiteral",
																		"src": "15904:2:22",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15896:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "15896:2:22"
																},
																"nativeSrc": "15896:11:22",
																"nodeType": "YulFunctionCall",
																"src": "15896:11:22"
															},
															"nativeSrc": "15893:446:22",
															"nodeType": "YulIf",
															"src": "15893:446:22"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "15803:543:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15858:5:22",
														"nodeType": "YulTypedName",
														"src": "15858:5:22",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15865:3:22",
														"nodeType": "YulTypedName",
														"src": "15865:3:22",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15870:10:22",
														"nodeType": "YulTypedName",
														"src": "15870:10:22",
														"type": ""
													}
												],
												"src": "15803:543:22"
											},
											{
												"body": {
													"nativeSrc": "16415:54:22",
													"nodeType": "YulBlock",
													"src": "16415:54:22",
													"statements": [
														{
															"nativeSrc": "16425:37:22",
															"nodeType": "YulAssignment",
															"src": "16425:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16450:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "16450:4:22"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16456:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "16456:5:22"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16446:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "16446:3:22"
																},
																"nativeSrc": "16446:16:22",
																"nodeType": "YulFunctionCall",
																"src": "16446:16:22"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16425:8:22",
																	"nodeType": "YulIdentifier",
																	"src": "16425:8:22"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "16352:117:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16390:4:22",
														"nodeType": "YulTypedName",
														"src": "16390:4:22",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16396:5:22",
														"nodeType": "YulTypedName",
														"src": "16396:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16406:8:22",
														"nodeType": "YulTypedName",
														"src": "16406:8:22",
														"type": ""
													}
												],
												"src": "16352:117:22"
											},
											{
												"body": {
													"nativeSrc": "16526:118:22",
													"nodeType": "YulBlock",
													"src": "16526:118:22",
													"statements": [
														{
															"nativeSrc": "16536:68:22",
															"nodeType": "YulVariableDeclaration",
															"src": "16536:68:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16585:1:22",
																						"nodeType": "YulLiteral",
																						"src": "16585:1:22",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16588:5:22",
																						"nodeType": "YulIdentifier",
																						"src": "16588:5:22"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16581:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "16581:3:22"
																				},
																				"nativeSrc": "16581:13:22",
																				"nodeType": "YulFunctionCall",
																				"src": "16581:13:22"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16600:1:22",
																						"nodeType": "YulLiteral",
																						"src": "16600:1:22",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16596:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "16596:3:22"
																				},
																				"nativeSrc": "16596:6:22",
																				"nodeType": "YulFunctionCall",
																				"src": "16596:6:22"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16552:28:22",
																			"nodeType": "YulIdentifier",
																			"src": "16552:28:22"
																		},
																		"nativeSrc": "16552:51:22",
																		"nodeType": "YulFunctionCall",
																		"src": "16552:51:22"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16548:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "16548:3:22"
																},
																"nativeSrc": "16548:56:22",
																"nodeType": "YulFunctionCall",
																"src": "16548:56:22"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16540:4:22",
																	"nodeType": "YulTypedName",
																	"src": "16540:4:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16613:25:22",
															"nodeType": "YulAssignment",
															"src": "16613:25:22",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16627:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "16627:4:22"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16633:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "16633:4:22"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16623:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "16623:3:22"
																},
																"nativeSrc": "16623:15:22",
																"nodeType": "YulFunctionCall",
																"src": "16623:15:22"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16613:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "16613:6:22"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16475:169:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16503:4:22",
														"nodeType": "YulTypedName",
														"src": "16503:4:22",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16509:5:22",
														"nodeType": "YulTypedName",
														"src": "16509:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16519:6:22",
														"nodeType": "YulTypedName",
														"src": "16519:6:22",
														"type": ""
													}
												],
												"src": "16475:169:22"
											},
											{
												"body": {
													"nativeSrc": "16730:214:22",
													"nodeType": "YulBlock",
													"src": "16730:214:22",
													"statements": [
														{
															"nativeSrc": "16863:37:22",
															"nodeType": "YulAssignment",
															"src": "16863:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16890:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "16890:4:22"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "16896:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "16896:3:22"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "16871:18:22",
																	"nodeType": "YulIdentifier",
																	"src": "16871:18:22"
																},
																"nativeSrc": "16871:29:22",
																"nodeType": "YulFunctionCall",
																"src": "16871:29:22"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16863:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "16863:4:22"
																}
															]
														},
														{
															"nativeSrc": "16909:29:22",
															"nodeType": "YulAssignment",
															"src": "16909:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16920:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "16920:4:22"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16930:1:22",
																				"nodeType": "YulLiteral",
																				"src": "16930:1:22",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "16933:3:22",
																				"nodeType": "YulIdentifier",
																				"src": "16933:3:22"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "16926:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "16926:3:22"
																		},
																		"nativeSrc": "16926:11:22",
																		"nodeType": "YulFunctionCall",
																		"src": "16926:11:22"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16917:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "16917:2:22"
																},
																"nativeSrc": "16917:21:22",
																"nodeType": "YulFunctionCall",
																"src": "16917:21:22"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "16909:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "16909:4:22"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16649:295:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16711:4:22",
														"nodeType": "YulTypedName",
														"src": "16711:4:22",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16717:3:22",
														"nodeType": "YulTypedName",
														"src": "16717:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16725:4:22",
														"nodeType": "YulTypedName",
														"src": "16725:4:22",
														"type": ""
													}
												],
												"src": "16649:295:22"
											},
											{
												"body": {
													"nativeSrc": "17041:1303:22",
													"nodeType": "YulBlock",
													"src": "17041:1303:22",
													"statements": [
														{
															"nativeSrc": "17052:51:22",
															"nodeType": "YulVariableDeclaration",
															"src": "17052:51:22",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "17099:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "17099:3:22"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17066:32:22",
																	"nodeType": "YulIdentifier",
																	"src": "17066:32:22"
																},
																"nativeSrc": "17066:37:22",
																"nodeType": "YulFunctionCall",
																"src": "17066:37:22"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "17056:6:22",
																	"nodeType": "YulTypedName",
																	"src": "17056:6:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17188:22:22",
																"nodeType": "YulBlock",
																"src": "17188:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17190:16:22",
																				"nodeType": "YulIdentifier",
																				"src": "17190:16:22"
																			},
																			"nativeSrc": "17190:18:22",
																			"nodeType": "YulFunctionCall",
																			"src": "17190:18:22"
																		},
																		"nativeSrc": "17190:18:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "17190:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17160:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "17160:6:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17168:18:22",
																		"nodeType": "YulLiteral",
																		"src": "17168:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17157:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "17157:2:22"
																},
																"nativeSrc": "17157:30:22",
																"nodeType": "YulFunctionCall",
																"src": "17157:30:22"
															},
															"nativeSrc": "17154:56:22",
															"nodeType": "YulIf",
															"src": "17154:56:22"
														},
														{
															"nativeSrc": "17220:52:22",
															"nodeType": "YulVariableDeclaration",
															"src": "17220:52:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17266:4:22",
																				"nodeType": "YulIdentifier",
																				"src": "17266:4:22"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17260:5:22",
																			"nodeType": "YulIdentifier",
																			"src": "17260:5:22"
																		},
																		"nativeSrc": "17260:11:22",
																		"nodeType": "YulFunctionCall",
																		"src": "17260:11:22"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "17234:25:22",
																	"nodeType": "YulIdentifier",
																	"src": "17234:25:22"
																},
																"nativeSrc": "17234:38:22",
																"nodeType": "YulFunctionCall",
																"src": "17234:38:22"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "17224:6:22",
																	"nodeType": "YulTypedName",
																	"src": "17224:6:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17365:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "17365:4:22"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17371:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "17371:6:22"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17379:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "17379:6:22"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "17319:45:22",
																	"nodeType": "YulIdentifier",
																	"src": "17319:45:22"
																},
																"nativeSrc": "17319:67:22",
																"nodeType": "YulFunctionCall",
																"src": "17319:67:22"
															},
															"nativeSrc": "17319:67:22",
															"nodeType": "YulExpressionStatement",
															"src": "17319:67:22"
														},
														{
															"nativeSrc": "17396:18:22",
															"nodeType": "YulVariableDeclaration",
															"src": "17396:18:22",
															"value": {
																"kind": "number",
																"nativeSrc": "17413:1:22",
																"nodeType": "YulLiteral",
																"src": "17413:1:22",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17400:9:22",
																	"nodeType": "YulTypedName",
																	"src": "17400:9:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17424:17:22",
															"nodeType": "YulAssignment",
															"src": "17424:17:22",
															"value": {
																"kind": "number",
																"nativeSrc": "17437:4:22",
																"nodeType": "YulLiteral",
																"src": "17437:4:22",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17424:9:22",
																	"nodeType": "YulIdentifier",
																	"src": "17424:9:22"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17488:611:22",
																		"nodeType": "YulBlock",
																		"src": "17488:611:22",
																		"statements": [
																			{
																				"nativeSrc": "17502:37:22",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17502:37:22",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17521:6:22",
																							"nodeType": "YulIdentifier",
																							"src": "17521:6:22"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17533:4:22",
																									"nodeType": "YulLiteral",
																									"src": "17533:4:22",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17529:3:22",
																								"nodeType": "YulIdentifier",
																								"src": "17529:3:22"
																							},
																							"nativeSrc": "17529:9:22",
																							"nodeType": "YulFunctionCall",
																							"src": "17529:9:22"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17517:3:22",
																						"nodeType": "YulIdentifier",
																						"src": "17517:3:22"
																					},
																					"nativeSrc": "17517:22:22",
																					"nodeType": "YulFunctionCall",
																					"src": "17517:22:22"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17506:7:22",
																						"nodeType": "YulTypedName",
																						"src": "17506:7:22",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17553:51:22",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17553:51:22",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17599:4:22",
																							"nodeType": "YulIdentifier",
																							"src": "17599:4:22"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17567:31:22",
																						"nodeType": "YulIdentifier",
																						"src": "17567:31:22"
																					},
																					"nativeSrc": "17567:37:22",
																					"nodeType": "YulFunctionCall",
																					"src": "17567:37:22"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17557:6:22",
																						"nodeType": "YulTypedName",
																						"src": "17557:6:22",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17617:10:22",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17617:10:22",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17626:1:22",
																					"nodeType": "YulLiteral",
																					"src": "17626:1:22",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17621:1:22",
																						"nodeType": "YulTypedName",
																						"src": "17621:1:22",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17685:163:22",
																					"nodeType": "YulBlock",
																					"src": "17685:163:22",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17710:6:22",
																										"nodeType": "YulIdentifier",
																										"src": "17710:6:22"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17728:3:22",
																														"nodeType": "YulIdentifier",
																														"src": "17728:3:22"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "17733:9:22",
																														"nodeType": "YulIdentifier",
																														"src": "17733:9:22"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17724:3:22",
																													"nodeType": "YulIdentifier",
																													"src": "17724:3:22"
																												},
																												"nativeSrc": "17724:19:22",
																												"nodeType": "YulFunctionCall",
																												"src": "17724:19:22"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "17718:5:22",
																											"nodeType": "YulIdentifier",
																											"src": "17718:5:22"
																										},
																										"nativeSrc": "17718:26:22",
																										"nodeType": "YulFunctionCall",
																										"src": "17718:26:22"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17703:6:22",
																									"nodeType": "YulIdentifier",
																									"src": "17703:6:22"
																								},
																								"nativeSrc": "17703:42:22",
																								"nodeType": "YulFunctionCall",
																								"src": "17703:42:22"
																							},
																							"nativeSrc": "17703:42:22",
																							"nodeType": "YulExpressionStatement",
																							"src": "17703:42:22"
																						},
																						{
																							"nativeSrc": "17762:24:22",
																							"nodeType": "YulAssignment",
																							"src": "17762:24:22",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17776:6:22",
																										"nodeType": "YulIdentifier",
																										"src": "17776:6:22"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17784:1:22",
																										"nodeType": "YulLiteral",
																										"src": "17784:1:22",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17772:3:22",
																									"nodeType": "YulIdentifier",
																									"src": "17772:3:22"
																								},
																								"nativeSrc": "17772:14:22",
																								"nodeType": "YulFunctionCall",
																								"src": "17772:14:22"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "17762:6:22",
																									"nodeType": "YulIdentifier",
																									"src": "17762:6:22"
																								}
																							]
																						},
																						{
																							"nativeSrc": "17803:31:22",
																							"nodeType": "YulAssignment",
																							"src": "17803:31:22",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "17820:9:22",
																										"nodeType": "YulIdentifier",
																										"src": "17820:9:22"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17831:2:22",
																										"nodeType": "YulLiteral",
																										"src": "17831:2:22",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17816:3:22",
																									"nodeType": "YulIdentifier",
																									"src": "17816:3:22"
																								},
																								"nativeSrc": "17816:18:22",
																								"nodeType": "YulFunctionCall",
																								"src": "17816:18:22"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "17803:9:22",
																									"nodeType": "YulIdentifier",
																									"src": "17803:9:22"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17651:1:22",
																							"nodeType": "YulIdentifier",
																							"src": "17651:1:22"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17654:7:22",
																							"nodeType": "YulIdentifier",
																							"src": "17654:7:22"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17648:2:22",
																						"nodeType": "YulIdentifier",
																						"src": "17648:2:22"
																					},
																					"nativeSrc": "17648:14:22",
																					"nodeType": "YulFunctionCall",
																					"src": "17648:14:22"
																				},
																				"nativeSrc": "17640:208:22",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17663:21:22",
																					"nodeType": "YulBlock",
																					"src": "17663:21:22",
																					"statements": [
																						{
																							"nativeSrc": "17665:17:22",
																							"nodeType": "YulAssignment",
																							"src": "17665:17:22",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17674:1:22",
																										"nodeType": "YulIdentifier",
																										"src": "17674:1:22"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17677:4:22",
																										"nodeType": "YulLiteral",
																										"src": "17677:4:22",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17670:3:22",
																									"nodeType": "YulIdentifier",
																									"src": "17670:3:22"
																								},
																								"nativeSrc": "17670:12:22",
																								"nodeType": "YulFunctionCall",
																								"src": "17670:12:22"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17665:1:22",
																									"nodeType": "YulIdentifier",
																									"src": "17665:1:22"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17644:3:22",
																					"nodeType": "YulBlock",
																					"src": "17644:3:22",
																					"statements": []
																				},
																				"src": "17640:208:22"
																			},
																			{
																				"body": {
																					"nativeSrc": "17884:156:22",
																					"nodeType": "YulBlock",
																					"src": "17884:156:22",
																					"statements": [
																						{
																							"nativeSrc": "17902:43:22",
																							"nodeType": "YulVariableDeclaration",
																							"src": "17902:43:22",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17929:3:22",
																												"nodeType": "YulIdentifier",
																												"src": "17929:3:22"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17934:9:22",
																												"nodeType": "YulIdentifier",
																												"src": "17934:9:22"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17925:3:22",
																											"nodeType": "YulIdentifier",
																											"src": "17925:3:22"
																										},
																										"nativeSrc": "17925:19:22",
																										"nodeType": "YulFunctionCall",
																										"src": "17925:19:22"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17919:5:22",
																									"nodeType": "YulIdentifier",
																									"src": "17919:5:22"
																								},
																								"nativeSrc": "17919:26:22",
																								"nodeType": "YulFunctionCall",
																								"src": "17919:26:22"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "17906:9:22",
																									"nodeType": "YulTypedName",
																									"src": "17906:9:22",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17969:6:22",
																										"nodeType": "YulIdentifier",
																										"src": "17969:6:22"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "17996:9:22",
																												"nodeType": "YulIdentifier",
																												"src": "17996:9:22"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "18011:6:22",
																														"nodeType": "YulIdentifier",
																														"src": "18011:6:22"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "18019:4:22",
																														"nodeType": "YulLiteral",
																														"src": "18019:4:22",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "18007:3:22",
																													"nodeType": "YulIdentifier",
																													"src": "18007:3:22"
																												},
																												"nativeSrc": "18007:17:22",
																												"nodeType": "YulFunctionCall",
																												"src": "18007:17:22"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "17977:18:22",
																											"nodeType": "YulIdentifier",
																											"src": "17977:18:22"
																										},
																										"nativeSrc": "17977:48:22",
																										"nodeType": "YulFunctionCall",
																										"src": "17977:48:22"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17962:6:22",
																									"nodeType": "YulIdentifier",
																									"src": "17962:6:22"
																								},
																								"nativeSrc": "17962:64:22",
																								"nodeType": "YulFunctionCall",
																								"src": "17962:64:22"
																							},
																							"nativeSrc": "17962:64:22",
																							"nodeType": "YulExpressionStatement",
																							"src": "17962:64:22"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17867:7:22",
																							"nodeType": "YulIdentifier",
																							"src": "17867:7:22"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "17876:6:22",
																							"nodeType": "YulIdentifier",
																							"src": "17876:6:22"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17864:2:22",
																						"nodeType": "YulIdentifier",
																						"src": "17864:2:22"
																					},
																					"nativeSrc": "17864:19:22",
																					"nodeType": "YulFunctionCall",
																					"src": "17864:19:22"
																				},
																				"nativeSrc": "17861:179:22",
																				"nodeType": "YulIf",
																				"src": "17861:179:22"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18060:4:22",
																							"nodeType": "YulIdentifier",
																							"src": "18060:4:22"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "18074:6:22",
																											"nodeType": "YulIdentifier",
																											"src": "18074:6:22"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18082:1:22",
																											"nodeType": "YulLiteral",
																											"src": "18082:1:22",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "18070:3:22",
																										"nodeType": "YulIdentifier",
																										"src": "18070:3:22"
																									},
																									"nativeSrc": "18070:14:22",
																									"nodeType": "YulFunctionCall",
																									"src": "18070:14:22"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18086:1:22",
																									"nodeType": "YulLiteral",
																									"src": "18086:1:22",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18066:3:22",
																								"nodeType": "YulIdentifier",
																								"src": "18066:3:22"
																							},
																							"nativeSrc": "18066:22:22",
																							"nodeType": "YulFunctionCall",
																							"src": "18066:22:22"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18053:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "18053:6:22"
																					},
																					"nativeSrc": "18053:36:22",
																					"nodeType": "YulFunctionCall",
																					"src": "18053:36:22"
																				},
																				"nativeSrc": "18053:36:22",
																				"nodeType": "YulExpressionStatement",
																				"src": "18053:36:22"
																			}
																		]
																	},
																	"nativeSrc": "17481:618:22",
																	"nodeType": "YulCase",
																	"src": "17481:618:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17486:1:22",
																		"nodeType": "YulLiteral",
																		"src": "17486:1:22",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18116:222:22",
																		"nodeType": "YulBlock",
																		"src": "18116:222:22",
																		"statements": [
																			{
																				"nativeSrc": "18130:14:22",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18130:14:22",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18143:1:22",
																					"nodeType": "YulLiteral",
																					"src": "18143:1:22",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "18134:5:22",
																						"nodeType": "YulTypedName",
																						"src": "18134:5:22",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18167:67:22",
																					"nodeType": "YulBlock",
																					"src": "18167:67:22",
																					"statements": [
																						{
																							"nativeSrc": "18185:35:22",
																							"nodeType": "YulAssignment",
																							"src": "18185:35:22",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18204:3:22",
																												"nodeType": "YulIdentifier",
																												"src": "18204:3:22"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18209:9:22",
																												"nodeType": "YulIdentifier",
																												"src": "18209:9:22"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18200:3:22",
																											"nodeType": "YulIdentifier",
																											"src": "18200:3:22"
																										},
																										"nativeSrc": "18200:19:22",
																										"nodeType": "YulFunctionCall",
																										"src": "18200:19:22"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18194:5:22",
																									"nodeType": "YulIdentifier",
																									"src": "18194:5:22"
																								},
																								"nativeSrc": "18194:26:22",
																								"nodeType": "YulFunctionCall",
																								"src": "18194:26:22"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "18185:5:22",
																									"nodeType": "YulIdentifier",
																									"src": "18185:5:22"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "18160:6:22",
																					"nodeType": "YulIdentifier",
																					"src": "18160:6:22"
																				},
																				"nativeSrc": "18157:77:22",
																				"nodeType": "YulIf",
																				"src": "18157:77:22"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18254:4:22",
																							"nodeType": "YulIdentifier",
																							"src": "18254:4:22"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18313:5:22",
																									"nodeType": "YulIdentifier",
																									"src": "18313:5:22"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "18320:6:22",
																									"nodeType": "YulIdentifier",
																									"src": "18320:6:22"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18260:52:22",
																								"nodeType": "YulIdentifier",
																								"src": "18260:52:22"
																							},
																							"nativeSrc": "18260:67:22",
																							"nodeType": "YulFunctionCall",
																							"src": "18260:67:22"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18247:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "18247:6:22"
																					},
																					"nativeSrc": "18247:81:22",
																					"nodeType": "YulFunctionCall",
																					"src": "18247:81:22"
																				},
																				"nativeSrc": "18247:81:22",
																				"nodeType": "YulExpressionStatement",
																				"src": "18247:81:22"
																			}
																		]
																	},
																	"nativeSrc": "18108:230:22",
																	"nodeType": "YulCase",
																	"src": "18108:230:22",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17461:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "17461:6:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17469:2:22",
																		"nodeType": "YulLiteral",
																		"src": "17469:2:22",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17458:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "17458:2:22"
																},
																"nativeSrc": "17458:14:22",
																"nodeType": "YulFunctionCall",
																"src": "17458:14:22"
															},
															"nativeSrc": "17451:887:22",
															"nodeType": "YulSwitch",
															"src": "17451:887:22"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "16949:1395:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17030:4:22",
														"nodeType": "YulTypedName",
														"src": "17030:4:22",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "17036:3:22",
														"nodeType": "YulTypedName",
														"src": "17036:3:22",
														"type": ""
													}
												],
												"src": "16949:1395:22"
											},
											{
												"body": {
													"nativeSrc": "18408:40:22",
													"nodeType": "YulBlock",
													"src": "18408:40:22",
													"statements": [
														{
															"nativeSrc": "18419:22:22",
															"nodeType": "YulAssignment",
															"src": "18419:22:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18435:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "18435:5:22"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18429:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "18429:5:22"
																},
																"nativeSrc": "18429:12:22",
																"nodeType": "YulFunctionCall",
																"src": "18429:12:22"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18419:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "18419:6:22"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18350:98:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18391:5:22",
														"nodeType": "YulTypedName",
														"src": "18391:5:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18401:6:22",
														"nodeType": "YulTypedName",
														"src": "18401:6:22",
														"type": ""
													}
												],
												"src": "18350:98:22"
											},
											{
												"body": {
													"nativeSrc": "18549:73:22",
													"nodeType": "YulBlock",
													"src": "18549:73:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18566:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "18566:3:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18571:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "18571:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18559:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "18559:6:22"
																},
																"nativeSrc": "18559:19:22",
																"nodeType": "YulFunctionCall",
																"src": "18559:19:22"
															},
															"nativeSrc": "18559:19:22",
															"nodeType": "YulExpressionStatement",
															"src": "18559:19:22"
														},
														{
															"nativeSrc": "18587:29:22",
															"nodeType": "YulAssignment",
															"src": "18587:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18606:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "18606:3:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18611:4:22",
																		"nodeType": "YulLiteral",
																		"src": "18611:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18602:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "18602:3:22"
																},
																"nativeSrc": "18602:14:22",
																"nodeType": "YulFunctionCall",
																"src": "18602:14:22"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18587:11:22",
																	"nodeType": "YulIdentifier",
																	"src": "18587:11:22"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18454:168:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18521:3:22",
														"nodeType": "YulTypedName",
														"src": "18521:3:22",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18526:6:22",
														"nodeType": "YulTypedName",
														"src": "18526:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18537:11:22",
														"nodeType": "YulTypedName",
														"src": "18537:11:22",
														"type": ""
													}
												],
												"src": "18454:168:22"
											},
											{
												"body": {
													"nativeSrc": "18718:283:22",
													"nodeType": "YulBlock",
													"src": "18718:283:22",
													"statements": [
														{
															"nativeSrc": "18728:52:22",
															"nodeType": "YulVariableDeclaration",
															"src": "18728:52:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18774:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "18774:5:22"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18742:31:22",
																	"nodeType": "YulIdentifier",
																	"src": "18742:31:22"
																},
																"nativeSrc": "18742:38:22",
																"nodeType": "YulFunctionCall",
																"src": "18742:38:22"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18732:6:22",
																	"nodeType": "YulTypedName",
																	"src": "18732:6:22",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18789:77:22",
															"nodeType": "YulAssignment",
															"src": "18789:77:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18854:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "18854:3:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18859:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "18859:6:22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "18796:57:22",
																	"nodeType": "YulIdentifier",
																	"src": "18796:57:22"
																},
																"nativeSrc": "18796:70:22",
																"nodeType": "YulFunctionCall",
																"src": "18796:70:22"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18789:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "18789:3:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18914:5:22",
																				"nodeType": "YulIdentifier",
																				"src": "18914:5:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18921:4:22",
																				"nodeType": "YulLiteral",
																				"src": "18921:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18910:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "18910:3:22"
																		},
																		"nativeSrc": "18910:16:22",
																		"nodeType": "YulFunctionCall",
																		"src": "18910:16:22"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18928:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "18928:3:22"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18933:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "18933:6:22"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18875:34:22",
																	"nodeType": "YulIdentifier",
																	"src": "18875:34:22"
																},
																"nativeSrc": "18875:65:22",
																"nodeType": "YulFunctionCall",
																"src": "18875:65:22"
															},
															"nativeSrc": "18875:65:22",
															"nodeType": "YulExpressionStatement",
															"src": "18875:65:22"
														},
														{
															"nativeSrc": "18949:46:22",
															"nodeType": "YulAssignment",
															"src": "18949:46:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18960:3:22",
																		"nodeType": "YulIdentifier",
																		"src": "18960:3:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18987:6:22",
																				"nodeType": "YulIdentifier",
																				"src": "18987:6:22"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "18965:21:22",
																			"nodeType": "YulIdentifier",
																			"src": "18965:21:22"
																		},
																		"nativeSrc": "18965:29:22",
																		"nodeType": "YulFunctionCall",
																		"src": "18965:29:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18956:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "18956:3:22"
																},
																"nativeSrc": "18956:39:22",
																"nodeType": "YulFunctionCall",
																"src": "18956:39:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18949:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "18949:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18628:373:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18699:5:22",
														"nodeType": "YulTypedName",
														"src": "18699:5:22",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18706:3:22",
														"nodeType": "YulTypedName",
														"src": "18706:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18714:3:22",
														"nodeType": "YulTypedName",
														"src": "18714:3:22",
														"type": ""
													}
												],
												"src": "18628:373:22"
											},
											{
												"body": {
													"nativeSrc": "19207:440:22",
													"nodeType": "YulBlock",
													"src": "19207:440:22",
													"statements": [
														{
															"nativeSrc": "19217:27:22",
															"nodeType": "YulAssignment",
															"src": "19217:27:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19229:9:22",
																		"nodeType": "YulIdentifier",
																		"src": "19229:9:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19240:3:22",
																		"nodeType": "YulLiteral",
																		"src": "19240:3:22",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19225:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "19225:3:22"
																},
																"nativeSrc": "19225:19:22",
																"nodeType": "YulFunctionCall",
																"src": "19225:19:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19217:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "19217:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19298:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "19298:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19311:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "19311:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19322:1:22",
																				"nodeType": "YulLiteral",
																				"src": "19322:1:22",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19307:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "19307:3:22"
																		},
																		"nativeSrc": "19307:17:22",
																		"nodeType": "YulFunctionCall",
																		"src": "19307:17:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19254:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "19254:43:22"
																},
																"nativeSrc": "19254:71:22",
																"nodeType": "YulFunctionCall",
																"src": "19254:71:22"
															},
															"nativeSrc": "19254:71:22",
															"nodeType": "YulExpressionStatement",
															"src": "19254:71:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19379:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "19379:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19392:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "19392:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19403:2:22",
																				"nodeType": "YulLiteral",
																				"src": "19403:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19388:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "19388:3:22"
																		},
																		"nativeSrc": "19388:18:22",
																		"nodeType": "YulFunctionCall",
																		"src": "19388:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19335:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "19335:43:22"
																},
																"nativeSrc": "19335:72:22",
																"nodeType": "YulFunctionCall",
																"src": "19335:72:22"
															},
															"nativeSrc": "19335:72:22",
															"nodeType": "YulExpressionStatement",
															"src": "19335:72:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19461:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "19461:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19474:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "19474:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19485:2:22",
																				"nodeType": "YulLiteral",
																				"src": "19485:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19470:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "19470:3:22"
																		},
																		"nativeSrc": "19470:18:22",
																		"nodeType": "YulFunctionCall",
																		"src": "19470:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19417:43:22",
																	"nodeType": "YulIdentifier",
																	"src": "19417:43:22"
																},
																"nativeSrc": "19417:72:22",
																"nodeType": "YulFunctionCall",
																"src": "19417:72:22"
															},
															"nativeSrc": "19417:72:22",
															"nodeType": "YulExpressionStatement",
															"src": "19417:72:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19510:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "19510:9:22"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19521:2:22",
																				"nodeType": "YulLiteral",
																				"src": "19521:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19506:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "19506:3:22"
																		},
																		"nativeSrc": "19506:18:22",
																		"nodeType": "YulFunctionCall",
																		"src": "19506:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19530:4:22",
																				"nodeType": "YulIdentifier",
																				"src": "19530:4:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19536:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "19536:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19526:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "19526:3:22"
																		},
																		"nativeSrc": "19526:20:22",
																		"nodeType": "YulFunctionCall",
																		"src": "19526:20:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19499:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "19499:6:22"
																},
																"nativeSrc": "19499:48:22",
																"nodeType": "YulFunctionCall",
																"src": "19499:48:22"
															},
															"nativeSrc": "19499:48:22",
															"nodeType": "YulExpressionStatement",
															"src": "19499:48:22"
														},
														{
															"nativeSrc": "19556:84:22",
															"nodeType": "YulAssignment",
															"src": "19556:84:22",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19626:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "19626:6:22"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19635:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "19635:4:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19564:61:22",
																	"nodeType": "YulIdentifier",
																	"src": "19564:61:22"
																},
																"nativeSrc": "19564:76:22",
																"nodeType": "YulFunctionCall",
																"src": "19564:76:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19556:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "19556:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "19007:640:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19155:9:22",
														"nodeType": "YulTypedName",
														"src": "19155:9:22",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19167:6:22",
														"nodeType": "YulTypedName",
														"src": "19167:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19175:6:22",
														"nodeType": "YulTypedName",
														"src": "19175:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19183:6:22",
														"nodeType": "YulTypedName",
														"src": "19183:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19191:6:22",
														"nodeType": "YulTypedName",
														"src": "19191:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19202:4:22",
														"nodeType": "YulTypedName",
														"src": "19202:4:22",
														"type": ""
													}
												],
												"src": "19007:640:22"
											},
											{
												"body": {
													"nativeSrc": "19715:79:22",
													"nodeType": "YulBlock",
													"src": "19715:79:22",
													"statements": [
														{
															"nativeSrc": "19725:22:22",
															"nodeType": "YulAssignment",
															"src": "19725:22:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19740:6:22",
																		"nodeType": "YulIdentifier",
																		"src": "19740:6:22"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19734:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "19734:5:22"
																},
																"nativeSrc": "19734:13:22",
																"nodeType": "YulFunctionCall",
																"src": "19734:13:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19725:5:22",
																	"nodeType": "YulIdentifier",
																	"src": "19725:5:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19782:5:22",
																		"nodeType": "YulIdentifier",
																		"src": "19782:5:22"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "19756:25:22",
																	"nodeType": "YulIdentifier",
																	"src": "19756:25:22"
																},
																"nativeSrc": "19756:32:22",
																"nodeType": "YulFunctionCall",
																"src": "19756:32:22"
															},
															"nativeSrc": "19756:32:22",
															"nodeType": "YulExpressionStatement",
															"src": "19756:32:22"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "19653:141:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19693:6:22",
														"nodeType": "YulTypedName",
														"src": "19693:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19701:3:22",
														"nodeType": "YulTypedName",
														"src": "19701:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19709:5:22",
														"nodeType": "YulTypedName",
														"src": "19709:5:22",
														"type": ""
													}
												],
												"src": "19653:141:22"
											},
											{
												"body": {
													"nativeSrc": "19876:273:22",
													"nodeType": "YulBlock",
													"src": "19876:273:22",
													"statements": [
														{
															"body": {
																"nativeSrc": "19922:83:22",
																"nodeType": "YulBlock",
																"src": "19922:83:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19924:77:22",
																				"nodeType": "YulIdentifier",
																				"src": "19924:77:22"
																			},
																			"nativeSrc": "19924:79:22",
																			"nodeType": "YulFunctionCall",
																			"src": "19924:79:22"
																		},
																		"nativeSrc": "19924:79:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "19924:79:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19897:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "19897:7:22"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19906:9:22",
																				"nodeType": "YulIdentifier",
																				"src": "19906:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19893:3:22",
																			"nodeType": "YulIdentifier",
																			"src": "19893:3:22"
																		},
																		"nativeSrc": "19893:23:22",
																		"nodeType": "YulFunctionCall",
																		"src": "19893:23:22"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19918:2:22",
																		"nodeType": "YulLiteral",
																		"src": "19918:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19889:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "19889:3:22"
																},
																"nativeSrc": "19889:32:22",
																"nodeType": "YulFunctionCall",
																"src": "19889:32:22"
															},
															"nativeSrc": "19886:119:22",
															"nodeType": "YulIf",
															"src": "19886:119:22"
														},
														{
															"nativeSrc": "20015:127:22",
															"nodeType": "YulBlock",
															"src": "20015:127:22",
															"statements": [
																{
																	"nativeSrc": "20030:15:22",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20030:15:22",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20044:1:22",
																		"nodeType": "YulLiteral",
																		"src": "20044:1:22",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20034:6:22",
																			"nodeType": "YulTypedName",
																			"src": "20034:6:22",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20059:73:22",
																	"nodeType": "YulAssignment",
																	"src": "20059:73:22",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20104:9:22",
																						"nodeType": "YulIdentifier",
																						"src": "20104:9:22"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20115:6:22",
																						"nodeType": "YulIdentifier",
																						"src": "20115:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20100:3:22",
																					"nodeType": "YulIdentifier",
																					"src": "20100:3:22"
																				},
																				"nativeSrc": "20100:22:22",
																				"nodeType": "YulFunctionCall",
																				"src": "20100:22:22"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20124:7:22",
																				"nodeType": "YulIdentifier",
																				"src": "20124:7:22"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "20069:30:22",
																			"nodeType": "YulIdentifier",
																			"src": "20069:30:22"
																		},
																		"nativeSrc": "20069:63:22",
																		"nodeType": "YulFunctionCall",
																		"src": "20069:63:22"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20059:6:22",
																			"nodeType": "YulIdentifier",
																			"src": "20059:6:22"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "19800:349:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19846:9:22",
														"nodeType": "YulTypedName",
														"src": "19846:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19857:7:22",
														"nodeType": "YulTypedName",
														"src": "19857:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19869:6:22",
														"nodeType": "YulTypedName",
														"src": "19869:6:22",
														"type": ""
													}
												],
												"src": "19800:349:22"
											},
											{
												"body": {
													"nativeSrc": "20183:152:22",
													"nodeType": "YulBlock",
													"src": "20183:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20200:1:22",
																		"nodeType": "YulLiteral",
																		"src": "20200:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20203:77:22",
																		"nodeType": "YulLiteral",
																		"src": "20203:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20193:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "20193:6:22"
																},
																"nativeSrc": "20193:88:22",
																"nodeType": "YulFunctionCall",
																"src": "20193:88:22"
															},
															"nativeSrc": "20193:88:22",
															"nodeType": "YulExpressionStatement",
															"src": "20193:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20297:1:22",
																		"nodeType": "YulLiteral",
																		"src": "20297:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20300:4:22",
																		"nodeType": "YulLiteral",
																		"src": "20300:4:22",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20290:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "20290:6:22"
																},
																"nativeSrc": "20290:15:22",
																"nodeType": "YulFunctionCall",
																"src": "20290:15:22"
															},
															"nativeSrc": "20290:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "20290:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20321:1:22",
																		"nodeType": "YulLiteral",
																		"src": "20321:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20324:4:22",
																		"nodeType": "YulLiteral",
																		"src": "20324:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20314:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "20314:6:22"
																},
																"nativeSrc": "20314:15:22",
																"nodeType": "YulFunctionCall",
																"src": "20314:15:22"
															},
															"nativeSrc": "20314:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "20314:15:22"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "20155:180:22",
												"nodeType": "YulFunctionDefinition",
												"src": "20155:180:22"
											},
											{
												"body": {
													"nativeSrc": "20386:149:22",
													"nodeType": "YulBlock",
													"src": "20386:149:22",
													"statements": [
														{
															"nativeSrc": "20396:25:22",
															"nodeType": "YulAssignment",
															"src": "20396:25:22",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20419:1:22",
																		"nodeType": "YulIdentifier",
																		"src": "20419:1:22"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20401:17:22",
																	"nodeType": "YulIdentifier",
																	"src": "20401:17:22"
																},
																"nativeSrc": "20401:20:22",
																"nodeType": "YulFunctionCall",
																"src": "20401:20:22"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20396:1:22",
																	"nodeType": "YulIdentifier",
																	"src": "20396:1:22"
																}
															]
														},
														{
															"nativeSrc": "20430:25:22",
															"nodeType": "YulAssignment",
															"src": "20430:25:22",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20453:1:22",
																		"nodeType": "YulIdentifier",
																		"src": "20453:1:22"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20435:17:22",
																	"nodeType": "YulIdentifier",
																	"src": "20435:17:22"
																},
																"nativeSrc": "20435:20:22",
																"nodeType": "YulFunctionCall",
																"src": "20435:20:22"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20430:1:22",
																	"nodeType": "YulIdentifier",
																	"src": "20430:1:22"
																}
															]
														},
														{
															"nativeSrc": "20464:17:22",
															"nodeType": "YulAssignment",
															"src": "20464:17:22",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20476:1:22",
																		"nodeType": "YulIdentifier",
																		"src": "20476:1:22"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20479:1:22",
																		"nodeType": "YulIdentifier",
																		"src": "20479:1:22"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "20472:3:22",
																	"nodeType": "YulIdentifier",
																	"src": "20472:3:22"
																},
																"nativeSrc": "20472:9:22",
																"nodeType": "YulFunctionCall",
																"src": "20472:9:22"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "20464:4:22",
																	"nodeType": "YulIdentifier",
																	"src": "20464:4:22"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20506:22:22",
																"nodeType": "YulBlock",
																"src": "20506:22:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20508:16:22",
																				"nodeType": "YulIdentifier",
																				"src": "20508:16:22"
																			},
																			"nativeSrc": "20508:18:22",
																			"nodeType": "YulFunctionCall",
																			"src": "20508:18:22"
																		},
																		"nativeSrc": "20508:18:22",
																		"nodeType": "YulExpressionStatement",
																		"src": "20508:18:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "20497:4:22",
																		"nodeType": "YulIdentifier",
																		"src": "20497:4:22"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "20503:1:22",
																		"nodeType": "YulIdentifier",
																		"src": "20503:1:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20494:2:22",
																	"nodeType": "YulIdentifier",
																	"src": "20494:2:22"
																},
																"nativeSrc": "20494:11:22",
																"nodeType": "YulFunctionCall",
																"src": "20494:11:22"
															},
															"nativeSrc": "20491:37:22",
															"nodeType": "YulIf",
															"src": "20491:37:22"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "20341:194:22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20372:1:22",
														"nodeType": "YulTypedName",
														"src": "20372:1:22",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20375:1:22",
														"nodeType": "YulTypedName",
														"src": "20375:1:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "20381:4:22",
														"nodeType": "YulTypedName",
														"src": "20381:4:22",
														"type": ""
													}
												],
												"src": "20341:194:22"
											},
											{
												"body": {
													"nativeSrc": "20569:152:22",
													"nodeType": "YulBlock",
													"src": "20569:152:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20586:1:22",
																		"nodeType": "YulLiteral",
																		"src": "20586:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20589:77:22",
																		"nodeType": "YulLiteral",
																		"src": "20589:77:22",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20579:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "20579:6:22"
																},
																"nativeSrc": "20579:88:22",
																"nodeType": "YulFunctionCall",
																"src": "20579:88:22"
															},
															"nativeSrc": "20579:88:22",
															"nodeType": "YulExpressionStatement",
															"src": "20579:88:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20683:1:22",
																		"nodeType": "YulLiteral",
																		"src": "20683:1:22",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20686:4:22",
																		"nodeType": "YulLiteral",
																		"src": "20686:4:22",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20676:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "20676:6:22"
																},
																"nativeSrc": "20676:15:22",
																"nodeType": "YulFunctionCall",
																"src": "20676:15:22"
															},
															"nativeSrc": "20676:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "20676:15:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20707:1:22",
																		"nodeType": "YulLiteral",
																		"src": "20707:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20710:4:22",
																		"nodeType": "YulLiteral",
																		"src": "20710:4:22",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20700:6:22",
																	"nodeType": "YulIdentifier",
																	"src": "20700:6:22"
																},
																"nativeSrc": "20700:15:22",
																"nodeType": "YulFunctionCall",
																"src": "20700:15:22"
															},
															"nativeSrc": "20700:15:22",
															"nodeType": "YulExpressionStatement",
															"src": "20700:15:22"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "20541:180:22",
												"nodeType": "YulFunctionDefinition",
												"src": "20541:180:22"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr__to_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 22,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xABC8C7AF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xABC8C7AF EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x400 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x73AD6C2D EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x34A JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x280 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x17B47CC4 EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x553 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x569 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x200C JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x2176 JUMP JUMPDEST PUSH2 0xA49 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x22DB JUMP JUMPDEST PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4A2 JUMPI POP PUSH2 0x4A1 DUP3 PUSH2 0xC97 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E3 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x505 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x511 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x542 DUP3 PUSH2 0xD78 JUMP JUMPDEST POP PUSH2 0x54C DUP3 PUSH2 0xDFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x565 DUP3 DUP3 PUSH2 0x560 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x5B3 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DF SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x62A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x601 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6C3 DUP4 DUP4 PUSH2 0x6BE PUSH2 0xE37 JUMP JUMPDEST PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x739 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x749 DUP4 PUSH2 0x885 JUMP JUMPDEST DUP3 LT PUSH2 0x78E JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP3 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA49 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x80B PUSH2 0x634 JUMP JUMPDEST DUP3 LT PUSH2 0x850 JUMPI PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x847 SWAP3 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x864 JUMPI PUSH2 0x863 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x87E DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8F6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x98D SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9B9 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA04 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9DB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA04 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA20 PUSH2 0xA19 PUSH2 0xE37 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF6A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA54 DUP5 DUP5 DUP5 PUSH2 0x640 JUMP JUMPDEST PUSH2 0xA60 DUP5 DUP5 DUP5 DUP5 PUSH2 0x10D3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xA87 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAB3 SWAP1 PUSH2 0x2346 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAFE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAD5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAFE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAE1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB15 PUSH1 0xA PUSH2 0x1285 JUMP JUMPDEST PUSH0 PUSH2 0xB20 PUSH1 0xA PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP PUSH2 0xB2C CALLER DUP3 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0xB57 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xC PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xBFC SWAP2 SWAP1 PUSH2 0x259C JUMP JUMPDEST POP SWAP1 POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xD61 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xD71 JUMPI POP PUSH2 0xD70 DUP3 PUSH2 0x12C2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD83 DUP4 PUSH2 0x132B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE4B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1364 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE5D DUP6 DUP6 DUP6 PUSH2 0x1523 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA0 JUMPI PUSH2 0xE9B DUP5 PUSH2 0x172E JUMP JUMPDEST PUSH2 0xEDF JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEDE JUMPI PUSH2 0xEDD DUP2 DUP6 PUSH2 0x1772 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF20 JUMPI PUSH2 0xF1B DUP5 PUSH2 0x18BC JUMP JUMPDEST PUSH2 0xF5F JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF5E JUMPI PUSH2 0xF5D DUP6 DUP6 PUSH2 0x197C JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFDA JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x127F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1116 PUSH2 0xE37 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1138 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1173 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x271B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x11F4 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x11EC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x127D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1274 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BE DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1A00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x139C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14CE JUMPI PUSH0 PUSH2 0x13AB DUP5 PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1415 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1428 JUMPI POP PUSH2 0x1426 DUP2 DUP5 PUSH2 0xC09 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x146A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1461 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x14CC JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x152E DUP5 PUSH2 0x132B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x156F JUMPI PUSH2 0x156E DUP2 DUP5 DUP7 PUSH2 0x1A1B JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15FA JUMPI PUSH2 0x15AE PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1679 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x177C DUP4 PUSH2 0x885 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1853 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x18CF SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x191B JUMPI PUSH2 0x191A PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1963 JUMPI PUSH2 0x1962 PUSH2 0x27A6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x1988 DUP5 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x1992 SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1A0A DUP4 DUP4 PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0x1A16 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x10D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A26 DUP4 DUP4 DUP4 PUSH2 0x1BD1 JUMP JUMPDEST PUSH2 0x1AD9 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A9A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A91 SWAP2 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD0 SWAP3 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B4E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B45 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1B5A DUP4 DUP4 PUSH0 PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BCC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC3 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1C88 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C49 JUMPI POP PUSH2 0x1C48 DUP5 DUP5 PUSH2 0xC09 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1C87 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C6F DUP4 PUSH2 0xDFE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD6 DUP2 PUSH2 0x1CA2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CF1 DUP2 PUSH2 0x1CCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0C JUMPI PUSH2 0x1D0B PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D19 DUP5 DUP3 DUP6 ADD PUSH2 0x1CE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D36 DUP2 PUSH2 0x1D22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D97 DUP3 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x1DA1 DUP2 DUP6 PUSH2 0x1D5F JUMP JUMPDEST SWAP4 POP PUSH2 0x1DB1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x1DBA DUP2 PUSH2 0x1D7D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DDD DUP2 DUP5 PUSH2 0x1D8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF7 DUP2 PUSH2 0x1DE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E01 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E12 DUP2 PUSH2 0x1DEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E2D JUMPI PUSH2 0x1E2C PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E3A DUP5 DUP3 DUP6 ADD PUSH2 0x1E04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6C DUP3 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7C DUP2 PUSH2 0x1E62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E95 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EA4 DUP2 PUSH2 0x1E62 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EAE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EBF DUP2 PUSH2 0x1E9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH2 0x1EDA PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EE8 DUP6 DUP3 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EF9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0C DUP2 PUSH2 0x1DE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F25 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F03 JUMP JUMPDEST PUSH2 0x1F32 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E73 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1F44 DUP2 DUP5 PUSH2 0x1D8D JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F61 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F7E JUMPI PUSH2 0x1F7D PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F8B DUP7 DUP3 DUP8 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F9C DUP7 DUP3 DUP8 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FAD DUP7 DUP3 DUP8 ADD PUSH2 0x1E04 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FCC JUMPI PUSH2 0x1FCB PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FD9 DUP5 DUP3 DUP6 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEB DUP2 PUSH2 0x1D22 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2006 DUP2 PUSH2 0x1FE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2022 JUMPI PUSH2 0x2021 PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x202F DUP6 DUP3 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2040 DUP6 DUP3 DUP7 ADD PUSH2 0x1FF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2088 DUP3 PUSH2 0x1D7D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20A7 JUMPI PUSH2 0x20A6 PUSH2 0x2052 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20B9 PUSH2 0x1C91 JUMP JUMPDEST SWAP1 POP PUSH2 0x20C5 DUP3 DUP3 PUSH2 0x207F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20E4 JUMPI PUSH2 0x20E3 PUSH2 0x2052 JUMP JUMPDEST JUMPDEST PUSH2 0x20ED DUP3 PUSH2 0x1D7D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x211A PUSH2 0x2115 DUP5 PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x20B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2136 JUMPI PUSH2 0x2135 PUSH2 0x204E JUMP JUMPDEST JUMPDEST PUSH2 0x2141 DUP5 DUP3 DUP6 PUSH2 0x20FA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x215D JUMPI PUSH2 0x215C PUSH2 0x204A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x216D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2108 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x218E JUMPI PUSH2 0x218D PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x219B DUP8 DUP3 DUP9 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x21AC DUP8 DUP3 DUP9 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x21BD DUP8 DUP3 DUP9 ADD PUSH2 0x1E04 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21DE JUMPI PUSH2 0x21DD PUSH2 0x1C9E JUMP JUMPDEST JUMPDEST PUSH2 0x21EA DUP8 DUP3 DUP9 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2210 JUMPI PUSH2 0x220F PUSH2 0x2052 JUMP JUMPDEST JUMPDEST PUSH2 0x2219 DUP3 PUSH2 0x1D7D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2238 PUSH2 0x2233 DUP5 PUSH2 0x21F6 JUMP JUMPDEST PUSH2 0x20B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2254 JUMPI PUSH2 0x2253 PUSH2 0x204E JUMP JUMPDEST JUMPDEST PUSH2 0x225F DUP5 DUP3 DUP6 PUSH2 0x20FA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x227B JUMPI PUSH2 0x227A PUSH2 0x204A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x228B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2226 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A9 JUMPI PUSH2 0x22A8 PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C6 JUMPI PUSH2 0x22C5 PUSH2 0x1C9E JUMP JUMPDEST JUMPDEST PUSH2 0x22D2 DUP5 DUP3 DUP6 ADD PUSH2 0x2267 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F1 JUMPI PUSH2 0x22F0 PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22FE DUP6 DUP3 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x230F DUP6 DUP3 DUP7 ADD PUSH2 0x1EB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x235D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2370 JUMPI PUSH2 0x236F PUSH2 0x2319 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2389 PUSH0 DUP4 ADD DUP7 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x2396 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F03 JUMP JUMPDEST PUSH2 0x23A3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E73 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23BE PUSH0 DUP4 ADD DUP6 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x245B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2420 JUMP JUMPDEST PUSH2 0x2465 DUP7 DUP4 PUSH2 0x2420 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24A0 PUSH2 0x249B PUSH2 0x2496 DUP5 PUSH2 0x1DE5 JUMP JUMPDEST PUSH2 0x247D JUMP JUMPDEST PUSH2 0x1DE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B9 DUP4 PUSH2 0x2486 JUMP JUMPDEST PUSH2 0x24CD PUSH2 0x24C5 DUP3 PUSH2 0x24A7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x242C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x24E1 PUSH2 0x24D5 JUMP JUMPDEST PUSH2 0x24EC DUP2 DUP5 DUP5 PUSH2 0x24B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x250F JUMPI PUSH2 0x2504 PUSH0 DUP3 PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24F2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2554 JUMPI PUSH2 0x2525 DUP2 PUSH2 0x23FF JUMP JUMPDEST PUSH2 0x252E DUP5 PUSH2 0x2411 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x253D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2551 PUSH2 0x2549 DUP6 PUSH2 0x2411 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24F1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2574 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2559 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x258C DUP4 DUP4 PUSH2 0x2565 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25A5 DUP3 PUSH2 0x1D55 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25BE JUMPI PUSH2 0x25BD PUSH2 0x2052 JUMP JUMPDEST JUMPDEST PUSH2 0x25C8 DUP3 SLOAD PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x25D3 DUP3 DUP3 DUP6 PUSH2 0x2513 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2604 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x25F2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x25FC DUP6 DUP3 PUSH2 0x2581 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2663 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2612 DUP7 PUSH2 0x23FF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2639 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2614 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2656 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2652 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2565 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x268F DUP3 PUSH2 0x266B JUMP JUMPDEST PUSH2 0x2699 DUP2 DUP6 PUSH2 0x2675 JUMP JUMPDEST SWAP4 POP PUSH2 0x26A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x26B2 DUP2 PUSH2 0x1D7D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x26D0 PUSH0 DUP4 ADD DUP8 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x26DD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x26EA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F03 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x26FC DUP2 DUP5 PUSH2 0x2685 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2715 DUP2 PUSH2 0x1CCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2730 JUMPI PUSH2 0x272F PUSH2 0x1C9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x273D DUP5 DUP3 DUP6 ADD PUSH2 0x2707 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x277D DUP3 PUSH2 0x1DE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2788 DUP4 PUSH2 0x1DE5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x27A0 JUMPI PUSH2 0x279F PUSH2 0x2746 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D CALLCODE 0xA8 GT 0xF7 DIV 0xE8 0xCC NOT 0x21 0xCD LOG1 0xAD EXP PUSH29 0x5565B8E4810FF25070EE8D3429300036E264736F6C634300081A003300 ",
							"sourceMap": "515:990:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:222:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;753:37:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2062:102:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4143:578:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1736:255:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2236:226:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1394:108:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2518:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;634:26:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4985:208:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1195:195:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1435:222:8;1537:4;1575:35;1560:50;;;:11;:50;;;;:90;;;;1614:36;1638:11;1614:23;:36::i;:::-;1560:90;1553:97;;1435:222;;;:::o;2365:89:5:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;753:37:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2062:102:8:-;2114:7;2140:10;:17;;;;2133:24;;2062:102;:::o;4143:578:5:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1736:255:8:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1918:5;1925;1895:36;;;;;;;;;;;;:::i;:::-;;;;;;;;1843:99;1958:12;:19;1971:5;1958:19;;;;;;;;;;;;;;;:26;1978:5;1958:26;;;;;;;;;;;;1951:33;;1736:255;;;;:::o;4787:132:5:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2236:226:8:-;2302:7;2334:13;:11;:13::i;:::-;2325:5;:22;2321:101;;2401:1;2405:5;2370:41;;;;;;;;;;;;:::i;:::-;;;;;;;;2321:101;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;;2431:24;;2236:226;;;:::o;2185:118:5:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;1394:108:21:-;1491:6;1477:11;;:20;;;;;;;;;;;;;;;;;;1394:108;:::o;2518:93:5:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;634:26:21:-;;;;;;;;;;;;;:::o;4985:208:5:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1195:195:21:-;1260:13;1367:5;:14;1373:7;1367:14;;;;;;;;;;;:18;;1360:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1195:195;;;:::o;856:335::-;905:7;919:21;:9;:19;:21::i;:::-;946:17;966:19;:9;:17;:19::i;:::-;946:39;;991:32;1001:10;1013:9;991;:32::i;:::-;1029:31;1037:11;;;;;;;;;;;1050:9;1029:7;:31::i;:::-;1086:77;;;;;;;;1103:9;1086:77;;;;1130:10;1086:77;;;;;;1153:3;1086:77;;;1067:5;:16;1073:9;1067:16;;;;;;;;;;;:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1177:9;1170:16;;;856:335;;;:::o;3928:153:5:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:13:-;709:7;735:10;728:17;;656:96;:::o;14418:120:5:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;2518:625:8:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;;2728:1;2703:27;;:13;:27;;;2699:210;;2746:40;2778:7;2746:31;:40::i;:::-;2699:210;;;2824:2;2807:19;;:13;:19;;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;2803:106;2699:210;2936:1;2922:16;;:2;:16;;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;3020:19;;:13;:19;;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3016:90;2918:188;3123:13;3116:20;;;2518:625;;;;;:::o;15591:312:5:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;945:123:14:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;10633:100:5:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;762:146:17:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5707:115:5:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;3846:161:8:-;3949:10;:17;;;;3922:15;:24;3938:7;3922:24;;;;;;;;;;;:44;;;;3976:10;3992:7;3976:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:161;:::o;4624:959::-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4886:40;;4936:18;4957:17;:26;4975:7;4957:26;;;;;;;;;;;;4936:47;;5101:14;5087:10;:28;5083:323;;5131:19;5153:12;:18;5166:4;5153:18;;;;;;;;;;;;;;;:34;5172:14;5153:34;;;;;;;;;;;;5131:56;;5235:11;5202:12;:18;5215:4;5202:18;;;;;;;;;;;;;;;:30;5221:10;5202:30;;;;;;;;;;;:44;;;;5351:10;5318:17;:30;5336:11;5318:30;;;;;;;;;;;:43;;;;5117:289;5083:323;5499:17;:26;5517:7;5499:26;;;;;;;;;;;5492:33;;;5542:12;:18;5555:4;5542:18;;;;;;;;;;;;;;;:34;5561:14;5542:34;;;;;;;;;;;5535:41;;;4705:878;;4624:959;;:::o;5871:1061::-;6120:22;6165:1;6145:10;:17;;;;:21;;;;:::i;:::-;6120:46;;6176:18;6197:15;:24;6213:7;6197:24;;;;;;;;;;;;6176:45;;6543:19;6565:10;6576:14;6565:26;;;;;;;;:::i;:::-;;;;;;;;;;6543:48;;6627:11;6602:10;6613;6602:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6737:10;6706:15;:28;6722:11;6706:28;;;;;;;;;;;:41;;;;6875:15;:24;6891:7;6875:24;;;;;;;;;;;6868:31;;;6909:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5942:990;;;5871:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;3521:34;;3592:7;3565:12;:16;3578:2;3565:16;;;;;;;;;;;;;;;:24;3582:6;3565:24;;;;;;;;;;;:34;;;;3638:6;3609:17;:26;3627:7;3609:26;;;;;;;;;;;:35;;;;3511:140;3437:214;;:::o;10954:182:5:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;6376:272::-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:22:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:118::-;4870:24;4888:5;4870:24;:::i;:::-;4865:3;4858:37;4783:118;;:::o;4907:533::-;5076:4;5114:2;5103:9;5099:18;5091:26;;5127:71;5195:1;5184:9;5180:17;5171:6;5127:71;:::i;:::-;5208:72;5276:2;5265:9;5261:18;5252:6;5208:72;:::i;:::-;5327:9;5321:4;5317:20;5312:2;5301:9;5297:18;5290:48;5355:78;5428:4;5419:6;5355:78;:::i;:::-;5347:86;;4907:533;;;;;;:::o;5446:222::-;5539:4;5577:2;5566:9;5562:18;5554:26;;5590:71;5658:1;5647:9;5643:17;5634:6;5590:71;:::i;:::-;5446:222;;;;:::o;5674:619::-;5751:6;5759;5767;5816:2;5804:9;5795:7;5791:23;5787:32;5784:119;;;5822:79;;:::i;:::-;5784:119;5942:1;5967:53;6012:7;6003:6;5992:9;5988:22;5967:53;:::i;:::-;5957:63;;5913:117;6069:2;6095:53;6140:7;6131:6;6120:9;6116:22;6095:53;:::i;:::-;6085:63;;6040:118;6197:2;6223:53;6268:7;6259:6;6248:9;6244:22;6223:53;:::i;:::-;6213:63;;6168:118;5674:619;;;;;:::o;6299:329::-;6358:6;6407:2;6395:9;6386:7;6382:23;6378:32;6375:119;;;6413:79;;:::i;:::-;6375:119;6533:1;6558:53;6603:7;6594:6;6583:9;6579:22;6558:53;:::i;:::-;6548:63;;6504:117;6299:329;;;;:::o;6634:116::-;6704:21;6719:5;6704:21;:::i;:::-;6697:5;6694:32;6684:60;;6740:1;6737;6730:12;6684:60;6634:116;:::o;6756:133::-;6799:5;6837:6;6824:20;6815:29;;6853:30;6877:5;6853:30;:::i;:::-;6756:133;;;;:::o;6895:468::-;6960:6;6968;7017:2;7005:9;6996:7;6992:23;6988:32;6985:119;;;7023:79;;:::i;:::-;6985:119;7143:1;7168:53;7213:7;7204:6;7193:9;7189:22;7168:53;:::i;:::-;7158:63;;7114:117;7270:2;7296:50;7338:7;7329:6;7318:9;7314:22;7296:50;:::i;:::-;7286:60;;7241:115;6895:468;;;;;:::o;7369:117::-;7478:1;7475;7468:12;7492:117;7601:1;7598;7591:12;7615:180;7663:77;7660:1;7653:88;7760:4;7757:1;7750:15;7784:4;7781:1;7774:15;7801:281;7884:27;7906:4;7884:27;:::i;:::-;7876:6;7872:40;8014:6;8002:10;7999:22;7978:18;7966:10;7963:34;7960:62;7957:88;;;8025:18;;:::i;:::-;7957:88;8065:10;8061:2;8054:22;7844:238;7801:281;;:::o;8088:129::-;8122:6;8149:20;;:::i;:::-;8139:30;;8178:33;8206:4;8198:6;8178:33;:::i;:::-;8088:129;;;:::o;8223:307::-;8284:4;8374:18;8366:6;8363:30;8360:56;;;8396:18;;:::i;:::-;8360:56;8434:29;8456:6;8434:29;:::i;:::-;8426:37;;8518:4;8512;8508:15;8500:23;;8223:307;;;:::o;8536:148::-;8634:6;8629:3;8624;8611:30;8675:1;8666:6;8661:3;8657:16;8650:27;8536:148;;;:::o;8690:423::-;8767:5;8792:65;8808:48;8849:6;8808:48;:::i;:::-;8792:65;:::i;:::-;8783:74;;8880:6;8873:5;8866:21;8918:4;8911:5;8907:16;8956:3;8947:6;8942:3;8938:16;8935:25;8932:112;;;8963:79;;:::i;:::-;8932:112;9053:54;9100:6;9095:3;9090;9053:54;:::i;:::-;8773:340;8690:423;;;;;:::o;9132:338::-;9187:5;9236:3;9229:4;9221:6;9217:17;9213:27;9203:122;;9244:79;;:::i;:::-;9203:122;9361:6;9348:20;9386:78;9460:3;9452:6;9445:4;9437:6;9433:17;9386:78;:::i;:::-;9377:87;;9193:277;9132:338;;;;:::o;9476:943::-;9571:6;9579;9587;9595;9644:3;9632:9;9623:7;9619:23;9615:33;9612:120;;;9651:79;;:::i;:::-;9612:120;9771:1;9796:53;9841:7;9832:6;9821:9;9817:22;9796:53;:::i;:::-;9786:63;;9742:117;9898:2;9924:53;9969:7;9960:6;9949:9;9945:22;9924:53;:::i;:::-;9914:63;;9869:118;10026:2;10052:53;10097:7;10088:6;10077:9;10073:22;10052:53;:::i;:::-;10042:63;;9997:118;10182:2;10171:9;10167:18;10154:32;10213:18;10205:6;10202:30;10199:117;;;10235:79;;:::i;:::-;10199:117;10340:62;10394:7;10385:6;10374:9;10370:22;10340:62;:::i;:::-;10330:72;;10125:287;9476:943;;;;;;;:::o;10425:308::-;10487:4;10577:18;10569:6;10566:30;10563:56;;;10599:18;;:::i;:::-;10563:56;10637:29;10659:6;10637:29;:::i;:::-;10629:37;;10721:4;10715;10711:15;10703:23;;10425:308;;;:::o;10739:425::-;10817:5;10842:66;10858:49;10900:6;10858:49;:::i;:::-;10842:66;:::i;:::-;10833:75;;10931:6;10924:5;10917:21;10969:4;10962:5;10958:16;11007:3;10998:6;10993:3;10989:16;10986:25;10983:112;;;11014:79;;:::i;:::-;10983:112;11104:54;11151:6;11146:3;11141;11104:54;:::i;:::-;10823:341;10739:425;;;;;:::o;11184:340::-;11240:5;11289:3;11282:4;11274:6;11270:17;11266:27;11256:122;;11297:79;;:::i;:::-;11256:122;11414:6;11401:20;11439:79;11514:3;11506:6;11499:4;11491:6;11487:17;11439:79;:::i;:::-;11430:88;;11246:278;11184:340;;;;:::o;11530:509::-;11599:6;11648:2;11636:9;11627:7;11623:23;11619:32;11616:119;;;11654:79;;:::i;:::-;11616:119;11802:1;11791:9;11787:17;11774:31;11832:18;11824:6;11821:30;11818:117;;;11854:79;;:::i;:::-;11818:117;11959:63;12014:7;12005:6;11994:9;11990:22;11959:63;:::i;:::-;11949:73;;11745:287;11530:509;;;;:::o;12045:474::-;12113:6;12121;12170:2;12158:9;12149:7;12145:23;12141:32;12138:119;;;12176:79;;:::i;:::-;12138:119;12296:1;12321:53;12366:7;12357:6;12346:9;12342:22;12321:53;:::i;:::-;12311:63;;12267:117;12423:2;12449:53;12494:7;12485:6;12474:9;12470:22;12449:53;:::i;:::-;12439:63;;12394:118;12045:474;;;;;:::o;12525:180::-;12573:77;12570:1;12563:88;12670:4;12667:1;12660:15;12694:4;12691:1;12684:15;12711:320;12755:6;12792:1;12786:4;12782:12;12772:22;;12839:1;12833:4;12829:12;12860:18;12850:81;;12916:4;12908:6;12904:17;12894:27;;12850:81;12978:2;12970:6;12967:14;12947:18;12944:38;12941:84;;12997:18;;:::i;:::-;12941:84;12762:269;12711:320;;;:::o;13037:442::-;13186:4;13224:2;13213:9;13209:18;13201:26;;13237:71;13305:1;13294:9;13290:17;13281:6;13237:71;:::i;:::-;13318:72;13386:2;13375:9;13371:18;13362:6;13318:72;:::i;:::-;13400;13468:2;13457:9;13453:18;13444:6;13400:72;:::i;:::-;13037:442;;;;;;:::o;13485:332::-;13606:4;13644:2;13633:9;13629:18;13621:26;;13657:71;13725:1;13714:9;13710:17;13701:6;13657:71;:::i;:::-;13738:72;13806:2;13795:9;13791:18;13782:6;13738:72;:::i;:::-;13485:332;;;;;:::o;13823:180::-;13871:77;13868:1;13861:88;13968:4;13965:1;13958:15;13992:4;13989:1;13982:15;14009:141;14058:4;14081:3;14073:11;;14104:3;14101:1;14094:14;14138:4;14135:1;14125:18;14117:26;;14009:141;;;:::o;14156:93::-;14193:6;14240:2;14235;14228:5;14224:14;14220:23;14210:33;;14156:93;;;:::o;14255:107::-;14299:8;14349:5;14343:4;14339:16;14318:37;;14255:107;;;;:::o;14368:393::-;14437:6;14487:1;14475:10;14471:18;14510:97;14540:66;14529:9;14510:97;:::i;:::-;14628:39;14658:8;14647:9;14628:39;:::i;:::-;14616:51;;14700:4;14696:9;14689:5;14685:21;14676:30;;14749:4;14739:8;14735:19;14728:5;14725:30;14715:40;;14444:317;;14368:393;;;;;:::o;14767:60::-;14795:3;14816:5;14809:12;;14767:60;;;:::o;14833:142::-;14883:9;14916:53;14934:34;14943:24;14961:5;14943:24;:::i;:::-;14934:34;:::i;:::-;14916:53;:::i;:::-;14903:66;;14833:142;;;:::o;14981:75::-;15024:3;15045:5;15038:12;;14981:75;;;:::o;15062:269::-;15172:39;15203:7;15172:39;:::i;:::-;15233:91;15282:41;15306:16;15282:41;:::i;:::-;15274:6;15267:4;15261:11;15233:91;:::i;:::-;15227:4;15220:105;15138:193;15062:269;;;:::o;15337:73::-;15382:3;15337:73;:::o;15416:189::-;15493:32;;:::i;:::-;15534:65;15592:6;15584;15578:4;15534:65;:::i;:::-;15469:136;15416:189;;:::o;15611:186::-;15671:120;15688:3;15681:5;15678:14;15671:120;;;15742:39;15779:1;15772:5;15742:39;:::i;:::-;15715:1;15708:5;15704:13;15695:22;;15671:120;;;15611:186;;:::o;15803:543::-;15904:2;15899:3;15896:11;15893:446;;;15938:38;15970:5;15938:38;:::i;:::-;16022:29;16040:10;16022:29;:::i;:::-;16012:8;16008:44;16205:2;16193:10;16190:18;16187:49;;;16226:8;16211:23;;16187:49;16249:80;16305:22;16323:3;16305:22;:::i;:::-;16295:8;16291:37;16278:11;16249:80;:::i;:::-;15908:431;;15893:446;15803:543;;;:::o;16352:117::-;16406:8;16456:5;16450:4;16446:16;16425:37;;16352:117;;;;:::o;16475:169::-;16519:6;16552:51;16600:1;16596:6;16588:5;16585:1;16581:13;16552:51;:::i;:::-;16548:56;16633:4;16627;16623:15;16613:25;;16526:118;16475:169;;;;:::o;16649:295::-;16725:4;16871:29;16896:3;16890:4;16871:29;:::i;:::-;16863:37;;16933:3;16930:1;16926:11;16920:4;16917:21;16909:29;;16649:295;;;;:::o;16949:1395::-;17066:37;17099:3;17066:37;:::i;:::-;17168:18;17160:6;17157:30;17154:56;;;17190:18;;:::i;:::-;17154:56;17234:38;17266:4;17260:11;17234:38;:::i;:::-;17319:67;17379:6;17371;17365:4;17319:67;:::i;:::-;17413:1;17437:4;17424:17;;17469:2;17461:6;17458:14;17486:1;17481:618;;;;18143:1;18160:6;18157:77;;;18209:9;18204:3;18200:19;18194:26;18185:35;;18157:77;18260:67;18320:6;18313:5;18260:67;:::i;:::-;18254:4;18247:81;18116:222;17451:887;;17481:618;17533:4;17529:9;17521:6;17517:22;17567:37;17599:4;17567:37;:::i;:::-;17626:1;17640:208;17654:7;17651:1;17648:14;17640:208;;;17733:9;17728:3;17724:19;17718:26;17710:6;17703:42;17784:1;17776:6;17772:14;17762:24;;17831:2;17820:9;17816:18;17803:31;;17677:4;17674:1;17670:12;17665:17;;17640:208;;;17876:6;17867:7;17864:19;17861:179;;;17934:9;17929:3;17925:19;17919:26;17977:48;18019:4;18011:6;18007:17;17996:9;17977:48;:::i;:::-;17969:6;17962:64;17884:156;17861:179;18086:1;18082;18074:6;18070:14;18066:22;18060:4;18053:36;17488:611;;;17451:887;;17041:1303;;;16949:1395;;:::o;18350:98::-;18401:6;18435:5;18429:12;18419:22;;18350:98;;;:::o;18454:168::-;18537:11;18571:6;18566:3;18559:19;18611:4;18606:3;18602:14;18587:29;;18454:168;;;;:::o;18628:373::-;18714:3;18742:38;18774:5;18742:38;:::i;:::-;18796:70;18859:6;18854:3;18796:70;:::i;:::-;18789:77;;18875:65;18933:6;18928:3;18921:4;18914:5;18910:16;18875:65;:::i;:::-;18965:29;18987:6;18965:29;:::i;:::-;18960:3;18956:39;18949:46;;18718:283;18628:373;;;;:::o;19007:640::-;19202:4;19240:3;19229:9;19225:19;19217:27;;19254:71;19322:1;19311:9;19307:17;19298:6;19254:71;:::i;:::-;19335:72;19403:2;19392:9;19388:18;19379:6;19335:72;:::i;:::-;19417;19485:2;19474:9;19470:18;19461:6;19417:72;:::i;:::-;19536:9;19530:4;19526:20;19521:2;19510:9;19506:18;19499:48;19564:76;19635:4;19626:6;19564:76;:::i;:::-;19556:84;;19007:640;;;;;;;:::o;19653:141::-;19709:5;19740:6;19734:13;19725:22;;19756:32;19782:5;19756:32;:::i;:::-;19653:141;;;;:::o;19800:349::-;19869:6;19918:2;19906:9;19897:7;19893:23;19889:32;19886:119;;;19924:79;;:::i;:::-;19886:119;20044:1;20069:63;20124:7;20115:6;20104:9;20100:22;20069:63;:::i;:::-;20059:73;;20015:127;19800:349;;;;:::o;20155:180::-;20203:77;20200:1;20193:88;20300:4;20297:1;20290:15;20324:4;20321:1;20314:15;20341:194;20381:4;20401:20;20419:1;20401:20;:::i;:::-;20396:25;;20435:20;20453:1;20435:20;:::i;:::-;20430:25;;20479:1;20476;20472:9;20464:17;;20503:1;20497:4;20494:11;20491:37;;;20508:18;;:::i;:::-;20491:37;20341:194;;;;:::o;20541:180::-;20589:77;20586:1;20579:88;20686:4;20683:1;20676:15;20710:4;20707:1;20700:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2049800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Items(uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"marketplace()": "2530",
								"mint(string)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setMarketplace(address)": "24782",
								"supportsInterface(bytes4)": "875",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "infinite",
								"tokenOfOwnerByIndex(address,uint256)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2463",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 515,
									"end": 1505,
									"name": "PUSH",
									"source": 21,
									"value": "80"
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "PUSH",
									"source": 21,
									"value": "40"
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 808,
									"end": 852,
									"name": "CALLVALUE",
									"source": 21
								},
								{
									"begin": 808,
									"end": 852,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 808,
									"end": 852,
									"name": "ISZERO",
									"source": 21
								},
								{
									"begin": 808,
									"end": 852,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 808,
									"end": 852,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 808,
									"end": 852,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 808,
									"end": 852,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 808,
									"end": 852,
									"name": "REVERT",
									"source": 21
								},
								{
									"begin": 808,
									"end": 852,
									"name": "tag",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 808,
									"end": 852,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 808,
									"end": 852,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "417274546F6B656E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "4152544B00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "9"
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 22,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 22
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 22,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 22,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 22,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 22,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 22,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 22
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 22,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 22,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 22,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 22,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 22,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 22
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 22,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 22,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 22
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 22
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 22,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 22
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 22,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 22,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 22
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 22
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 22,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 22,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 22,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 22,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 22
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 22,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 22,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 22,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 22
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 22,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 22
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 22
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 22,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 22,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 22
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 22,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 22,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 22
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 22,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 22
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 22
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 22
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 22
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 22
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 22
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 22
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 22
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 22
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 22
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 22,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 22,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 22,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 22,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 22,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 22,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 22,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 22,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 22,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 22,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 22
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 22,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 22
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 22,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 22,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 22,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 22,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 22,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 22,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 22
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 22
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 22,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 22,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 22,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 22,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 22
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 22
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 22,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 22,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 22,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 22
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 22
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 22
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 22,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 22
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 22,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 22,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 22,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 22,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 22
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 22
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 22,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 22
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 22,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 22
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 22,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 22
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 22
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 22
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 22,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 22,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 22,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 22
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 22
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 22
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 22,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 22,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 22,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 22
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 22
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 22,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 22,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 22
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 22,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 22
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 22,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 22,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 22,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 22
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 22
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 22
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 22
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 22
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 22,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 22
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 22,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 22
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 22
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 22,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 22,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 22
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 22
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 22
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 22,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 22,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 22
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 22
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 22
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 22
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 22
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 22
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 22,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 22
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 22
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 22,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 22
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 22,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 22
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 22
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 22
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 22
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 22
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 22
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 22,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 22
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 22
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 22,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 22
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 22
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 22,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 22,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 22
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 22
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 22
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 22
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 22
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 22,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 22
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 22
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "tag",
									"source": 21,
									"value": "9"
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "PUSH #[$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "PUSH [$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "CODECOPY",
									"source": 21
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 1505,
									"name": "RETURN",
									"source": 21
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204df2a811f704e8cc1921cda1ad0a7c5565b8e4810ff25070ee8d3429300036e264736f6c634300081a0033",
									".code": [
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "CALLVALUE",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "tag",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "E0"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "6352211E"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "ABC8C7AF"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "ABC8C7AF"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "B88D4FDE"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "19"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "C87B56DD"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "D85D3D27"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "21"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "E985E9C5"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "tag",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "6352211E"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "70A08231"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "14"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "73AD6C2D"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "95D89B41"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "A22CB465"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "17"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "tag",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "18160DDD"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "18160DDD"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "23B872DD"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "9"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "2F745C59"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "10"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "42842E0E"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "4F6CCCE7"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "tag",
											"source": 21,
											"value": "25"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "1FFC9A7"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "3"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "6FDDE03"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "81812FC"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "5"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "95EA7B3"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "6"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "17B47CC4"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "7"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "tag",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 515,
											"end": 1505,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 753,
											"end": 790,
											"name": "tag",
											"source": 21,
											"value": "7"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "38"
										},
										{
											"begin": 753,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "tag",
											"source": 21,
											"value": "47"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 753,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "tag",
											"source": 21,
											"value": "46"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "50"
										},
										{
											"begin": 753,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "tag",
											"source": 21,
											"value": "49"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "tag",
											"source": 21,
											"value": "15"
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "76"
										},
										{
											"begin": 1394,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "tag",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 1394,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "tag",
											"source": 21,
											"value": "79"
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "STOP",
											"source": 21
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 634,
											"end": 660,
											"name": "tag",
											"source": 21,
											"value": "18"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "89"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "90"
										},
										{
											"begin": 634,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "tag",
											"source": 21,
											"value": "89"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 634,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "tag",
											"source": 21,
											"value": "91"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "tag",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "96"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "97"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "38"
										},
										{
											"begin": 1195,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "tag",
											"source": 21,
											"value": "97"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "98"
										},
										{
											"begin": 1195,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "tag",
											"source": 21,
											"value": "96"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "99"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "35"
										},
										{
											"begin": 1195,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "tag",
											"source": 21,
											"value": "99"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "tag",
											"source": 21,
											"value": "21"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "CALLDATASIZE",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "102"
										},
										{
											"begin": 856,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "tag",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 856,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "tag",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "54"
										},
										{
											"begin": 856,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "tag",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "RETURN",
											"source": 21
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "PUSH",
											"source": 8,
											"value": "780E9D6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1571,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1638,
											"end": 1649,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1614,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 753,
											"end": 790,
											"name": "tag",
											"source": 21,
											"value": "48"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "C"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "EXP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "131"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "116"
										},
										{
											"begin": 753,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "tag",
											"source": 21,
											"value": "131"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "132"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "116"
										},
										{
											"begin": 753,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "tag",
											"source": 21,
											"value": "132"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "tag",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "tag",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "tag",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 753,
											"end": 790,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 753,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1856,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1872,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 8,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1895,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 1984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 1984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2325,
											"end": 2330,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 8,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2370,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2448,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2449,
											"end": 2454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2438,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "tag",
											"source": 21,
											"value": "81"
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1488,
											"name": "PUSH",
											"source": 21,
											"value": "B"
										},
										{
											"begin": 1477,
											"end": 1488,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "EXP",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 1477,
											"end": 1497,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1394,
											"end": 1502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 634,
											"end": 660,
											"name": "tag",
											"source": 21,
											"value": "90"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "PUSH",
											"source": 21,
											"value": "B"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "EXP",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 634,
											"end": 660,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 634,
											"end": 660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "tag",
											"source": 21,
											"value": "98"
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1260,
											"end": 1273,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "PUSH",
											"source": 21,
											"value": "C"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1381,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 1367,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 1385,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "182"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "116"
										},
										{
											"begin": 1360,
											"end": 1385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "tag",
											"source": 21,
											"value": "182"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "183"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "116"
										},
										{
											"begin": 1360,
											"end": 1385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "tag",
											"source": 21,
											"value": "183"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "184"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "184"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "tag",
											"source": 21,
											"value": "185"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "tag",
											"source": 21,
											"value": "186"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "186"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "tag",
											"source": 21,
											"value": "184"
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1360,
											"end": 1385,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1195,
											"end": 1390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "tag",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 905,
											"end": 912,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "188"
										},
										{
											"begin": 919,
											"end": 928,
											"name": "PUSH",
											"source": 21,
											"value": "A"
										},
										{
											"begin": 919,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "189"
										},
										{
											"begin": 919,
											"end": 940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 919,
											"end": 940,
											"name": "tag",
											"source": 21,
											"value": "188"
										},
										{
											"begin": 919,
											"end": 940,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 946,
											"end": 963,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "190"
										},
										{
											"begin": 966,
											"end": 975,
											"name": "PUSH",
											"source": 21,
											"value": "A"
										},
										{
											"begin": 966,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "191"
										},
										{
											"begin": 966,
											"end": 985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 966,
											"end": 985,
											"name": "tag",
											"source": 21,
											"value": "190"
										},
										{
											"begin": 966,
											"end": 985,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 946,
											"end": 985,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 946,
											"end": 985,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 991,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "192"
										},
										{
											"begin": 1001,
											"end": 1011,
											"name": "CALLER",
											"source": 21
										},
										{
											"begin": 1013,
											"end": 1022,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "193"
										},
										{
											"begin": 991,
											"end": 1023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 991,
											"end": 1023,
											"name": "tag",
											"source": 21,
											"value": "192"
										},
										{
											"begin": 991,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1029,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "194"
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "PUSH",
											"source": 21,
											"value": "B"
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "EXP",
											"source": 21
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1048,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1029,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 1029,
											"end": 1060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1029,
											"end": 1060,
											"name": "tag",
											"source": 21,
											"value": "194"
										},
										{
											"begin": 1029,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1130,
											"end": 1140,
											"name": "CALLER",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1153,
											"end": 1156,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1086,
											"end": 1163,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1072,
											"name": "PUSH",
											"source": 21,
											"value": "C"
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1083,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "EXP",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "195"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "196"
										},
										{
											"begin": 1067,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "tag",
											"source": 21,
											"value": "195"
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1067,
											"end": 1163,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1177,
											"end": 1186,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 1170,
											"end": 1186,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1170,
											"end": 1186,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1170,
											"end": 1186,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 856,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2653,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2681,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2656,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2656,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2728,
											"end": 2729,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2778,
											"end": 2785,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2746,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2820,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2875,
											"end": 2888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2890,
											"end": 2897,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2842,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2991,
											"end": 2998,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2954,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3039,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3055,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3959,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3937,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 3986,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3992,
											"end": 3999,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 4007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4886,
											"end": 4908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 4911,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4974,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4982,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4936,
											"end": 4983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4936,
											"end": 4983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5115,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5165,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5186,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5235,
											"end": 5246,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5214,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5219,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5231,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5335,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5347,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5524,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5554,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5559,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 5583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4705,
											"end": 5583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6120,
											"end": 6142,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6166,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 6145,
											"end": 6166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6212,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6543,
											"end": 6562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6575,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6576,
											"end": 6590,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 6565,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6638,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6613,
											"end": 6623,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 6602,
											"end": 6624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6737,
											"end": 6747,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6721,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6733,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6890,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6898,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6919,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 6909,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 6932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3548,
											"end": 3550,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 3538,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3538,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3599,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3577,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3580,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3588,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3644,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3626,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 22,
											"value": "324"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 22,
											"value": "326"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 22,
											"value": "327"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 22,
											"value": "328"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "387"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "327"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 22,
											"value": "387"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "388"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 22,
											"value": "388"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 22,
											"value": "329"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "390"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "328"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 22,
											"value": "390"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 22,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "392"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "393"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 22,
											"value": "393"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 22,
											"value": "392"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "394"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "329"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 22,
											"value": "394"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 22,
											"value": "330"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 22,
											"value": "331"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "397"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "330"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 22,
											"value": "397"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 22,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "399"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "331"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 22,
											"value": "399"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 22,
											"value": "332"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 22,
											"value": "333"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 22,
											"value": "334"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 22
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 22,
											"value": "335"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 22
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 22,
											"value": "336"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "405"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "332"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 22,
											"value": "405"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "406"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "333"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 22,
											"value": "406"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "407"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "334"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 22,
											"value": "407"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "408"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "335"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 22,
											"value": "408"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 22,
											"value": "35"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "410"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "336"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 22,
											"value": "410"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 22,
											"value": "337"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 22,
											"value": "338"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "413"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "337"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 22,
											"value": "413"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "414"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 22,
											"value": "414"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 22,
											"value": "339"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "416"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "338"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 22,
											"value": "416"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 22,
											"value": "38"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "418"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "419"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 22,
											"value": "419"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 22,
											"value": "418"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "420"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "339"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 22,
											"value": "420"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 22,
											"value": "340"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 22,
											"value": "341"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "423"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "340"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 22,
											"value": "423"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 22,
											"value": "342"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "425"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "341"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 22,
											"value": "425"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 22,
											"value": "41"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "427"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "342"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 22,
											"value": "427"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 22,
											"value": "343"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "429"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "341"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 22,
											"value": "429"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "430"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 22,
											"value": "430"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "432"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "343"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 22,
											"value": "432"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 22,
											"value": "44"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "434"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "435"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 22,
											"value": "435"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 22,
											"value": "434"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "436"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 22,
											"value": "436"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "437"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "339"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 22,
											"value": "437"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4783,
											"end": 4901,
											"name": "tag",
											"source": 22,
											"value": "345"
										},
										{
											"begin": 4783,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4870,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "439"
										},
										{
											"begin": 4888,
											"end": 4893,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 4870,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "337"
										},
										{
											"begin": 4870,
											"end": 4894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4870,
											"end": 4894,
											"name": "tag",
											"source": 22,
											"value": "439"
										},
										{
											"begin": 4870,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 4865,
											"end": 4868,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 4858,
											"end": 4895,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 4783,
											"end": 4901,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4783,
											"end": 4901,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4783,
											"end": 4901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 4907,
											"end": 5440,
											"name": "tag",
											"source": 22,
											"value": "50"
										},
										{
											"begin": 4907,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5076,
											"end": 5080,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5116,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 5103,
											"end": 5112,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 5099,
											"end": 5117,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 5091,
											"end": 5117,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 5091,
											"end": 5117,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 5127,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "441"
										},
										{
											"begin": 5195,
											"end": 5196,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 5180,
											"end": 5197,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 5171,
											"end": 5177,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 5127,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "345"
										},
										{
											"begin": 5127,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 5127,
											"end": 5198,
											"name": "tag",
											"source": 22,
											"value": "441"
										},
										{
											"begin": 5127,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5208,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "442"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5274,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 5261,
											"end": 5279,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 5252,
											"end": 5258,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 5208,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "342"
										},
										{
											"begin": 5208,
											"end": 5280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 5208,
											"end": 5280,
											"name": "tag",
											"source": 22,
											"value": "442"
										},
										{
											"begin": 5208,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5327,
											"end": 5336,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 5321,
											"end": 5325,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 5317,
											"end": 5337,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 5312,
											"end": 5314,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 5297,
											"end": 5315,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 5290,
											"end": 5338,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 5355,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "443"
										},
										{
											"begin": 5428,
											"end": 5432,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 5419,
											"end": 5425,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 5355,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "336"
										},
										{
											"begin": 5355,
											"end": 5433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 5355,
											"end": 5433,
											"name": "tag",
											"source": 22,
											"value": "443"
										},
										{
											"begin": 5355,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5347,
											"end": 5433,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 5347,
											"end": 5433,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4907,
											"end": 5440,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 4907,
											"end": 5440,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 4907,
											"end": 5440,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4907,
											"end": 5440,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4907,
											"end": 5440,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4907,
											"end": 5440,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 4907,
											"end": 5440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 5446,
											"end": 5668,
											"name": "tag",
											"source": 22,
											"value": "54"
										},
										{
											"begin": 5446,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5539,
											"end": 5543,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5579,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 5566,
											"end": 5575,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 5562,
											"end": 5580,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 5554,
											"end": 5580,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 5554,
											"end": 5580,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 5590,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "445"
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5656,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 5643,
											"end": 5660,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 5634,
											"end": 5640,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 5590,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "345"
										},
										{
											"begin": 5590,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 5590,
											"end": 5661,
											"name": "tag",
											"source": 22,
											"value": "445"
										},
										{
											"begin": 5590,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5446,
											"end": 5668,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 5446,
											"end": 5668,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 5446,
											"end": 5668,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 5446,
											"end": 5668,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 5446,
											"end": 5668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 5674,
											"end": 6293,
											"name": "tag",
											"source": 22,
											"value": "57"
										},
										{
											"begin": 5674,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5751,
											"end": 5757,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5765,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 5767,
											"end": 5773,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5818,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 5804,
											"end": 5813,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 5795,
											"end": 5802,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 5787,
											"end": 5819,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "447"
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "448"
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 5822,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "tag",
											"source": 22,
											"value": "448"
										},
										{
											"begin": 5822,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "tag",
											"source": 22,
											"value": "447"
										},
										{
											"begin": 5784,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5942,
											"end": 5943,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "449"
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 5992,
											"end": 6001,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 5988,
											"end": 6010,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 5967,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "tag",
											"source": 22,
											"value": "449"
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 5957,
											"end": 6020,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 5957,
											"end": 6020,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 5913,
											"end": 6030,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6069,
											"end": 6071,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 6095,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "450"
										},
										{
											"begin": 6140,
											"end": 6147,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 6131,
											"end": 6137,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 6120,
											"end": 6129,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 6116,
											"end": 6138,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6095,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 6095,
											"end": 6148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6095,
											"end": 6148,
											"name": "tag",
											"source": 22,
											"value": "450"
										},
										{
											"begin": 6095,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6085,
											"end": 6148,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 6085,
											"end": 6148,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6040,
											"end": 6158,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6197,
											"end": 6199,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 6223,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "451"
										},
										{
											"begin": 6268,
											"end": 6275,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 6259,
											"end": 6265,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 6248,
											"end": 6257,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 6244,
											"end": 6266,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6223,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "339"
										},
										{
											"begin": 6223,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6223,
											"end": 6276,
											"name": "tag",
											"source": 22,
											"value": "451"
										},
										{
											"begin": 6223,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6213,
											"end": 6276,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 6213,
											"end": 6276,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6168,
											"end": 6286,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 5674,
											"end": 6293,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 5674,
											"end": 6293,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 5674,
											"end": 6293,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 5674,
											"end": 6293,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 5674,
											"end": 6293,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 5674,
											"end": 6293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6299,
											"end": 6628,
											"name": "tag",
											"source": 22,
											"value": "76"
										},
										{
											"begin": 6299,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6409,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 6395,
											"end": 6404,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 6386,
											"end": 6393,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 6382,
											"end": 6405,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 6378,
											"end": 6410,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 6375,
											"end": 6494,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 6375,
											"end": 6494,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "453"
										},
										{
											"begin": 6375,
											"end": 6494,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 6413,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "454"
										},
										{
											"begin": 6413,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 6413,
											"end": 6492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6413,
											"end": 6492,
											"name": "tag",
											"source": 22,
											"value": "454"
										},
										{
											"begin": 6413,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6375,
											"end": 6494,
											"name": "tag",
											"source": 22,
											"value": "453"
										},
										{
											"begin": 6375,
											"end": 6494,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "455"
										},
										{
											"begin": 6603,
											"end": 6610,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 6594,
											"end": 6600,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 6583,
											"end": 6592,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 6579,
											"end": 6601,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 6558,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 6558,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6558,
											"end": 6611,
											"name": "tag",
											"source": 22,
											"value": "455"
										},
										{
											"begin": 6558,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6548,
											"end": 6611,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 6548,
											"end": 6611,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6504,
											"end": 6621,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6299,
											"end": 6628,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 6299,
											"end": 6628,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 6299,
											"end": 6628,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6299,
											"end": 6628,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6299,
											"end": 6628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6634,
											"end": 6750,
											"name": "tag",
											"source": 22,
											"value": "346"
										},
										{
											"begin": 6634,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6704,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "457"
										},
										{
											"begin": 6719,
											"end": 6724,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6704,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "330"
										},
										{
											"begin": 6704,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6704,
											"end": 6725,
											"name": "tag",
											"source": 22,
											"value": "457"
										},
										{
											"begin": 6704,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6697,
											"end": 6702,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6694,
											"end": 6726,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 6684,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "458"
										},
										{
											"begin": 6684,
											"end": 6744,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 6740,
											"end": 6741,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6738,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 6730,
											"end": 6742,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 6684,
											"end": 6744,
											"name": "tag",
											"source": 22,
											"value": "458"
										},
										{
											"begin": 6684,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6634,
											"end": 6750,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6634,
											"end": 6750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6756,
											"end": 6889,
											"name": "tag",
											"source": 22,
											"value": "347"
										},
										{
											"begin": 6756,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6799,
											"end": 6804,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 6837,
											"end": 6843,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6824,
											"end": 6844,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 6815,
											"end": 6844,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 6815,
											"end": 6844,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6853,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "460"
										},
										{
											"begin": 6877,
											"end": 6882,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 6853,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "346"
										},
										{
											"begin": 6853,
											"end": 6883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6853,
											"end": 6883,
											"name": "tag",
											"source": 22,
											"value": "460"
										},
										{
											"begin": 6853,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6756,
											"end": 6889,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 6756,
											"end": 6889,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 6756,
											"end": 6889,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6756,
											"end": 6889,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6756,
											"end": 6889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 6895,
											"end": 7363,
											"name": "tag",
											"source": 22,
											"value": "87"
										},
										{
											"begin": 6895,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6960,
											"end": 6966,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6974,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 7017,
											"end": 7019,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 7005,
											"end": 7014,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 6996,
											"end": 7003,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 6992,
											"end": 7015,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 6988,
											"end": 7020,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 6985,
											"end": 7104,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 6985,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "462"
										},
										{
											"begin": 6985,
											"end": 7104,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 7023,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "463"
										},
										{
											"begin": 7023,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 7023,
											"end": 7102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 7023,
											"end": 7102,
											"name": "tag",
											"source": 22,
											"value": "463"
										},
										{
											"begin": 7023,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 6985,
											"end": 7104,
											"name": "tag",
											"source": 22,
											"value": "462"
										},
										{
											"begin": 6985,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7143,
											"end": 7144,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "464"
										},
										{
											"begin": 7213,
											"end": 7220,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 7193,
											"end": 7202,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 7189,
											"end": 7211,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 7168,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 7168,
											"end": 7221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 7168,
											"end": 7221,
											"name": "tag",
											"source": 22,
											"value": "464"
										},
										{
											"begin": 7168,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7158,
											"end": 7221,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 7158,
											"end": 7221,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7114,
											"end": 7231,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7270,
											"end": 7272,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 7296,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "465"
										},
										{
											"begin": 7338,
											"end": 7345,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 7329,
											"end": 7335,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 7314,
											"end": 7336,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 7296,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "347"
										},
										{
											"begin": 7296,
											"end": 7346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 7296,
											"end": 7346,
											"name": "tag",
											"source": 22,
											"value": "465"
										},
										{
											"begin": 7296,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7286,
											"end": 7346,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 7286,
											"end": 7346,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7241,
											"end": 7356,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6895,
											"end": 7363,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 6895,
											"end": 7363,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6895,
											"end": 7363,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 6895,
											"end": 7363,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 6895,
											"end": 7363,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 6895,
											"end": 7363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 7369,
											"end": 7486,
											"name": "tag",
											"source": 22,
											"value": "348"
										},
										{
											"begin": 7369,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7478,
											"end": 7479,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7476,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 7492,
											"end": 7609,
											"name": "tag",
											"source": 22,
											"value": "349"
										},
										{
											"begin": 7492,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 7598,
											"end": 7599,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 7591,
											"end": 7603,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 7615,
											"end": 7795,
											"name": "tag",
											"source": 22,
											"value": "350"
										},
										{
											"begin": 7615,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7663,
											"end": 7740,
											"name": "PUSH",
											"source": 22,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7660,
											"end": 7661,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 7653,
											"end": 7741,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 7760,
											"end": 7764,
											"name": "PUSH",
											"source": 22,
											"value": "41"
										},
										{
											"begin": 7757,
											"end": 7758,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 7750,
											"end": 7765,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 7784,
											"end": 7788,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 7781,
											"end": 7782,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 7774,
											"end": 7789,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 7801,
											"end": 8082,
											"name": "tag",
											"source": 22,
											"value": "351"
										},
										{
											"begin": 7801,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7884,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "470"
										},
										{
											"begin": 7906,
											"end": 7910,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 7884,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "335"
										},
										{
											"begin": 7884,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 7884,
											"end": 7911,
											"name": "tag",
											"source": 22,
											"value": "470"
										},
										{
											"begin": 7884,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7876,
											"end": 7882,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 7872,
											"end": 7912,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8014,
											"end": 8020,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8002,
											"end": 8012,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 7999,
											"end": 8021,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 7978,
											"end": 7996,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7966,
											"end": 7976,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 7963,
											"end": 7997,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 7960,
											"end": 8022,
											"name": "OR",
											"source": 22
										},
										{
											"begin": 7957,
											"end": 8045,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 7957,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "471"
										},
										{
											"begin": 7957,
											"end": 8045,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "472"
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "350"
										},
										{
											"begin": 8025,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "tag",
											"source": 22,
											"value": "472"
										},
										{
											"begin": 8025,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 7957,
											"end": 8045,
											"name": "tag",
											"source": 22,
											"value": "471"
										},
										{
											"begin": 7957,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8065,
											"end": 8075,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 8061,
											"end": 8063,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8076,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 7844,
											"end": 8082,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7801,
											"end": 8082,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7801,
											"end": 8082,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 7801,
											"end": 8082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8088,
											"end": 8217,
											"name": "tag",
											"source": 22,
											"value": "352"
										},
										{
											"begin": 8088,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8122,
											"end": 8128,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8169,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "474"
										},
										{
											"begin": 8149,
											"end": 8169,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "324"
										},
										{
											"begin": 8149,
											"end": 8169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8149,
											"end": 8169,
											"name": "tag",
											"source": 22,
											"value": "474"
										},
										{
											"begin": 8149,
											"end": 8169,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8139,
											"end": 8169,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 8139,
											"end": 8169,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8178,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "475"
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 8198,
											"end": 8204,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 8178,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "351"
										},
										{
											"begin": 8178,
											"end": 8211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8178,
											"end": 8211,
											"name": "tag",
											"source": 22,
											"value": "475"
										},
										{
											"begin": 8178,
											"end": 8211,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8088,
											"end": 8217,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 8088,
											"end": 8217,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 8088,
											"end": 8217,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8088,
											"end": 8217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8223,
											"end": 8530,
											"name": "tag",
											"source": 22,
											"value": "353"
										},
										{
											"begin": 8223,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8284,
											"end": 8288,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 8374,
											"end": 8392,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8366,
											"end": 8372,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 8363,
											"end": 8393,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 8360,
											"end": 8416,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 8360,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "477"
										},
										{
											"begin": 8360,
											"end": 8416,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "478"
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "350"
										},
										{
											"begin": 8396,
											"end": 8414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "tag",
											"source": 22,
											"value": "478"
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8360,
											"end": 8416,
											"name": "tag",
											"source": 22,
											"value": "477"
										},
										{
											"begin": 8360,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8434,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "479"
										},
										{
											"begin": 8456,
											"end": 8462,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 8434,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "335"
										},
										{
											"begin": 8434,
											"end": 8463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8434,
											"end": 8463,
											"name": "tag",
											"source": 22,
											"value": "479"
										},
										{
											"begin": 8434,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8426,
											"end": 8463,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 8426,
											"end": 8463,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8518,
											"end": 8522,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 8512,
											"end": 8516,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8508,
											"end": 8523,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8500,
											"end": 8523,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 8500,
											"end": 8523,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8223,
											"end": 8530,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 8223,
											"end": 8530,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 8223,
											"end": 8530,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8223,
											"end": 8530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8536,
											"end": 8684,
											"name": "tag",
											"source": 22,
											"value": "354"
										},
										{
											"begin": 8536,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8634,
											"end": 8640,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 8629,
											"end": 8632,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8624,
											"end": 8627,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 8611,
											"end": 8641,
											"name": "CALLDATACOPY",
											"source": 22
										},
										{
											"begin": 8675,
											"end": 8676,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 8657,
											"end": 8673,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8650,
											"end": 8677,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 8536,
											"end": 8684,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8536,
											"end": 8684,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8536,
											"end": 8684,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8536,
											"end": 8684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8690,
											"end": 9113,
											"name": "tag",
											"source": 22,
											"value": "355"
										},
										{
											"begin": 8690,
											"end": 9113,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8767,
											"end": 8772,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 8792,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "482"
										},
										{
											"begin": 8808,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "483"
										},
										{
											"begin": 8849,
											"end": 8855,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 8808,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "353"
										},
										{
											"begin": 8808,
											"end": 8856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8808,
											"end": 8856,
											"name": "tag",
											"source": 22,
											"value": "483"
										},
										{
											"begin": 8808,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8792,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "352"
										},
										{
											"begin": 8792,
											"end": 8857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8792,
											"end": 8857,
											"name": "tag",
											"source": 22,
											"value": "482"
										},
										{
											"begin": 8792,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8783,
											"end": 8857,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 8783,
											"end": 8857,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8880,
											"end": 8886,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 8873,
											"end": 8878,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8866,
											"end": 8887,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 8918,
											"end": 8922,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 8911,
											"end": 8916,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8956,
											"end": 8959,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 8947,
											"end": 8953,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 8942,
											"end": 8945,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 8938,
											"end": 8954,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 8935,
											"end": 8960,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 8932,
											"end": 9044,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 8932,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "484"
										},
										{
											"begin": 8932,
											"end": 9044,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 8963,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "485"
										},
										{
											"begin": 8963,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "349"
										},
										{
											"begin": 8963,
											"end": 9042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 8963,
											"end": 9042,
											"name": "tag",
											"source": 22,
											"value": "485"
										},
										{
											"begin": 8963,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8932,
											"end": 9044,
											"name": "tag",
											"source": 22,
											"value": "484"
										},
										{
											"begin": 8932,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9053,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "486"
										},
										{
											"begin": 9100,
											"end": 9106,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 9095,
											"end": 9098,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 9090,
											"end": 9093,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 9053,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "354"
										},
										{
											"begin": 9053,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 9053,
											"end": 9107,
											"name": "tag",
											"source": 22,
											"value": "486"
										},
										{
											"begin": 9053,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 8773,
											"end": 9113,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8690,
											"end": 9113,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 8690,
											"end": 9113,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 8690,
											"end": 9113,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8690,
											"end": 9113,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8690,
											"end": 9113,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 8690,
											"end": 9113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 9132,
											"end": 9470,
											"name": "tag",
											"source": 22,
											"value": "356"
										},
										{
											"begin": 9132,
											"end": 9470,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9187,
											"end": 9192,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 9236,
											"end": 9239,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 9229,
											"end": 9233,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 9221,
											"end": 9227,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 9217,
											"end": 9234,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9213,
											"end": 9240,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 9203,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "488"
										},
										{
											"begin": 9203,
											"end": 9325,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 9244,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "489"
										},
										{
											"begin": 9244,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "348"
										},
										{
											"begin": 9244,
											"end": 9323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 9244,
											"end": 9323,
											"name": "tag",
											"source": 22,
											"value": "489"
										},
										{
											"begin": 9244,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9203,
											"end": 9325,
											"name": "tag",
											"source": 22,
											"value": "488"
										},
										{
											"begin": 9203,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9361,
											"end": 9367,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 9348,
											"end": 9368,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 9386,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "490"
										},
										{
											"begin": 9460,
											"end": 9463,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 9452,
											"end": 9458,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 9445,
											"end": 9449,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 9437,
											"end": 9443,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 9433,
											"end": 9450,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9386,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "355"
										},
										{
											"begin": 9386,
											"end": 9464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 9386,
											"end": 9464,
											"name": "tag",
											"source": 22,
											"value": "490"
										},
										{
											"begin": 9386,
											"end": 9464,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9377,
											"end": 9464,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 9377,
											"end": 9464,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9193,
											"end": 9470,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9132,
											"end": 9470,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 9132,
											"end": 9470,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 9132,
											"end": 9470,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9132,
											"end": 9470,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9132,
											"end": 9470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 9476,
											"end": 10419,
											"name": "tag",
											"source": 22,
											"value": "94"
										},
										{
											"begin": 9476,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9571,
											"end": 9577,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 9579,
											"end": 9585,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 9587,
											"end": 9593,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 9595,
											"end": 9601,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 9644,
											"end": 9647,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 9623,
											"end": 9630,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 9619,
											"end": 9642,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 9615,
											"end": 9648,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 9612,
											"end": 9732,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 9612,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "492"
										},
										{
											"begin": 9612,
											"end": 9732,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 9651,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "493"
										},
										{
											"begin": 9651,
											"end": 9730,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 9651,
											"end": 9730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 9651,
											"end": 9730,
											"name": "tag",
											"source": 22,
											"value": "493"
										},
										{
											"begin": 9651,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9612,
											"end": 9732,
											"name": "tag",
											"source": 22,
											"value": "492"
										},
										{
											"begin": 9612,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 9796,
											"end": 9849,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "494"
										},
										{
											"begin": 9841,
											"end": 9848,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 9832,
											"end": 9838,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 9821,
											"end": 9830,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 9817,
											"end": 9839,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9796,
											"end": 9849,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 9796,
											"end": 9849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 9796,
											"end": 9849,
											"name": "tag",
											"source": 22,
											"value": "494"
										},
										{
											"begin": 9796,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9786,
											"end": 9849,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 9786,
											"end": 9849,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9742,
											"end": 9859,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9898,
											"end": 9900,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 9924,
											"end": 9977,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "495"
										},
										{
											"begin": 9969,
											"end": 9976,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 9949,
											"end": 9958,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 9945,
											"end": 9967,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 9924,
											"end": 9977,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 9924,
											"end": 9977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 9924,
											"end": 9977,
											"name": "tag",
											"source": 22,
											"value": "495"
										},
										{
											"begin": 9924,
											"end": 9977,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 9914,
											"end": 9977,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 9914,
											"end": 9977,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9869,
											"end": 9987,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10026,
											"end": 10028,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "496"
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 10088,
											"end": 10094,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 10077,
											"end": 10086,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 10073,
											"end": 10095,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10052,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "339"
										},
										{
											"begin": 10052,
											"end": 10105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10052,
											"end": 10105,
											"name": "tag",
											"source": 22,
											"value": "496"
										},
										{
											"begin": 10052,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10042,
											"end": 10105,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 10042,
											"end": 10105,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9997,
											"end": 10115,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10182,
											"end": 10184,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 10171,
											"end": 10180,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10154,
											"end": 10186,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 10213,
											"end": 10231,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10205,
											"end": 10211,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 10202,
											"end": 10232,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 10199,
											"end": 10316,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 10199,
											"end": 10316,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "497"
										},
										{
											"begin": 10199,
											"end": 10316,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 10235,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "498"
										},
										{
											"begin": 10235,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "326"
										},
										{
											"begin": 10235,
											"end": 10314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10235,
											"end": 10314,
											"name": "tag",
											"source": 22,
											"value": "498"
										},
										{
											"begin": 10235,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10199,
											"end": 10316,
											"name": "tag",
											"source": 22,
											"value": "497"
										},
										{
											"begin": 10199,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10340,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "499"
										},
										{
											"begin": 10394,
											"end": 10401,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 10385,
											"end": 10391,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 10374,
											"end": 10383,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 10370,
											"end": 10392,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10340,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "356"
										},
										{
											"begin": 10340,
											"end": 10402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10340,
											"end": 10402,
											"name": "tag",
											"source": 22,
											"value": "499"
										},
										{
											"begin": 10340,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10330,
											"end": 10402,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 10330,
											"end": 10402,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10125,
											"end": 10412,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9476,
											"end": 10419,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 9476,
											"end": 10419,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": 9476,
											"end": 10419,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 9476,
											"end": 10419,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 9476,
											"end": 10419,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9476,
											"end": 10419,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 9476,
											"end": 10419,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 9476,
											"end": 10419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10425,
											"end": 10733,
											"name": "tag",
											"source": 22,
											"value": "357"
										},
										{
											"begin": 10425,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10487,
											"end": 10491,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 10577,
											"end": 10595,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10569,
											"end": 10575,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 10566,
											"end": 10596,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 10563,
											"end": 10619,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 10563,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "501"
										},
										{
											"begin": 10563,
											"end": 10619,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "502"
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "350"
										},
										{
											"begin": 10599,
											"end": 10617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "tag",
											"source": 22,
											"value": "502"
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10563,
											"end": 10619,
											"name": "tag",
											"source": 22,
											"value": "501"
										},
										{
											"begin": 10563,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10637,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "503"
										},
										{
											"begin": 10659,
											"end": 10665,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 10637,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "335"
										},
										{
											"begin": 10637,
											"end": 10666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10637,
											"end": 10666,
											"name": "tag",
											"source": 22,
											"value": "503"
										},
										{
											"begin": 10637,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10629,
											"end": 10666,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 10629,
											"end": 10666,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10721,
											"end": 10725,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 10715,
											"end": 10719,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 10711,
											"end": 10726,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10703,
											"end": 10726,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 10703,
											"end": 10726,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10425,
											"end": 10733,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 10425,
											"end": 10733,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 10425,
											"end": 10733,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10425,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10739,
											"end": 11164,
											"name": "tag",
											"source": 22,
											"value": "358"
										},
										{
											"begin": 10739,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10817,
											"end": 10822,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "505"
										},
										{
											"begin": 10858,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "506"
										},
										{
											"begin": 10900,
											"end": 10906,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 10858,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "357"
										},
										{
											"begin": 10858,
											"end": 10907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10858,
											"end": 10907,
											"name": "tag",
											"source": 22,
											"value": "506"
										},
										{
											"begin": 10858,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10842,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "352"
										},
										{
											"begin": 10842,
											"end": 10908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 10842,
											"end": 10908,
											"name": "tag",
											"source": 22,
											"value": "505"
										},
										{
											"begin": 10842,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10833,
											"end": 10908,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 10833,
											"end": 10908,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10931,
											"end": 10937,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 10924,
											"end": 10929,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 10917,
											"end": 10938,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 10969,
											"end": 10973,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 10962,
											"end": 10967,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 10958,
											"end": 10974,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 11007,
											"end": 11010,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 10998,
											"end": 11004,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 10993,
											"end": 10996,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 10989,
											"end": 11005,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 10986,
											"end": 11011,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 10983,
											"end": 11095,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 10983,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "507"
										},
										{
											"begin": 10983,
											"end": 11095,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "508"
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "349"
										},
										{
											"begin": 11014,
											"end": 11093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "tag",
											"source": 22,
											"value": "508"
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10983,
											"end": 11095,
											"name": "tag",
											"source": 22,
											"value": "507"
										},
										{
											"begin": 10983,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11104,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "509"
										},
										{
											"begin": 11151,
											"end": 11157,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 11146,
											"end": 11149,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 11141,
											"end": 11144,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 11104,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "354"
										},
										{
											"begin": 11104,
											"end": 11158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11104,
											"end": 11158,
											"name": "tag",
											"source": 22,
											"value": "509"
										},
										{
											"begin": 11104,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 10823,
											"end": 11164,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10739,
											"end": 11164,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 10739,
											"end": 11164,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 10739,
											"end": 11164,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10739,
											"end": 11164,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10739,
											"end": 11164,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 10739,
											"end": 11164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11184,
											"end": 11524,
											"name": "tag",
											"source": 22,
											"value": "359"
										},
										{
											"begin": 11184,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11240,
											"end": 11245,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11292,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 11282,
											"end": 11286,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 11274,
											"end": 11280,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 11270,
											"end": 11287,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 11266,
											"end": 11293,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 11256,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "511"
										},
										{
											"begin": 11256,
											"end": 11378,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 11297,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "512"
										},
										{
											"begin": 11297,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "348"
										},
										{
											"begin": 11297,
											"end": 11376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11297,
											"end": 11376,
											"name": "tag",
											"source": 22,
											"value": "512"
										},
										{
											"begin": 11297,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11256,
											"end": 11378,
											"name": "tag",
											"source": 22,
											"value": "511"
										},
										{
											"begin": 11256,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11414,
											"end": 11420,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 11401,
											"end": 11421,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 11439,
											"end": 11518,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "513"
										},
										{
											"begin": 11514,
											"end": 11517,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 11506,
											"end": 11512,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 11499,
											"end": 11503,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 11491,
											"end": 11497,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 11487,
											"end": 11504,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 11439,
											"end": 11518,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "358"
										},
										{
											"begin": 11439,
											"end": 11518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11439,
											"end": 11518,
											"name": "tag",
											"source": 22,
											"value": "513"
										},
										{
											"begin": 11439,
											"end": 11518,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11430,
											"end": 11518,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 11430,
											"end": 11518,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11246,
											"end": 11524,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11184,
											"end": 11524,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 11184,
											"end": 11524,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 11184,
											"end": 11524,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11184,
											"end": 11524,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11184,
											"end": 11524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11530,
											"end": 12039,
											"name": "tag",
											"source": 22,
											"value": "102"
										},
										{
											"begin": 11530,
											"end": 12039,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11599,
											"end": 11605,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 11648,
											"end": 11650,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 11636,
											"end": 11645,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 11627,
											"end": 11634,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 11623,
											"end": 11646,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 11619,
											"end": 11651,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 11616,
											"end": 11735,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 11616,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "515"
										},
										{
											"begin": 11616,
											"end": 11735,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 11654,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "516"
										},
										{
											"begin": 11654,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 11654,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11654,
											"end": 11733,
											"name": "tag",
											"source": 22,
											"value": "516"
										},
										{
											"begin": 11654,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11616,
											"end": 11735,
											"name": "tag",
											"source": 22,
											"value": "515"
										},
										{
											"begin": 11616,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11802,
											"end": 11803,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 11791,
											"end": 11800,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 11787,
											"end": 11804,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 11774,
											"end": 11805,
											"name": "CALLDATALOAD",
											"source": 22
										},
										{
											"begin": 11832,
											"end": 11850,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11824,
											"end": 11830,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 11821,
											"end": 11851,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 11818,
											"end": 11935,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 11818,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "517"
										},
										{
											"begin": 11818,
											"end": 11935,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 11854,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "518"
										},
										{
											"begin": 11854,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "326"
										},
										{
											"begin": 11854,
											"end": 11933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11854,
											"end": 11933,
											"name": "tag",
											"source": 22,
											"value": "518"
										},
										{
											"begin": 11854,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11818,
											"end": 11935,
											"name": "tag",
											"source": 22,
											"value": "517"
										},
										{
											"begin": 11818,
											"end": 11935,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11959,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "519"
										},
										{
											"begin": 12014,
											"end": 12021,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 12005,
											"end": 12011,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 11994,
											"end": 12003,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 11990,
											"end": 12012,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 11959,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "359"
										},
										{
											"begin": 11959,
											"end": 12022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 11959,
											"end": 12022,
											"name": "tag",
											"source": 22,
											"value": "519"
										},
										{
											"begin": 11959,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 11949,
											"end": 12022,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 11949,
											"end": 12022,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11745,
											"end": 12032,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11530,
											"end": 12039,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 11530,
											"end": 12039,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 11530,
											"end": 12039,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11530,
											"end": 12039,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 11530,
											"end": 12039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 12045,
											"end": 12519,
											"name": "tag",
											"source": 22,
											"value": "107"
										},
										{
											"begin": 12045,
											"end": 12519,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12113,
											"end": 12119,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12127,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 12170,
											"end": 12172,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 12158,
											"end": 12167,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 12149,
											"end": 12156,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 12145,
											"end": 12168,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 12141,
											"end": 12173,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 12138,
											"end": 12257,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 12138,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "521"
										},
										{
											"begin": 12138,
											"end": 12257,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 12176,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "522"
										},
										{
											"begin": 12176,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 12176,
											"end": 12255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 12176,
											"end": 12255,
											"name": "tag",
											"source": 22,
											"value": "522"
										},
										{
											"begin": 12176,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12138,
											"end": 12257,
											"name": "tag",
											"source": 22,
											"value": "521"
										},
										{
											"begin": 12138,
											"end": 12257,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12296,
											"end": 12297,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 12321,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "523"
										},
										{
											"begin": 12366,
											"end": 12373,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 12357,
											"end": 12363,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12346,
											"end": 12355,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 12342,
											"end": 12364,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12321,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 12321,
											"end": 12374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 12321,
											"end": 12374,
											"name": "tag",
											"source": 22,
											"value": "523"
										},
										{
											"begin": 12321,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12311,
											"end": 12374,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 12311,
											"end": 12374,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12267,
											"end": 12384,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12423,
											"end": 12425,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 12449,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "524"
										},
										{
											"begin": 12494,
											"end": 12501,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 12485,
											"end": 12491,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12474,
											"end": 12483,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 12470,
											"end": 12492,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 12449,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "344"
										},
										{
											"begin": 12449,
											"end": 12502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 12449,
											"end": 12502,
											"name": "tag",
											"source": 22,
											"value": "524"
										},
										{
											"begin": 12449,
											"end": 12502,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12439,
											"end": 12502,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 12439,
											"end": 12502,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12394,
											"end": 12512,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12045,
											"end": 12519,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 12045,
											"end": 12519,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12045,
											"end": 12519,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 12045,
											"end": 12519,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 12045,
											"end": 12519,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12045,
											"end": 12519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 12525,
											"end": 12705,
											"name": "tag",
											"source": 22,
											"value": "360"
										},
										{
											"begin": 12525,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12573,
											"end": 12650,
											"name": "PUSH",
											"source": 22,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12570,
											"end": 12571,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 12563,
											"end": 12651,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 12670,
											"end": 12674,
											"name": "PUSH",
											"source": 22,
											"value": "22"
										},
										{
											"begin": 12667,
											"end": 12668,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 12660,
											"end": 12675,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 12694,
											"end": 12698,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 12691,
											"end": 12692,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 12684,
											"end": 12699,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 12711,
											"end": 13031,
											"name": "tag",
											"source": 22,
											"value": "116"
										},
										{
											"begin": 12711,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12755,
											"end": 12761,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 12792,
											"end": 12793,
											"name": "PUSH",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 12786,
											"end": 12790,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12782,
											"end": 12794,
											"name": "DIV",
											"source": 22
										},
										{
											"begin": 12772,
											"end": 12794,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 12772,
											"end": 12794,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12839,
											"end": 12840,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 12833,
											"end": 12837,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12829,
											"end": 12841,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 12860,
											"end": 12878,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 12850,
											"end": 12931,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "527"
										},
										{
											"begin": 12850,
											"end": 12931,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 12916,
											"end": 12920,
											"name": "PUSH",
											"source": 22,
											"value": "7F"
										},
										{
											"begin": 12908,
											"end": 12914,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12904,
											"end": 12921,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 12894,
											"end": 12921,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 12894,
											"end": 12921,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12850,
											"end": 12931,
											"name": "tag",
											"source": 22,
											"value": "527"
										},
										{
											"begin": 12850,
											"end": 12931,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12978,
											"end": 12980,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 12970,
											"end": 12976,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 12967,
											"end": 12981,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 12947,
											"end": 12965,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 12944,
											"end": 12982,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 12941,
											"end": 13025,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "528"
										},
										{
											"begin": 12941,
											"end": 13025,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "529"
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "360"
										},
										{
											"begin": 12997,
											"end": 13015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "tag",
											"source": 22,
											"value": "529"
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12941,
											"end": 13025,
											"name": "tag",
											"source": 22,
											"value": "528"
										},
										{
											"begin": 12941,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 12762,
											"end": 13031,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12711,
											"end": 13031,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 12711,
											"end": 13031,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 12711,
											"end": 13031,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 12711,
											"end": 13031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13037,
											"end": 13479,
											"name": "tag",
											"source": 22,
											"value": "145"
										},
										{
											"begin": 13037,
											"end": 13479,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13186,
											"end": 13190,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 13224,
											"end": 13226,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 13213,
											"end": 13222,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 13209,
											"end": 13227,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13201,
											"end": 13227,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 13201,
											"end": 13227,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 13237,
											"end": 13308,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "531"
										},
										{
											"begin": 13305,
											"end": 13306,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 13294,
											"end": 13303,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 13290,
											"end": 13307,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13281,
											"end": 13287,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 13237,
											"end": 13308,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "342"
										},
										{
											"begin": 13237,
											"end": 13308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13237,
											"end": 13308,
											"name": "tag",
											"source": 22,
											"value": "531"
										},
										{
											"begin": 13237,
											"end": 13308,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13318,
											"end": 13390,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "532"
										},
										{
											"begin": 13386,
											"end": 13388,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 13375,
											"end": 13384,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13362,
											"end": 13368,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 13318,
											"end": 13390,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "345"
										},
										{
											"begin": 13318,
											"end": 13390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13318,
											"end": 13390,
											"name": "tag",
											"source": 22,
											"value": "532"
										},
										{
											"begin": 13318,
											"end": 13390,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13400,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "533"
										},
										{
											"begin": 13468,
											"end": 13470,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 13457,
											"end": 13466,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 13453,
											"end": 13471,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13444,
											"end": 13450,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 13400,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "342"
										},
										{
											"begin": 13400,
											"end": 13472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13400,
											"end": 13472,
											"name": "tag",
											"source": 22,
											"value": "533"
										},
										{
											"begin": 13400,
											"end": 13472,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13037,
											"end": 13479,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 13037,
											"end": 13479,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 13037,
											"end": 13479,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 13037,
											"end": 13479,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 13037,
											"end": 13479,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 13037,
											"end": 13479,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 13037,
											"end": 13479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13485,
											"end": 13817,
											"name": "tag",
											"source": 22,
											"value": "150"
										},
										{
											"begin": 13485,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13606,
											"end": 13610,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 13644,
											"end": 13646,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 13633,
											"end": 13642,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 13629,
											"end": 13647,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13621,
											"end": 13647,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 13621,
											"end": 13647,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 13657,
											"end": 13728,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "535"
										},
										{
											"begin": 13725,
											"end": 13726,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 13714,
											"end": 13723,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 13710,
											"end": 13727,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13701,
											"end": 13707,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 13657,
											"end": 13728,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "342"
										},
										{
											"begin": 13657,
											"end": 13728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13657,
											"end": 13728,
											"name": "tag",
											"source": 22,
											"value": "535"
										},
										{
											"begin": 13657,
											"end": 13728,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13738,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "536"
										},
										{
											"begin": 13806,
											"end": 13808,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 13795,
											"end": 13804,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 13791,
											"end": 13809,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 13782,
											"end": 13788,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 13738,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "345"
										},
										{
											"begin": 13738,
											"end": 13810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13738,
											"end": 13810,
											"name": "tag",
											"source": 22,
											"value": "536"
										},
										{
											"begin": 13738,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13485,
											"end": 13817,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 13485,
											"end": 13817,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 13485,
											"end": 13817,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 13485,
											"end": 13817,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 13485,
											"end": 13817,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 13485,
											"end": 13817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 13823,
											"end": 14003,
											"name": "tag",
											"source": 22,
											"value": "159"
										},
										{
											"begin": 13823,
											"end": 14003,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 13871,
											"end": 13948,
											"name": "PUSH",
											"source": 22,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13868,
											"end": 13869,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 13861,
											"end": 13949,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 13968,
											"end": 13972,
											"name": "PUSH",
											"source": 22,
											"value": "32"
										},
										{
											"begin": 13965,
											"end": 13966,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 13958,
											"end": 13973,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 13992,
											"end": 13996,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 13989,
											"end": 13990,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 13982,
											"end": 13997,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 14009,
											"end": 14150,
											"name": "tag",
											"source": 22,
											"value": "361"
										},
										{
											"begin": 14009,
											"end": 14150,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14058,
											"end": 14062,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14081,
											"end": 14084,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 14073,
											"end": 14084,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14073,
											"end": 14084,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14104,
											"end": 14107,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 14101,
											"end": 14102,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14094,
											"end": 14108,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 14138,
											"end": 14142,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 14135,
											"end": 14136,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14125,
											"end": 14143,
											"name": "KECCAK256",
											"source": 22
										},
										{
											"begin": 14117,
											"end": 14143,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14117,
											"end": 14143,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14009,
											"end": 14150,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 14009,
											"end": 14150,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14009,
											"end": 14150,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14009,
											"end": 14150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14156,
											"end": 14249,
											"name": "tag",
											"source": 22,
											"value": "362"
										},
										{
											"begin": 14156,
											"end": 14249,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14193,
											"end": 14199,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14240,
											"end": 14242,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 14235,
											"end": 14237,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 14228,
											"end": 14233,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 14224,
											"end": 14238,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 14220,
											"end": 14243,
											"name": "DIV",
											"source": 22
										},
										{
											"begin": 14210,
											"end": 14243,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14210,
											"end": 14243,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14156,
											"end": 14249,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 14156,
											"end": 14249,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14156,
											"end": 14249,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14156,
											"end": 14249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14255,
											"end": 14362,
											"name": "tag",
											"source": 22,
											"value": "363"
										},
										{
											"begin": 14255,
											"end": 14362,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14299,
											"end": 14307,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14349,
											"end": 14354,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 14343,
											"end": 14347,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 14339,
											"end": 14355,
											"name": "SHL",
											"source": 22
										},
										{
											"begin": 14318,
											"end": 14355,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14318,
											"end": 14355,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14255,
											"end": 14362,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 14255,
											"end": 14362,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 14255,
											"end": 14362,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14255,
											"end": 14362,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14255,
											"end": 14362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14368,
											"end": 14761,
											"name": "tag",
											"source": 22,
											"value": "364"
										},
										{
											"begin": 14368,
											"end": 14761,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14437,
											"end": 14443,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14487,
											"end": 14488,
											"name": "PUSH",
											"source": 22,
											"value": "8"
										},
										{
											"begin": 14475,
											"end": 14485,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 14471,
											"end": 14489,
											"name": "MUL",
											"source": 22
										},
										{
											"begin": 14510,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "542"
										},
										{
											"begin": 14540,
											"end": 14606,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14529,
											"end": 14538,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 14510,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "363"
										},
										{
											"begin": 14510,
											"end": 14607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14510,
											"end": 14607,
											"name": "tag",
											"source": 22,
											"value": "542"
										},
										{
											"begin": 14510,
											"end": 14607,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14628,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "543"
										},
										{
											"begin": 14658,
											"end": 14666,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 14647,
											"end": 14656,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 14628,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "363"
										},
										{
											"begin": 14628,
											"end": 14667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14628,
											"end": 14667,
											"name": "tag",
											"source": 22,
											"value": "543"
										},
										{
											"begin": 14628,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14616,
											"end": 14667,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": 14616,
											"end": 14667,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14700,
											"end": 14704,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 14696,
											"end": 14705,
											"name": "NOT",
											"source": 22
										},
										{
											"begin": 14689,
											"end": 14694,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 14685,
											"end": 14706,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 14676,
											"end": 14706,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 14676,
											"end": 14706,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14749,
											"end": 14753,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 14739,
											"end": 14747,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 14735,
											"end": 14754,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 14728,
											"end": 14733,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 14725,
											"end": 14755,
											"name": "OR",
											"source": 22
										},
										{
											"begin": 14715,
											"end": 14755,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 14715,
											"end": 14755,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14444,
											"end": 14761,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14444,
											"end": 14761,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14368,
											"end": 14761,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 14368,
											"end": 14761,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 14368,
											"end": 14761,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14368,
											"end": 14761,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14368,
											"end": 14761,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14368,
											"end": 14761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14767,
											"end": 14827,
											"name": "tag",
											"source": 22,
											"value": "365"
										},
										{
											"begin": 14767,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14795,
											"end": 14798,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14816,
											"end": 14821,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 14809,
											"end": 14821,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14809,
											"end": 14821,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14767,
											"end": 14827,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 14767,
											"end": 14827,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14767,
											"end": 14827,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14767,
											"end": 14827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14833,
											"end": 14975,
											"name": "tag",
											"source": 22,
											"value": "366"
										},
										{
											"begin": 14833,
											"end": 14975,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14883,
											"end": 14892,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 14916,
											"end": 14969,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "546"
										},
										{
											"begin": 14934,
											"end": 14968,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "547"
										},
										{
											"begin": 14943,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "548"
										},
										{
											"begin": 14961,
											"end": 14966,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 14943,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "337"
										},
										{
											"begin": 14943,
											"end": 14967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14943,
											"end": 14967,
											"name": "tag",
											"source": 22,
											"value": "548"
										},
										{
											"begin": 14943,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14934,
											"end": 14968,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "365"
										},
										{
											"begin": 14934,
											"end": 14968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14934,
											"end": 14968,
											"name": "tag",
											"source": 22,
											"value": "547"
										},
										{
											"begin": 14934,
											"end": 14968,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14916,
											"end": 14969,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "337"
										},
										{
											"begin": 14916,
											"end": 14969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14916,
											"end": 14969,
											"name": "tag",
											"source": 22,
											"value": "546"
										},
										{
											"begin": 14916,
											"end": 14969,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 14903,
											"end": 14969,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14903,
											"end": 14969,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14833,
											"end": 14975,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 14833,
											"end": 14975,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14833,
											"end": 14975,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14833,
											"end": 14975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 14981,
											"end": 15056,
											"name": "tag",
											"source": 22,
											"value": "367"
										},
										{
											"begin": 14981,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15024,
											"end": 15027,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 15045,
											"end": 15050,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 15038,
											"end": 15050,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 15038,
											"end": 15050,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14981,
											"end": 15056,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 14981,
											"end": 15056,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 14981,
											"end": 15056,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 14981,
											"end": 15056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15062,
											"end": 15331,
											"name": "tag",
											"source": 22,
											"value": "368"
										},
										{
											"begin": 15062,
											"end": 15331,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15172,
											"end": 15211,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "551"
										},
										{
											"begin": 15203,
											"end": 15210,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 15172,
											"end": 15211,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "366"
										},
										{
											"begin": 15172,
											"end": 15211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15172,
											"end": 15211,
											"name": "tag",
											"source": 22,
											"value": "551"
										},
										{
											"begin": 15172,
											"end": 15211,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15233,
											"end": 15324,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "552"
										},
										{
											"begin": 15282,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "553"
										},
										{
											"begin": 15306,
											"end": 15322,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 15282,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "367"
										},
										{
											"begin": 15282,
											"end": 15323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15282,
											"end": 15323,
											"name": "tag",
											"source": 22,
											"value": "553"
										},
										{
											"begin": 15282,
											"end": 15323,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15274,
											"end": 15280,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 15267,
											"end": 15271,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 15261,
											"end": 15272,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 15233,
											"end": 15324,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "364"
										},
										{
											"begin": 15233,
											"end": 15324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15233,
											"end": 15324,
											"name": "tag",
											"source": 22,
											"value": "552"
										},
										{
											"begin": 15233,
											"end": 15324,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15227,
											"end": 15231,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 15220,
											"end": 15325,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 15138,
											"end": 15331,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15062,
											"end": 15331,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15062,
											"end": 15331,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15062,
											"end": 15331,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15062,
											"end": 15331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15337,
											"end": 15410,
											"name": "tag",
											"source": 22,
											"value": "369"
										},
										{
											"begin": 15337,
											"end": 15410,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15382,
											"end": 15385,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 15337,
											"end": 15410,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 15337,
											"end": 15410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15416,
											"end": 15605,
											"name": "tag",
											"source": 22,
											"value": "370"
										},
										{
											"begin": 15416,
											"end": 15605,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15493,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "556"
										},
										{
											"begin": 15493,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "369"
										},
										{
											"begin": 15493,
											"end": 15525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15493,
											"end": 15525,
											"name": "tag",
											"source": 22,
											"value": "556"
										},
										{
											"begin": 15493,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15534,
											"end": 15599,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "557"
										},
										{
											"begin": 15592,
											"end": 15598,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 15584,
											"end": 15590,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 15578,
											"end": 15582,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 15534,
											"end": 15599,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "368"
										},
										{
											"begin": 15534,
											"end": 15599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15534,
											"end": 15599,
											"name": "tag",
											"source": 22,
											"value": "557"
										},
										{
											"begin": 15534,
											"end": 15599,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15469,
											"end": 15605,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15416,
											"end": 15605,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15416,
											"end": 15605,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15416,
											"end": 15605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15611,
											"end": 15797,
											"name": "tag",
											"source": 22,
											"value": "371"
										},
										{
											"begin": 15611,
											"end": 15797,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15671,
											"end": 15791,
											"name": "tag",
											"source": 22,
											"value": "559"
										},
										{
											"begin": 15671,
											"end": 15791,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15688,
											"end": 15691,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 15681,
											"end": 15686,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 15678,
											"end": 15692,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 15671,
											"end": 15791,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 15671,
											"end": 15791,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "561"
										},
										{
											"begin": 15671,
											"end": 15791,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 15742,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "562"
										},
										{
											"begin": 15779,
											"end": 15780,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 15772,
											"end": 15777,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 15742,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "370"
										},
										{
											"begin": 15742,
											"end": 15781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15742,
											"end": 15781,
											"name": "tag",
											"source": 22,
											"value": "562"
										},
										{
											"begin": 15742,
											"end": 15781,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15715,
											"end": 15716,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 15708,
											"end": 15713,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 15704,
											"end": 15717,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 15695,
											"end": 15717,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 15695,
											"end": 15717,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15671,
											"end": 15791,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "559"
										},
										{
											"begin": 15671,
											"end": 15791,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15671,
											"end": 15791,
											"name": "tag",
											"source": 22,
											"value": "561"
										},
										{
											"begin": 15671,
											"end": 15791,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15611,
											"end": 15797,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15611,
											"end": 15797,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15611,
											"end": 15797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15803,
											"end": 16346,
											"name": "tag",
											"source": 22,
											"value": "372"
										},
										{
											"begin": 15803,
											"end": 16346,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15904,
											"end": 15906,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 15899,
											"end": 15902,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 15896,
											"end": 15907,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 15893,
											"end": 16339,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 15893,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "564"
										},
										{
											"begin": 15893,
											"end": 16339,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 15938,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "565"
										},
										{
											"begin": 15970,
											"end": 15975,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 15938,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "361"
										},
										{
											"begin": 15938,
											"end": 15976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 15938,
											"end": 15976,
											"name": "tag",
											"source": 22,
											"value": "565"
										},
										{
											"begin": 15938,
											"end": 15976,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 16022,
											"end": 16051,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "566"
										},
										{
											"begin": 16040,
											"end": 16050,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 16022,
											"end": 16051,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "362"
										},
										{
											"begin": 16022,
											"end": 16051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16022,
											"end": 16051,
											"name": "tag",
											"source": 22,
											"value": "566"
										},
										{
											"begin": 16022,
											"end": 16051,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 16012,
											"end": 16020,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 16008,
											"end": 16052,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 16205,
											"end": 16207,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 16193,
											"end": 16203,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 16190,
											"end": 16208,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 16187,
											"end": 16236,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 16187,
											"end": 16236,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "567"
										},
										{
											"begin": 16187,
											"end": 16236,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 16226,
											"end": 16234,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 16211,
											"end": 16234,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 16211,
											"end": 16234,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16187,
											"end": 16236,
											"name": "tag",
											"source": 22,
											"value": "567"
										},
										{
											"begin": 16187,
											"end": 16236,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 16249,
											"end": 16329,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "568"
										},
										{
											"begin": 16305,
											"end": 16327,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "569"
										},
										{
											"begin": 16323,
											"end": 16326,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 16305,
											"end": 16327,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "362"
										},
										{
											"begin": 16305,
											"end": 16327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16305,
											"end": 16327,
											"name": "tag",
											"source": 22,
											"value": "569"
										},
										{
											"begin": 16305,
											"end": 16327,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 16295,
											"end": 16303,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 16291,
											"end": 16328,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 16278,
											"end": 16289,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 16249,
											"end": 16329,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "371"
										},
										{
											"begin": 16249,
											"end": 16329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16249,
											"end": 16329,
											"name": "tag",
											"source": 22,
											"value": "568"
										},
										{
											"begin": 16249,
											"end": 16329,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15908,
											"end": 16339,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15908,
											"end": 16339,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15893,
											"end": 16339,
											"name": "tag",
											"source": 22,
											"value": "564"
										},
										{
											"begin": 15893,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 15803,
											"end": 16346,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15803,
											"end": 16346,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15803,
											"end": 16346,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 15803,
											"end": 16346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16352,
											"end": 16469,
											"name": "tag",
											"source": 22,
											"value": "373"
										},
										{
											"begin": 16352,
											"end": 16469,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 16406,
											"end": 16414,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 16456,
											"end": 16461,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 16450,
											"end": 16454,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 16446,
											"end": 16462,
											"name": "SHR",
											"source": 22
										},
										{
											"begin": 16425,
											"end": 16462,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 16425,
											"end": 16462,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16352,
											"end": 16469,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 16352,
											"end": 16469,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 16352,
											"end": 16469,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16352,
											"end": 16469,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16352,
											"end": 16469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16475,
											"end": 16644,
											"name": "tag",
											"source": 22,
											"value": "374"
										},
										{
											"begin": 16475,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 16519,
											"end": 16525,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 16552,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "572"
										},
										{
											"begin": 16600,
											"end": 16601,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 16596,
											"end": 16602,
											"name": "NOT",
											"source": 22
										},
										{
											"begin": 16588,
											"end": 16593,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 16585,
											"end": 16586,
											"name": "PUSH",
											"source": 22,
											"value": "8"
										},
										{
											"begin": 16581,
											"end": 16594,
											"name": "MUL",
											"source": 22
										},
										{
											"begin": 16552,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "373"
										},
										{
											"begin": 16552,
											"end": 16603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16552,
											"end": 16603,
											"name": "tag",
											"source": 22,
											"value": "572"
										},
										{
											"begin": 16552,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 16548,
											"end": 16604,
											"name": "NOT",
											"source": 22
										},
										{
											"begin": 16633,
											"end": 16637,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 16627,
											"end": 16631,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 16623,
											"end": 16638,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 16613,
											"end": 16638,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 16613,
											"end": 16638,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16526,
											"end": 16644,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16475,
											"end": 16644,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 16475,
											"end": 16644,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 16475,
											"end": 16644,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16475,
											"end": 16644,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16475,
											"end": 16644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16649,
											"end": 16944,
											"name": "tag",
											"source": 22,
											"value": "375"
										},
										{
											"begin": 16649,
											"end": 16944,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 16725,
											"end": 16729,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 16871,
											"end": 16900,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "574"
										},
										{
											"begin": 16896,
											"end": 16899,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 16890,
											"end": 16894,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 16871,
											"end": 16900,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "374"
										},
										{
											"begin": 16871,
											"end": 16900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16871,
											"end": 16900,
											"name": "tag",
											"source": 22,
											"value": "574"
										},
										{
											"begin": 16871,
											"end": 16900,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 16863,
											"end": 16900,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 16863,
											"end": 16900,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16933,
											"end": 16936,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 16930,
											"end": 16931,
											"name": "PUSH",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 16926,
											"end": 16937,
											"name": "MUL",
											"source": 22
										},
										{
											"begin": 16920,
											"end": 16924,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 16917,
											"end": 16938,
											"name": "OR",
											"source": 22
										},
										{
											"begin": 16909,
											"end": 16938,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 16909,
											"end": 16938,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16649,
											"end": 16944,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 16649,
											"end": 16944,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 16649,
											"end": 16944,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16649,
											"end": 16944,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16649,
											"end": 16944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 16949,
											"end": 18344,
											"name": "tag",
											"source": 22,
											"value": "196"
										},
										{
											"begin": 16949,
											"end": 18344,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17066,
											"end": 17103,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "576"
										},
										{
											"begin": 17099,
											"end": 17102,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17066,
											"end": 17103,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "332"
										},
										{
											"begin": 17066,
											"end": 17103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17066,
											"end": 17103,
											"name": "tag",
											"source": 22,
											"value": "576"
										},
										{
											"begin": 17066,
											"end": 17103,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17168,
											"end": 17186,
											"name": "PUSH",
											"source": 22,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17160,
											"end": 17166,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17157,
											"end": 17187,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 17154,
											"end": 17210,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 17154,
											"end": 17210,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "577"
										},
										{
											"begin": 17154,
											"end": 17210,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 17190,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "578"
										},
										{
											"begin": 17190,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "350"
										},
										{
											"begin": 17190,
											"end": 17208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17190,
											"end": 17208,
											"name": "tag",
											"source": 22,
											"value": "578"
										},
										{
											"begin": 17190,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17154,
											"end": 17210,
											"name": "tag",
											"source": 22,
											"value": "577"
										},
										{
											"begin": 17154,
											"end": 17210,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17234,
											"end": 17272,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "579"
										},
										{
											"begin": 17266,
											"end": 17270,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17260,
											"end": 17271,
											"name": "SLOAD",
											"source": 22
										},
										{
											"begin": 17234,
											"end": 17272,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "116"
										},
										{
											"begin": 17234,
											"end": 17272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17234,
											"end": 17272,
											"name": "tag",
											"source": 22,
											"value": "579"
										},
										{
											"begin": 17234,
											"end": 17272,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17319,
											"end": 17386,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "580"
										},
										{
											"begin": 17379,
											"end": 17385,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17371,
											"end": 17377,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17365,
											"end": 17369,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 17319,
											"end": 17386,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "372"
										},
										{
											"begin": 17319,
											"end": 17386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17319,
											"end": 17386,
											"name": "tag",
											"source": 22,
											"value": "580"
										},
										{
											"begin": 17319,
											"end": 17386,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17413,
											"end": 17414,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 17437,
											"end": 17441,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 17424,
											"end": 17441,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 17424,
											"end": 17441,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17469,
											"end": 17471,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 17461,
											"end": 17467,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 17458,
											"end": 17472,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 17486,
											"end": 17487,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 17481,
											"end": 18099,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17481,
											"end": 18099,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 17481,
											"end": 18099,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "582"
										},
										{
											"begin": 17481,
											"end": 18099,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 18143,
											"end": 18144,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 18160,
											"end": 18166,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 18157,
											"end": 18234,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 18157,
											"end": 18234,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "583"
										},
										{
											"begin": 18157,
											"end": 18234,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 18209,
											"end": 18218,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 18204,
											"end": 18207,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 18200,
											"end": 18219,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18194,
											"end": 18220,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 18185,
											"end": 18220,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18185,
											"end": 18220,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18157,
											"end": 18234,
											"name": "tag",
											"source": 22,
											"value": "583"
										},
										{
											"begin": 18157,
											"end": 18234,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18260,
											"end": 18327,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "584"
										},
										{
											"begin": 18320,
											"end": 18326,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 18313,
											"end": 18318,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 18260,
											"end": 18327,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "375"
										},
										{
											"begin": 18260,
											"end": 18327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 18260,
											"end": 18327,
											"name": "tag",
											"source": 22,
											"value": "584"
										},
										{
											"begin": 18260,
											"end": 18327,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18254,
											"end": 18258,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 18247,
											"end": 18328,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 18116,
											"end": 18338,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17451,
											"end": 18338,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "581"
										},
										{
											"begin": 17451,
											"end": 18338,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17481,
											"end": 18099,
											"name": "tag",
											"source": 22,
											"value": "582"
										},
										{
											"begin": 17481,
											"end": 18099,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17533,
											"end": 17537,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 17529,
											"end": 17538,
											"name": "NOT",
											"source": 22
										},
										{
											"begin": 17521,
											"end": 17527,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 17517,
											"end": 17539,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 17567,
											"end": 17604,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "585"
										},
										{
											"begin": 17599,
											"end": 17603,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 17567,
											"end": 17604,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "361"
										},
										{
											"begin": 17567,
											"end": 17604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17567,
											"end": 17604,
											"name": "tag",
											"source": 22,
											"value": "585"
										},
										{
											"begin": 17567,
											"end": 17604,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17626,
											"end": 17627,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 17640,
											"end": 17848,
											"name": "tag",
											"source": 22,
											"value": "586"
										},
										{
											"begin": 17640,
											"end": 17848,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17654,
											"end": 17661,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17651,
											"end": 17652,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17648,
											"end": 17662,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 17640,
											"end": 17848,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 17640,
											"end": 17848,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "588"
										},
										{
											"begin": 17640,
											"end": 17848,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 17733,
											"end": 17742,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 17728,
											"end": 17731,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 17724,
											"end": 17743,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17718,
											"end": 17744,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 17710,
											"end": 17716,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17703,
											"end": 17745,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 17784,
											"end": 17785,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 17776,
											"end": 17782,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17772,
											"end": 17786,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17762,
											"end": 17786,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 17762,
											"end": 17786,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17831,
											"end": 17833,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 17820,
											"end": 17829,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 17816,
											"end": 17834,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17803,
											"end": 17834,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 17803,
											"end": 17834,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17677,
											"end": 17681,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 17674,
											"end": 17675,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 17670,
											"end": 17682,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17665,
											"end": 17682,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 17665,
											"end": 17682,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17640,
											"end": 17848,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "586"
										},
										{
											"begin": 17640,
											"end": 17848,
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17640,
											"end": 17848,
											"name": "tag",
											"source": 22,
											"value": "588"
										},
										{
											"begin": 17640,
											"end": 17848,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17876,
											"end": 17882,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 17867,
											"end": 17874,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 17864,
											"end": 17883,
											"name": "LT",
											"source": 22
										},
										{
											"begin": 17861,
											"end": 18040,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 17861,
											"end": 18040,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "589"
										},
										{
											"begin": 17861,
											"end": 18040,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 17934,
											"end": 17943,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 17929,
											"end": 17932,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 17925,
											"end": 17944,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 17919,
											"end": 17945,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 17977,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "590"
										},
										{
											"begin": 18019,
											"end": 18023,
											"name": "PUSH",
											"source": 22,
											"value": "1F"
										},
										{
											"begin": 18011,
											"end": 18017,
											"name": "DUP10",
											"source": 22
										},
										{
											"begin": 18007,
											"end": 18024,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 17996,
											"end": 18005,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 17977,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "374"
										},
										{
											"begin": 17977,
											"end": 18025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 17977,
											"end": 18025,
											"name": "tag",
											"source": 22,
											"value": "590"
										},
										{
											"begin": 17977,
											"end": 18025,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17969,
											"end": 17975,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 17962,
											"end": 18026,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 17884,
											"end": 18040,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17861,
											"end": 18040,
											"name": "tag",
											"source": 22,
											"value": "589"
										},
										{
											"begin": 17861,
											"end": 18040,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18086,
											"end": 18087,
											"name": "PUSH",
											"source": 22,
											"value": "1"
										},
										{
											"begin": 18082,
											"end": 18083,
											"name": "PUSH",
											"source": 22,
											"value": "2"
										},
										{
											"begin": 18074,
											"end": 18080,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 18070,
											"end": 18084,
											"name": "MUL",
											"source": 22
										},
										{
											"begin": 18066,
											"end": 18088,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18060,
											"end": 18064,
											"name": "DUP9",
											"source": 22
										},
										{
											"begin": 18053,
											"end": 18089,
											"name": "SSTORE",
											"source": 22
										},
										{
											"begin": 17488,
											"end": 18099,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17488,
											"end": 18099,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17488,
											"end": 18099,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17451,
											"end": 18338,
											"name": "tag",
											"source": 22,
											"value": "581"
										},
										{
											"begin": 17451,
											"end": 18338,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 17451,
											"end": 18338,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17041,
											"end": 18344,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17041,
											"end": 18344,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 17041,
											"end": 18344,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16949,
											"end": 18344,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16949,
											"end": 18344,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 16949,
											"end": 18344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 18350,
											"end": 18448,
											"name": "tag",
											"source": 22,
											"value": "376"
										},
										{
											"begin": 18350,
											"end": 18448,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18401,
											"end": 18407,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 18435,
											"end": 18440,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 18429,
											"end": 18441,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 18419,
											"end": 18441,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18419,
											"end": 18441,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18350,
											"end": 18448,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 18350,
											"end": 18448,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18350,
											"end": 18448,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18350,
											"end": 18448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 18454,
											"end": 18622,
											"name": "tag",
											"source": 22,
											"value": "377"
										},
										{
											"begin": 18454,
											"end": 18622,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18537,
											"end": 18548,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 18571,
											"end": 18577,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 18566,
											"end": 18569,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 18559,
											"end": 18578,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 18611,
											"end": 18615,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 18606,
											"end": 18609,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 18602,
											"end": 18616,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18587,
											"end": 18616,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 18587,
											"end": 18616,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18454,
											"end": 18622,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 18454,
											"end": 18622,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 18454,
											"end": 18622,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18454,
											"end": 18622,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18454,
											"end": 18622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 18628,
											"end": 19001,
											"name": "tag",
											"source": 22,
											"value": "378"
										},
										{
											"begin": 18628,
											"end": 19001,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18714,
											"end": 18717,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 18742,
											"end": 18780,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "594"
										},
										{
											"begin": 18774,
											"end": 18779,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 18742,
											"end": 18780,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "376"
										},
										{
											"begin": 18742,
											"end": 18780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 18742,
											"end": 18780,
											"name": "tag",
											"source": 22,
											"value": "594"
										},
										{
											"begin": 18742,
											"end": 18780,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18796,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "595"
										},
										{
											"begin": 18859,
											"end": 18865,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 18854,
											"end": 18857,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 18796,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "377"
										},
										{
											"begin": 18796,
											"end": 18866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 18796,
											"end": 18866,
											"name": "tag",
											"source": 22,
											"value": "595"
										},
										{
											"begin": 18796,
											"end": 18866,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18789,
											"end": 18866,
											"name": "SWAP4",
											"source": 22
										},
										{
											"begin": 18789,
											"end": 18866,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18875,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "596"
										},
										{
											"begin": 18933,
											"end": 18939,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 18928,
											"end": 18931,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 18921,
											"end": 18925,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 18914,
											"end": 18919,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 18910,
											"end": 18926,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18875,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "334"
										},
										{
											"begin": 18875,
											"end": 18940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 18875,
											"end": 18940,
											"name": "tag",
											"source": 22,
											"value": "596"
										},
										{
											"begin": 18875,
											"end": 18940,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18965,
											"end": 18994,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "597"
										},
										{
											"begin": 18987,
											"end": 18993,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 18965,
											"end": 18994,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "335"
										},
										{
											"begin": 18965,
											"end": 18994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 18965,
											"end": 18994,
											"name": "tag",
											"source": 22,
											"value": "597"
										},
										{
											"begin": 18965,
											"end": 18994,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 18960,
											"end": 18963,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 18956,
											"end": 18995,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 18949,
											"end": 18995,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 18949,
											"end": 18995,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18718,
											"end": 19001,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18628,
											"end": 19001,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 18628,
											"end": 19001,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 18628,
											"end": 19001,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18628,
											"end": 19001,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 18628,
											"end": 19001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19007,
											"end": 19647,
											"name": "tag",
											"source": 22,
											"value": "238"
										},
										{
											"begin": 19007,
											"end": 19647,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19202,
											"end": 19206,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 19240,
											"end": 19243,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 19229,
											"end": 19238,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 19225,
											"end": 19244,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19217,
											"end": 19244,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 19217,
											"end": 19244,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19254,
											"end": 19325,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "599"
										},
										{
											"begin": 19322,
											"end": 19323,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 19311,
											"end": 19320,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 19307,
											"end": 19324,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19298,
											"end": 19304,
											"name": "DUP8",
											"source": 22
										},
										{
											"begin": 19254,
											"end": 19325,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "342"
										},
										{
											"begin": 19254,
											"end": 19325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19254,
											"end": 19325,
											"name": "tag",
											"source": 22,
											"value": "599"
										},
										{
											"begin": 19254,
											"end": 19325,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19335,
											"end": 19407,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "600"
										},
										{
											"begin": 19403,
											"end": 19405,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 19392,
											"end": 19401,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 19388,
											"end": 19406,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19379,
											"end": 19385,
											"name": "DUP7",
											"source": 22
										},
										{
											"begin": 19335,
											"end": 19407,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "342"
										},
										{
											"begin": 19335,
											"end": 19407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19335,
											"end": 19407,
											"name": "tag",
											"source": 22,
											"value": "600"
										},
										{
											"begin": 19335,
											"end": 19407,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19417,
											"end": 19489,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "601"
										},
										{
											"begin": 19485,
											"end": 19487,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 19474,
											"end": 19483,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 19470,
											"end": 19488,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19461,
											"end": 19467,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 19417,
											"end": 19489,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "345"
										},
										{
											"begin": 19417,
											"end": 19489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19417,
											"end": 19489,
											"name": "tag",
											"source": 22,
											"value": "601"
										},
										{
											"begin": 19417,
											"end": 19489,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19536,
											"end": 19545,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 19530,
											"end": 19534,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 19526,
											"end": 19546,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 19521,
											"end": 19523,
											"name": "PUSH",
											"source": 22,
											"value": "60"
										},
										{
											"begin": 19510,
											"end": 19519,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 19506,
											"end": 19524,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 19499,
											"end": 19547,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 19564,
											"end": 19640,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "602"
										},
										{
											"begin": 19635,
											"end": 19639,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 19626,
											"end": 19632,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 19564,
											"end": 19640,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "378"
										},
										{
											"begin": 19564,
											"end": 19640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19564,
											"end": 19640,
											"name": "tag",
											"source": 22,
											"value": "602"
										},
										{
											"begin": 19564,
											"end": 19640,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19556,
											"end": 19640,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 19556,
											"end": 19640,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19007,
											"end": 19647,
											"name": "SWAP6",
											"source": 22
										},
										{
											"begin": 19007,
											"end": 19647,
											"name": "SWAP5",
											"source": 22
										},
										{
											"begin": 19007,
											"end": 19647,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19007,
											"end": 19647,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19007,
											"end": 19647,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19007,
											"end": 19647,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19007,
											"end": 19647,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19007,
											"end": 19647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19653,
											"end": 19794,
											"name": "tag",
											"source": 22,
											"value": "379"
										},
										{
											"begin": 19653,
											"end": 19794,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19709,
											"end": 19714,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 19740,
											"end": 19746,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 19734,
											"end": 19747,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 19725,
											"end": 19747,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 19725,
											"end": 19747,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19756,
											"end": 19788,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "604"
										},
										{
											"begin": 19782,
											"end": 19787,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 19756,
											"end": 19788,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "328"
										},
										{
											"begin": 19756,
											"end": 19788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19756,
											"end": 19788,
											"name": "tag",
											"source": 22,
											"value": "604"
										},
										{
											"begin": 19756,
											"end": 19788,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19653,
											"end": 19794,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 19653,
											"end": 19794,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 19653,
											"end": 19794,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19653,
											"end": 19794,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19653,
											"end": 19794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19800,
											"end": 20149,
											"name": "tag",
											"source": 22,
											"value": "241"
										},
										{
											"begin": 19800,
											"end": 20149,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19869,
											"end": 19875,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 19918,
											"end": 19920,
											"name": "PUSH",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 19906,
											"end": 19915,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 19897,
											"end": 19904,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 19893,
											"end": 19916,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 19889,
											"end": 19921,
											"name": "SLT",
											"source": 22
										},
										{
											"begin": 19886,
											"end": 20005,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 19886,
											"end": 20005,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "606"
										},
										{
											"begin": 19886,
											"end": 20005,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 19924,
											"end": 20003,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "607"
										},
										{
											"begin": 19924,
											"end": 20003,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "325"
										},
										{
											"begin": 19924,
											"end": 20003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 19924,
											"end": 20003,
											"name": "tag",
											"source": 22,
											"value": "607"
										},
										{
											"begin": 19924,
											"end": 20003,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 19886,
											"end": 20005,
											"name": "tag",
											"source": 22,
											"value": "606"
										},
										{
											"begin": 19886,
											"end": 20005,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 20044,
											"end": 20045,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 20069,
											"end": 20132,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "608"
										},
										{
											"begin": 20124,
											"end": 20131,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 20115,
											"end": 20121,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 20104,
											"end": 20113,
											"name": "DUP6",
											"source": 22
										},
										{
											"begin": 20100,
											"end": 20122,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 20069,
											"end": 20132,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "379"
										},
										{
											"begin": 20069,
											"end": 20132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 20069,
											"end": 20132,
											"name": "tag",
											"source": 22,
											"value": "608"
										},
										{
											"begin": 20069,
											"end": 20132,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 20059,
											"end": 20132,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 20059,
											"end": 20132,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 20015,
											"end": 20142,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19800,
											"end": 20149,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 19800,
											"end": 20149,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 19800,
											"end": 20149,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19800,
											"end": 20149,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 19800,
											"end": 20149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 20155,
											"end": 20335,
											"name": "tag",
											"source": 22,
											"value": "380"
										},
										{
											"begin": 20155,
											"end": 20335,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 20203,
											"end": 20280,
											"name": "PUSH",
											"source": 22,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20200,
											"end": 20201,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 20193,
											"end": 20281,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 20300,
											"end": 20304,
											"name": "PUSH",
											"source": 22,
											"value": "11"
										},
										{
											"begin": 20297,
											"end": 20298,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 20290,
											"end": 20305,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 20324,
											"end": 20328,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 20321,
											"end": 20322,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 20314,
											"end": 20329,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 20341,
											"end": 20535,
											"name": "tag",
											"source": 22,
											"value": "286"
										},
										{
											"begin": 20341,
											"end": 20535,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 20381,
											"end": 20385,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 20401,
											"end": 20421,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "611"
										},
										{
											"begin": 20419,
											"end": 20420,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 20401,
											"end": 20421,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "337"
										},
										{
											"begin": 20401,
											"end": 20421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 20401,
											"end": 20421,
											"name": "tag",
											"source": 22,
											"value": "611"
										},
										{
											"begin": 20401,
											"end": 20421,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 20396,
											"end": 20421,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 20396,
											"end": 20421,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 20435,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "612"
										},
										{
											"begin": 20453,
											"end": 20454,
											"name": "DUP4",
											"source": 22
										},
										{
											"begin": 20435,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "337"
										},
										{
											"begin": 20435,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 20435,
											"end": 20455,
											"name": "tag",
											"source": 22,
											"value": "612"
										},
										{
											"begin": 20435,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 20430,
											"end": 20455,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 20430,
											"end": 20455,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 20479,
											"end": 20480,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 20476,
											"end": 20477,
											"name": "DUP3",
											"source": 22
										},
										{
											"begin": 20472,
											"end": 20481,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 20464,
											"end": 20481,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 20464,
											"end": 20481,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 20503,
											"end": 20504,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 20497,
											"end": 20501,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 20494,
											"end": 20505,
											"name": "GT",
											"source": 22
										},
										{
											"begin": 20491,
											"end": 20528,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 20491,
											"end": 20528,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "613"
										},
										{
											"begin": 20491,
											"end": 20528,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 20508,
											"end": 20526,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "614"
										},
										{
											"begin": 20508,
											"end": 20526,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "380"
										},
										{
											"begin": 20508,
											"end": 20526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 20508,
											"end": 20526,
											"name": "tag",
											"source": 22,
											"value": "614"
										},
										{
											"begin": 20508,
											"end": 20526,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 20491,
											"end": 20528,
											"name": "tag",
											"source": 22,
											"value": "613"
										},
										{
											"begin": 20491,
											"end": 20528,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 20341,
											"end": 20535,
											"name": "SWAP3",
											"source": 22
										},
										{
											"begin": 20341,
											"end": 20535,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 20341,
											"end": 20535,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 20341,
											"end": 20535,
											"name": "POP",
											"source": 22
										},
										{
											"begin": 20341,
											"end": 20535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 20541,
											"end": 20721,
											"name": "tag",
											"source": 22,
											"value": "295"
										},
										{
											"begin": 20541,
											"end": 20721,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 20589,
											"end": 20666,
											"name": "PUSH",
											"source": 22,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20586,
											"end": 20587,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 20579,
											"end": 20667,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 20686,
											"end": 20690,
											"name": "PUSH",
											"source": 22,
											"value": "31"
										},
										{
											"begin": 20683,
											"end": 20684,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 20676,
											"end": 20691,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 20710,
											"end": 20714,
											"name": "PUSH",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 20707,
											"end": 20708,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 20700,
											"end": 20715,
											"name": "REVERT",
											"source": 22
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/NFTToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Items(uint256)": "17b47cc4",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"marketplace()": "abc8c7af",
							"mint(string)": "d85d3d27",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setMarketplace(address)": "73ad6c2d",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Items\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketplace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"}],\"name\":\"setMarketplace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTToken.sol\":\"NftToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xab7469fb4d5dbca13494abb44b720b63b62a48d594083312de4865ba50cd80b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://334002204a6c9af1bb233295dfae3052ea887c2f1913130fb931fe1b11692319\",\"dweb:/ipfs/Qme5siHWg53YLWpXBb1rBTSRaTVbtWLnYUBa4Pjq2CYFpt\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/NFTToken.sol\":{\"keccak256\":\"0xa37a5f15caa15b51a694bb6c78d83becf3ec7077a9f14524c33f06d46a827739\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4afd0d9befb098e0f7498fab761d39abdf5c6453ae924ca4259d5f2757655030\",\"dweb:/ipfs/Qmag52K3bQyUUcjRfmzSYKRefitryxTz5Eq4drvmZTo1cZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1479,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1483,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1486,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1490,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 3754,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "_tokenIds",
								"offset": 0,
								"slot": "10",
								"type": "t_struct(Counter)2101_storage"
							},
							{
								"astId": 3756,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "marketplace",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 3768,
								"contract": "contracts/NFTToken.sol:NftToken",
								"label": "Items",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_struct(Item)3763_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(Item)3763_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NftToken.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)3763_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)2101_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 2100,
										"contract": "contracts/NFTToken.sol:NftToken",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Item)3763_storage": {
								"encoding": "inplace",
								"label": "struct NftToken.Item",
								"members": [
									{
										"astId": 3758,
										"contract": "contracts/NFTToken.sol:NftToken",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3760,
										"contract": "contracts/NFTToken.sol:NftToken",
										"label": "creator",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 3762,
										"contract": "contracts/NFTToken.sol:NftToken",
										"label": "uri",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2095
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 2096,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2095,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2095,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								2095
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2077,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2577
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 2578,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2577,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2577
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2577,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2577,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								2577
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							2095
						],
						"ERC165": [
							2565
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							2577
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							2065
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							2541
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 2066,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2065,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 2096,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2095,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 2542,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2541,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 2566,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2577,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2565,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"804:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2095,
										"src": "804:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"813:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2565,
										"src": "813:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"821:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "821:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2065,
										"src": "830:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "847:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								2065,
								1442,
								2565,
								2577,
								2095
							],
							"name": "ERC721",
							"nameLocation": "794:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2541,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1051:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1067:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1109:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1175:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1191:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1216:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1437:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1447:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1393:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1414:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:5"
									},
									"scope": 1325,
									"src": "1381:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2564,
										2576
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1669:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1698:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1718:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1754:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2065,
																			"src": "1774:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2065_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2065_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2065",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2564,
															"src": "1818:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1679:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2565,
												"src": "1637:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2577,
												"src": "1645:7:5"
											}
										],
										"src": "1628:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1588:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:5"
									},
									"scope": 1325,
									"src": "1561:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1992:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2002:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2027:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2048:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2041:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2105:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2115:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2098:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1939:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:5"
									},
									"scope": 1325,
									"src": "1920:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2257:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2274:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2267:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2202:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:5"
									},
									"scope": 1325,
									"src": "2185:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2050
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2425:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2435:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2410:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:5"
									},
									"scope": 1325,
									"src": "2365:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2056
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2580:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2590:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2565:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:5"
									},
									"scope": 1325,
									"src": "2518:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2064
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2756:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2780:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2766:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2799:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2823:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2856:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2901:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2354,
																	"src": "2901:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2843:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2695:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2741:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:5"
									},
									"scope": 1325,
									"src": "2677:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3240:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3250:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:5"
									},
									"scope": 1325,
									"src": "3174:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3384:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3403:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "3416:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3394:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3340:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3352:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:5"
									},
									"scope": 1325,
									"src": "3323:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3573:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3597:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3583:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3623:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3616:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:5"
									},
									"scope": 1325,
									"src": "3497:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3793:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "3822:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3836:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3846:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3803:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3745:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3763:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:5"
									},
									"scope": 1325,
									"src": "3718:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4022:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4039:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4058:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4065:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4032:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3954:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3969:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4016:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:5"
									},
									"scope": 1325,
									"src": "3928:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4223:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4237:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4233:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4255:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4276:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4269:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4538:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4570:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4574:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "4583:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4562:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4627:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4606:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4633:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4675:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4681:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4690:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4654:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4647:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4165:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:5"
									},
									"scope": 1325,
									"src": "4143:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4863:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4890:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4896:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "4873:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4813:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:5"
									},
									"scope": 1325,
									"src": "4787:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5088:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5111:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5117:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5121:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5098:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5168:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5172:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5181:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5139:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5011:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5025:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5037:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5054:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:5"
									},
									"scope": 1325,
									"src": "4985:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5782:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5799:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5792:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5725:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5773:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:5"
									},
									"scope": 1325,
									"src": "5707:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6017:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6034:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6050:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6027:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5960:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6008:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:5"
									},
									"scope": 1325,
									"src": "5938:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6485:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6552:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6561:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6589:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6596:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6572:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6621:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6608:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6633:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6495:146:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6399:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6414:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6431:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6479:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:5"
									},
									"scope": 1325,
									"src": "6376:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7179:271:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7208:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7215:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7224:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7194:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7189:255:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7234:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7252:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7350:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7402:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7411:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7375:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7248:186:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7273:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7321:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7298:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7123:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7140:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:5"
									},
									"scope": 1325,
									"src": "7082:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8167:78:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8201:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8211:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8223:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8118:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:5"
									},
									"scope": 1325,
									"src": "8092:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "8933:700:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "8943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "8958:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9035:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9031:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9055:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9086:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9092:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9098:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9069:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9161:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9157:256:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9181:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9298:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9277:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9368:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9378:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9427:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9423:107:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9445:85:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9487:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9497:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9559:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9586:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9592:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9577:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9572:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9622:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9615:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8867:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8884:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8924:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:5"
									},
									"scope": 1325,
									"src": "8838:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10008:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10022:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10018:87:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10040:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10061:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10054:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10114:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10146:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10150:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10184:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10180:96:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10213:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10234:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10227:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9970:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:5"
									},
									"scope": 1325,
									"src": "9955:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10690:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10710:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "10700:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10652:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:5"
									},
									"scope": 1325,
									"src": "10633:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11038:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11054:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11058:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11048:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11111:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11115:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11124:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11076:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10973:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10985:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11002:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:5"
									},
									"scope": 1325,
									"src": "10954:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11503:186:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11513:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11591:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11587:96:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11620:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11664:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11641:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11634:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11477:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:5"
									},
									"scope": 1325,
									"src": "11462:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12084:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12098:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12094:87:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12116:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12137:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12130:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12190:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12222:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12226:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12214:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12260:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12362:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12379:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12358:109:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12385:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12427:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12433:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12442:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12406:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12399:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12256:211:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12289:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12333:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12310:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12303:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12032:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12046:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12058:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:5"
									},
									"scope": 1325,
									"src": "12013:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13481:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13505:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13511:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13491:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13443:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:5"
									},
									"scope": 1325,
									"src": "13406:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13873:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13899:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13883:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13944:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13950:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13963:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "13921:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13808:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13820:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13837:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:5"
									},
									"scope": 1325,
									"src": "13771:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14488:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14507:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14520:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14498:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14436:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14448:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14465:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:5"
									},
									"scope": 1325,
									"src": "14418:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "14814:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "14880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "14876:460:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "14913:423:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "14927:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "14957:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "14943:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15093:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15115:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15124:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15150:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15157:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15133:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15089:142:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15164:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15211:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15189:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15245:81:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15260:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15292:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15299:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15303:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15283:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15346:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15362:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15373:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14738:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14781:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:5"
									},
									"scope": 1325,
									"src": "14720:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "15684:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15698:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "15694:91:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "15722:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "15765:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15743:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "15736:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15794:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "15813:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15820:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "15832:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "15870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15877:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15887:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "15855:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "15850:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15619:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15634:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15652:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:5"
									},
									"scope": 1325,
									"src": "15591:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16210:169:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16220:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16245:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16236:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16267:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16263:88:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16288:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16332:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16309:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16302:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16360:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16161:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:5"
									},
									"scope": 1325,
									"src": "16138:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17020:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17034:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17030:664:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17054:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17168:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17190:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17200:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17200:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17186:130:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17243:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17294:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17272:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17153:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:5"
																	},
																	"src": "17144:186:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17359:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17381:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17480:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:5",
																								"nodeType": "YulBlock",
																								"src": "17566:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:5"
																													},
																													"nativeSrc": "17599:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:5"
																													},
																													"nativeSrc": "17616:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:5"
																											},
																											"nativeSrc": "17592:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:5"
																										},
																										"nativeSrc": "17592:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17377:293:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17401:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17452:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17430:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17338:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:5"
																	},
																	"src": "17331:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2077,
																			"src": "17109:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17123:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17129:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17138:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17088:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17072:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17072:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17068:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16950:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16964:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16993:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:5"
									},
									"scope": 1325,
									"src": "16918:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "776:16926:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:17596:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2577
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 2578,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2577,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2577,
										"src": "287:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								2577
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1442,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1442,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1442,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1442,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 1442,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 1442,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 1442,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 1442,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 1442,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "867:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "940:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "984:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:7"
									},
									"scope": 1460,
									"src": "832:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "295:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721Enumerable": [
							1844
						],
						"IERC165": [
							2577
						],
						"IERC721Enumerable": [
							2037
						]
					},
					"id": 1845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 1326,
							"src": "154:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "162:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 2038,
							"src": "192:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "IERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2037,
										"src": "200:17:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 1468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 2566,
							"src": "251:64:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1467,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2577,
										"src": "259:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1470,
										"name": "ERC721",
										"nameLocations": [
											"746:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "746:6:8"
									},
									"id": 1471,
									"nodeType": "InheritanceSpecifier",
									"src": "746:6:8"
								},
								{
									"baseName": {
										"id": 1472,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"754:17:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2037,
										"src": "754:17:8"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "754:17:8"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "317:390:8",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n interfere with enumerability and should not be used together with `ERC721Enumerable`."
							},
							"fullyImplemented": true,
							"id": 1844,
							"linearizedBaseContracts": [
								1844,
								2037,
								1325,
								269,
								2065,
								1442,
								2565,
								2577,
								2095
							],
							"name": "ERC721Enumerable",
							"nameLocation": "726:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1479,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "846:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "778:80:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1478,
										"keyName": "owner",
										"keyNameLocation": "794:5:8",
										"keyType": {
											"id": 1474,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "786:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "778:59:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1477,
											"keyName": "index",
											"keyNameLocation": "819:5:8",
											"keyType": {
												"id": 1475,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "811:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "803:33:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1476,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "828:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1483,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "908:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "864:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1482,
										"keyName": "tokenId",
										"keyNameLocation": "880:7:8",
										"keyType": {
											"id": 1480,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "864:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1481,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "891:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1486,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "950:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "932:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1484,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1485,
										"nodeType": "ArrayTypeName",
										"src": "932:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1490,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "1010:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1844,
									"src": "966:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1489,
										"keyName": "tokenId",
										"keyNameLocation": "982:7:8",
										"keyType": {
											"id": 1487,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "974:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "966:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1488,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "993:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "1032:168:8",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 1497,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "1211:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1242:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1234:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1257:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1249:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:30:8"
									},
									"src": "1205:59:8"
								},
								{
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "1270:50:8",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 1500,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "1331:34:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:8"
									},
									"src": "1325:43:8"
								},
								{
									"baseFunctions": [
										417,
										2576
									],
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "1543:114:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1511,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "1560:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1513,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2037,
																		"src": "1580:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2037_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2037_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1512,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1575:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1575:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$2037",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1599:11:8",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1575:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1560:50:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1519,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "1638:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1517,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1614:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1844_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1620:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1614:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1614:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1560:90:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1510,
												"id": 1522,
												"nodeType": "Return",
												"src": "1553:97:8"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "1374:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1444:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1507,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1505,
												"name": "IERC165",
												"nameLocations": [
													"1511:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2577,
												"src": "1511:7:8"
											},
											{
												"id": 1506,
												"name": "ERC721",
												"nameLocations": [
													"1520:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1520:6:8"
											}
										],
										"src": "1502:25:8"
									},
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1469:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1462:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1462:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:20:8"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1537:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1537:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:6:8"
									},
									"scope": 1844,
									"src": "1435:222:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2028
									],
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "1833:158:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1534,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "1847:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1536,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "1866:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1535,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "1856:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1856:16:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1847:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1545,
												"nodeType": "IfStatement",
												"src": "1843:99:8",
												"trueBody": {
													"id": 1544,
													"nodeType": "Block",
													"src": "1874:68:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1540,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "1918:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1541,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "1925:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1539,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1497,
																	"src": "1895:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1895:36:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1543,
															"nodeType": "RevertStatement",
															"src": "1888:43:8"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1546,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "1958:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1548,
														"indexExpression": {
															"id": 1547,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "1971:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1958:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1550,
													"indexExpression": {
														"id": 1549,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "1978:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1958:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1533,
												"id": 1551,
												"nodeType": "Return",
												"src": "1951:33:8"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "1663:68:8",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1745:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1773:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1765:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1788:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1780:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:30:8"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1824:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:8"
									},
									"scope": 1844,
									"src": "1736:255:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2018
									],
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "2123:41:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "2140:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2151:6:8",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2140:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "2133:24:8"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "1997:60:8",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2071:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:2:8"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2114:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:9:8"
									},
									"scope": 1844,
									"src": "2062:102:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2036
									],
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "2311:151:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1571,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "2325:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1572,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "2334:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2334:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2325:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "2321:101:8",
												"trueBody": {
													"id": 1583,
													"nodeType": "Block",
													"src": "2349:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2401:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2393:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2393:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2393:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1580,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "2405:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1575,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1497,
																	"src": "2370:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2370:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1582,
															"nodeType": "RevertStatement",
															"src": "2363:48:8"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1585,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "2438:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1587,
													"indexExpression": {
														"id": 1586,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "2449:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2438:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1570,
												"id": 1588,
												"nodeType": "Return",
												"src": "2431:24:8"
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "2170:61:8",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "2245:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2266:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2258:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:15:8"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2302:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:9:8"
									},
									"scope": 1844,
									"src": "2236:226:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										882
									],
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "2622:521:8",
										"statements": [
											{
												"assignments": [
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2640:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "2632:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1603,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2632:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1611,
												"initialValue": {
													"arguments": [
														{
															"id": 1607,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "2670:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1608,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2674:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1609,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "2683:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1605,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2656:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1844_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2662:7:8",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 882,
														"src": "2656:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2632:56:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1612,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "2703:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2728:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2720:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1613,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2720:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2720:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2703:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1623,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "2807:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1624,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "2824:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2807:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1632,
													"nodeType": "IfStatement",
													"src": "2803:106:8",
													"trueBody": {
														"id": 1631,
														"nodeType": "Block",
														"src": "2828:81:8",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1627,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "2875:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1628,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "2890:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1626,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "2842:32:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2842:56:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1630,
																"nodeType": "ExpressionStatement",
																"src": "2842:56:8"
															}
														]
													}
												},
												"id": 1633,
												"nodeType": "IfStatement",
												"src": "2699:210:8",
												"trueBody": {
													"id": 1622,
													"nodeType": "Block",
													"src": "2732:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1619,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "2778:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1618,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "2746:31:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1621,
															"nodeType": "ExpressionStatement",
															"src": "2746:40:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1634,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "2922:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2936:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2928:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1635,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2928:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2928:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2922:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1645,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "3020:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1646,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "3037:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3020:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1654,
													"nodeType": "IfStatement",
													"src": "3016:90:8",
													"trueBody": {
														"id": 1653,
														"nodeType": "Block",
														"src": "3041:65:8",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1649,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1593,
																			"src": "3083:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1650,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "3087:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1648,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "3055:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3055:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1652,
																"nodeType": "ExpressionStatement",
																"src": "3055:40:8"
															}
														]
													}
												},
												"id": 1655,
												"nodeType": "IfStatement",
												"src": "2918:188:8",
												"trueBody": {
													"id": 1644,
													"nodeType": "Block",
													"src": "2940:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1641,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "2991:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1640,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "2954:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2954:45:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1643,
															"nodeType": "ExpressionStatement",
															"src": "2954:45:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1656,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1604,
													"src": "3123:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1657,
												"nodeType": "Return",
												"src": "3116:20:8"
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "2468:45:8",
										"text": " @dev See {ERC721-_update}."
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2527:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1599,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2595:8:8"
									},
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2543:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2535:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2555:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2547:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2572:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2564:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:43:8"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2613:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:9:8"
									},
									"scope": 1844,
									"src": "2518:625:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "3511:140:8",
										"statements": [
											{
												"assignments": [
													1668
												],
												"declarations": [
													{
														"constant": false,
														"id": 1668,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3529:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1689,
														"src": "3521:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3521:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1674,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1670,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "3548:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1669,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "3538:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3538:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3554:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3538:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3521:34:8"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1675,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "3565:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1678,
															"indexExpression": {
																"id": 1676,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "3578:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3565:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1679,
														"indexExpression": {
															"id": 1677,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "3582:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3565:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1680,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3592:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3565:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "3565:34:8"
											},
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1683,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "3609:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1685,
														"indexExpression": {
															"id": 1684,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3627:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3609:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1686,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "3638:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3609:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "3609:35:8"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "3149:283:8",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3446:27:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3474:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3494:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "3486:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:29:8"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3511:0:8"
									},
									"scope": 1844,
									"src": "3437:214:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "3912:95:8",
										"statements": [
											{
												"expression": {
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1696,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "3922:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1698,
														"indexExpression": {
															"id": 1697,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3922:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1699,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "3949:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3960:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3949:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3922:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "3922:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1706,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "3992:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1703,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "3976:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3987:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3976:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "3976:24:8"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "3657:184:8",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3855:31:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3895:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "3887:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:17:8"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3912:0:8"
									},
									"scope": 1844,
									"src": "3846:161:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "4705:878:8",
										"statements": [
											{
												"assignments": [
													1719
												],
												"declarations": [
													{
														"constant": false,
														"id": 1719,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "4894:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1769,
														"src": "4886:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4886:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1723,
												"initialValue": {
													"arguments": [
														{
															"id": 1721,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "4921:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1720,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "4911:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4911:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4886:40:8"
											},
											{
												"assignments": [
													1725
												],
												"declarations": [
													{
														"constant": false,
														"id": 1725,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "4944:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1769,
														"src": "4936:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4936:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1729,
												"initialValue": {
													"baseExpression": {
														"id": 1726,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "4957:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1728,
													"indexExpression": {
														"id": 1727,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "4975:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4957:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4936:47:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1730,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "5087:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1731,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "5101:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5087:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1756,
												"nodeType": "IfStatement",
												"src": "5083:323:8",
												"trueBody": {
													"id": 1755,
													"nodeType": "Block",
													"src": "5117:289:8",
													"statements": [
														{
															"assignments": [
																1734
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1734,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5139:11:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1755,
																	"src": "5131:19:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1733,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5131:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1740,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1735,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "5153:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1737,
																	"indexExpression": {
																		"id": 1736,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1713,
																		"src": "5166:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5153:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1739,
																"indexExpression": {
																	"id": 1738,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "5172:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5153:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5131:56:8"
														},
														{
															"expression": {
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1741,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "5202:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1744,
																		"indexExpression": {
																			"id": 1742,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1713,
																			"src": "5215:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5202:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1745,
																	"indexExpression": {
																		"id": 1743,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1725,
																		"src": "5221:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5202:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1746,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "5235:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5202:44:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1748,
															"nodeType": "ExpressionStatement",
															"src": "5202:44:8"
														},
														{
															"expression": {
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1749,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1483,
																		"src": "5318:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1751,
																	"indexExpression": {
																		"id": 1750,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1734,
																		"src": "5336:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5318:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1752,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "5351:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5318:43:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1754,
															"nodeType": "ExpressionStatement",
															"src": "5318:43:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5492:33:8",
													"subExpression": {
														"baseExpression": {
															"id": 1757,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "5499:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1759,
														"indexExpression": {
															"id": 1758,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "5517:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5499:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "5492:33:8"
											},
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5535:41:8",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1762,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "5542:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1764,
															"indexExpression": {
																"id": 1763,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "5555:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5542:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1766,
														"indexExpression": {
															"id": 1765,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "5561:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5542:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "5535:41:8"
											}
										]
									},
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "4013:606:8",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4633:32:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4674:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4666:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4688:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4680:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4680:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:31:8"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4705:0:8"
									},
									"scope": 1844,
									"src": "4624:959:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "5942:990:8",
										"statements": [
											{
												"assignments": [
													1777
												],
												"declarations": [
													{
														"constant": false,
														"id": 1777,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6128:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "6120:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1776,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6120:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1778,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "6145:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6156:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6145:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6165:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6145:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6120:46:8"
											},
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6184:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "6176:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1783,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6176:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"baseExpression": {
														"id": 1785,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "6197:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1787,
													"indexExpression": {
														"id": 1786,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1773,
														"src": "6213:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6197:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6176:45:8"
											},
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6551:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "6543:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6543:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1794,
												"initialValue": {
													"baseExpression": {
														"id": 1791,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "6565:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1793,
													"indexExpression": {
														"id": 1792,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "6576:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6565:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6543:48:8"
											},
											{
												"expression": {
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1795,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "6602:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1797,
														"indexExpression": {
															"id": 1796,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "6613:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6602:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1798,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "6627:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6602:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "6602:36:8"
											},
											{
												"expression": {
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1801,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "6706:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1803,
														"indexExpression": {
															"id": 1802,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "6722:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6706:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1804,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "6737:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6706:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "6706:41:8"
											},
											{
												"expression": {
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6868:31:8",
													"subExpression": {
														"baseExpression": {
															"id": 1807,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "6875:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1809,
														"indexExpression": {
															"id": 1808,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "6891:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6875:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1811,
												"nodeType": "ExpressionStatement",
												"src": "6868:31:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1812,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "6909:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6920:3:8",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6909:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6909:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "6909:16:8"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "5589:277:8",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "5880:36:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5925:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "5917:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5916:17:8"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5942:0:8"
									},
									"scope": 1844,
									"src": "5871:1061:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "7134:149:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1827,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "7148:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7157:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7148:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1834,
												"nodeType": "IfStatement",
												"src": "7144:84:8",
												"trueBody": {
													"id": 1833,
													"nodeType": "Block",
													"src": "7160:68:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1830,
																	"name": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "7181:34:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7181:36:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1832,
															"nodeType": "RevertStatement",
															"src": "7174:43:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1838,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "7260:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1839,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "7269:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1835,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7237:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1844_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7243:16:8",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "7237:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7237:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "7237:39:8"
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "6938:106:8",
										"text": " See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "7058:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1825,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7125:8:8"
									},
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7083:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "7075:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7075:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7100:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "7092:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1822,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7092:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7074:33:8"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:8"
									},
									"scope": 1844,
									"src": "7049:234:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1845,
							"src": "708:6577:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268,
								1497,
								1500
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "128:7158:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721Pausable": [
							1879
						],
						"Pausable": [
							2286
						]
					},
					"id": 1880,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 1326,
							"src": "152:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1847,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "160:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 1850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1880,
							"sourceUnit": 2287,
							"src": "190:53:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1849,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2286,
										"src": "198:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1852,
										"name": "ERC721",
										"nameLocations": [
											"970:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "970:6:9"
									},
									"id": 1853,
									"nodeType": "InheritanceSpecifier",
									"src": "970:6:9"
								},
								{
									"baseName": {
										"id": 1854,
										"name": "Pausable",
										"nameLocations": [
											"978:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2286,
										"src": "978:8:9"
									},
									"id": 1855,
									"nodeType": "InheritanceSpecifier",
									"src": "978:8:9"
								}
							],
							"canonicalName": "ERC721Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1851,
								"nodeType": "StructuredDocumentation",
								"src": "245:688:9",
								"text": " @dev ERC721 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1879,
							"linearizedBaseContracts": [
								1879,
								2286,
								1325,
								269,
								2065,
								1442,
								2565,
								2577,
								2095
							],
							"name": "ERC721Pausable",
							"nameLocation": "952:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										882
									],
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "1268:56:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1872,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "1299:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1873,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "1303:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1874,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "1312:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1870,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1285:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Pausable_$1879_$",
																"typeString": "type(contract super ERC721Pausable)"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1291:7:9",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 882,
														"src": "1285:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1869,
												"id": 1876,
												"nodeType": "Return",
												"src": "1278:39:9"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "993:122:9",
										"text": " @dev See {ERC721-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1866,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1865,
												"name": "whenNotPaused",
												"nameLocations": [
													"1236:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2211,
												"src": "1236:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1236:13:9"
										}
									],
									"name": "_update",
									"nameLocation": "1129:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1864,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1227:8:9"
									},
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1154:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "1146:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1174:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "1166:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "1199:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "1191:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1136:73:9"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "1259:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:9:9"
									},
									"scope": 1879,
									"src": "1120:204:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1880,
							"src": "934:392:9",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268,
								2191,
								2194
							],
							"usedEvents": [
								1341,
								1350,
								1359,
								2183,
								2188
							]
						}
					],
					"src": "126:1201:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							2005
						],
						"IERC165": [
							2577
						],
						"IERC4906": [
							175
						],
						"Strings": [
							2541
						]
					},
					"id": 2006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1881,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2006,
							"sourceUnit": 1326,
							"src": "154:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1882,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "162:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2006,
							"sourceUnit": 2542,
							"src": "192:51:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1884,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2541,
										"src": "200:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2006,
							"sourceUnit": 176,
							"src": "244:58:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1886,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2006,
							"sourceUnit": 152,
							"src": "303:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1888,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2577,
										"src": "311:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1891,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:10"
									},
									"id": 1892,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:10"
								},
								{
									"baseName": {
										"id": 1893,
										"name": "ERC721",
										"nameLocations": [
											"479:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "479:6:10"
									},
									"id": 1894,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:10"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1890,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:10",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 2005,
							"linearizedBaseContracts": [
								2005,
								1325,
								269,
								2065,
								175,
								1442,
								2565,
								2577,
								2095
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1897,
									"libraryName": {
										"id": 1895,
										"name": "Strings",
										"nameLocations": [
											"498:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2541,
										"src": "498:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:10",
									"typeName": {
										"id": 1896,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1903,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 2005,
									"src": "706:65:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1898,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1901,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1900,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1899,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:10",
												"typeDescriptions": {}
											}
										},
										"id": 1902,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1907,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2005,
									"src": "817:53:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1906,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:10",
										"keyType": {
											"id": 1904,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1905,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										2576
									],
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "1045:99:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1918,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "1062:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1919,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "1077:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1923,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "1125:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1921,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$2005_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:10",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1101:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1917,
												"id": 1926,
												"nodeType": "Return",
												"src": "1055:82:10"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:10",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1914,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1912,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1013:6:10"
											},
											{
												"id": 1913,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2577,
												"src": "1021:7:10"
											}
										],
										"src": "1004:25:10"
									},
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "964:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1909,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:10"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1039:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1915,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:10"
									},
									"scope": 2005,
									"src": "937:207:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "1298:505:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1938,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "1322:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1937,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1308:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:10"
											},
											{
												"assignments": [
													1942
												],
												"declarations": [
													{
														"constant": false,
														"id": 1942,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1984,
														"src": "1341:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1941,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1946,
												"initialValue": {
													"baseExpression": {
														"id": 1943,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "1367:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1945,
													"indexExpression": {
														"id": 1944,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "1378:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:10"
											},
											{
												"assignments": [
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1984,
														"src": "1396:18:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1947,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1951,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1949,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1417:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1954,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1948,
																	"src": "1506:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1952,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1962,
												"nodeType": "IfStatement",
												"src": "1496:70:10",
												"trueBody": {
													"id": 1961,
													"nodeType": "Block",
													"src": "1525:41:10",
													"statements": [
														{
															"expression": {
																"id": 1959,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "1546:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1936,
															"id": 1960,
															"nodeType": "Return",
															"src": "1539:16:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1965,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "1671:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1963,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1978,
												"nodeType": "IfStatement",
												"src": "1661:95:10",
												"trueBody": {
													"id": 1977,
													"nodeType": "Block",
													"src": "1694:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1973,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1948,
																		"src": "1729:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1974,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "1735:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1970,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:10",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1936,
															"id": 1976,
															"nodeType": "Return",
															"src": "1708:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1981,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "1788:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1979,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$2005_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:10",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1773:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1936,
												"id": 1983,
												"nodeType": "Return",
												"src": "1766:30:10"
											}
										]
									},
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:10",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1933,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:10"
									},
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1228:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:10"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1283:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1934,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:10"
									},
									"scope": 2005,
									"src": "1210:593:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "2003:86:10",
										"statements": [
											{
												"expression": {
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1993,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "2013:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1995,
														"indexExpression": {
															"id": 1994,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "2024:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1996,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "2035:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1998,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2000,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "2074:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1999,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2002,
												"nodeType": "EmitStatement",
												"src": "2054:28:10"
											}
										]
									},
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:10",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "1944:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "1961:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:10"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:10"
									},
									"scope": 2005,
									"src": "1922:167:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2006,
							"src": "431:1660:10",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "128:1964:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Enumerable": [
							2037
						]
					},
					"id": 2038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2007,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 2009,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2038,
							"sourceUnit": 1443,
							"src": "155:39:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2008,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "163:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2011,
										"name": "IERC721",
										"nameLocations": [
											"364:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "364:7:11"
									},
									"id": 2012,
									"nodeType": "InheritanceSpecifier",
									"src": "364:7:11"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2010,
								"nodeType": "StructuredDocumentation",
								"src": "196:136:11",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2037,
							"linearizedBaseContracts": [
								2037,
								1442,
								2577
							],
							"name": "IERC721Enumerable",
							"nameLocation": "343:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "378:82:11",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 2018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "474:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:11"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "511:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:9:11"
									},
									"scope": 2037,
									"src": "465:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "526:171:11",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 2028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "711:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "739:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "731:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "754:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "746:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:30:11"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "784:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:11"
									},
									"scope": 2037,
									"src": "702:91:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "799:164:11",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 2036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "977:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "998:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "990:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:11"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "1028:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:11"
									},
									"scope": 2037,
									"src": "968:69:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2038,
							"src": "333:706:11",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "129:911:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							2065
						]
					},
					"id": 2066,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2039,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 2041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2066,
							"sourceUnit": 1443,
							"src": "153:39:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2040,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "161:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2043,
										"name": "IERC721",
										"nameLocations": [
											"357:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "357:7:12"
									},
									"id": 2044,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:12"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2042,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:12",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2065,
							"linearizedBaseContracts": [
								2065,
								1442,
								2577
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:12",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:12"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "473:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2047,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:12"
									},
									"scope": 2065,
									"src": "434:54:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:12",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:12"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "600:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:12"
									},
									"scope": 2065,
									"src": "559:56:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:12",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "734:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:12"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "774:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:12"
									},
									"scope": 2065,
									"src": "716:73:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2066,
							"src": "328:463:12",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "127:665:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2095
						]
					},
					"id": 2096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2067,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2068,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:13",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2095,
							"linearizedBaseContracts": [
								2095
							],
							"name": "Context",
							"nameLocation": "642:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2076,
										"nodeType": "Block",
										"src": "718:34:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2073,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:13",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2072,
												"id": 2075,
												"nodeType": "Return",
												"src": "728:17:13"
											}
										]
									},
									"id": 2077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:13"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "709:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:13"
									},
									"scope": 2095,
									"src": "656:96:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "825:32:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2082,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:13",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2081,
												"id": 2084,
												"nodeType": "Return",
												"src": "835:15:13"
											}
										]
									},
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:13"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "809:14:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:13"
									},
									"scope": 2095,
									"src": "758:99:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "935:25:13",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2090,
												"id": 2092,
												"nodeType": "Return",
												"src": "945:8:13"
											}
										]
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:13"
									},
									"returnParameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "926:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:13"
									},
									"scope": 2095,
									"src": "863:97:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2096,
							"src": "624:338:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							2169
						]
					},
					"id": 2170,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2098,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:14",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 2169,
							"linearizedBaseContracts": [
								2169
							],
							"name": "Counters",
							"nameLocation": "432:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 2101,
									"members": [
										{
											"constant": false,
											"id": 2100,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2101,
											"src": "786:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2099,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:14",
									"nodeType": "StructDefinition",
									"scope": 2169,
									"src": "447:374:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "901:38:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2109,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "918:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:14",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2100,
													"src": "918:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2108,
												"id": 2111,
												"nodeType": "Return",
												"src": "911:21:14"
											}
										]
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "844:23:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2102,
														"name": "Counter",
														"nameLocations": [
															"844:7:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2101,
														"src": "844:7:14"
													},
													"referencedDeclaration": 2101,
													"src": "844:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:14"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "892:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:14"
									},
									"scope": 2169,
									"src": "827:112:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2126,
										"nodeType": "Block",
										"src": "998:70:14",
										"statements": [
											{
												"id": 2125,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:14",
												"statements": [
													{
														"expression": {
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2119,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2116,
																	"src": "1032:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2121,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:14",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2100,
																"src": "1032:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2124,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:14"
													}
												]
											}
										]
									},
									"id": 2127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "964:23:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2115,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2114,
														"name": "Counter",
														"nameLocations": [
															"964:7:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2101,
														"src": "964:7:14"
													},
													"referencedDeclaration": 2101,
													"src": "964:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:14"
									},
									"returnParameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:14"
									},
									"scope": 2169,
									"src": "945:123:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "1127:176:14",
										"statements": [
											{
												"assignments": [
													2134
												],
												"declarations": [
													{
														"constant": false,
														"id": 2134,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 2154,
														"src": "1137:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2133,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2137,
												"initialValue": {
													"expression": {
														"id": 2135,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "1153:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:14",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2100,
													"src": "1153:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2139,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2134,
																"src": "1185:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 2138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:14"
											},
											{
												"id": 2153,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:14",
												"statements": [
													{
														"expression": {
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2145,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2130,
																	"src": "1260:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:14",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2100,
																"src": "1260:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2148,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2134,
																	"src": "1277:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2152,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:14"
													}
												]
											}
										]
									},
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1093:23:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2128,
														"name": "Counter",
														"nameLocations": [
															"1093:7:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2101,
														"src": "1093:7:14"
													},
													"referencedDeclaration": 2101,
													"src": "1093:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:14"
									},
									"returnParameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:14"
									},
									"scope": 2169,
									"src": "1074:229:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2167,
										"nodeType": "Block",
										"src": "1358:35:14",
										"statements": [
											{
												"expression": {
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2161,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "1368:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 2163,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:14",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2100,
														"src": "1368:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2166,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:14"
											}
										]
									},
									"id": 2168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "1324:23:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2157,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2156,
														"name": "Counter",
														"nameLocations": [
															"1324:7:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2101,
														"src": "1324:7:14"
													},
													"referencedDeclaration": 2101,
													"src": "1324:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:14"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:14"
									},
									"scope": 2169,
									"src": "1309:84:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2170,
							"src": "424:971:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							2095
						],
						"Pausable": [
							2286
						]
					},
					"id": 2287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2287,
							"sourceUnit": 2096,
							"src": "128:45:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2172,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2095,
										"src": "136:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2175,
										"name": "Context",
										"nameLocations": [
											"645:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2095,
										"src": "645:7:15"
									},
									"id": 2176,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:15"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2174,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:15",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2286,
							"linearizedBaseContracts": [
								2286,
								2095
							],
							"name": "Pausable",
							"nameLocation": "633:8:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2178,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:15",
									"nodeType": "VariableDeclaration",
									"scope": 2286,
									"src": "659:20:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2177,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:15",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 2183,
									"name": "Paused",
									"nameLocation": "770:6:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "777:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:15"
									},
									"src": "764:30:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:15",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 2188,
									"name": "Unpaused",
									"nameLocation": "881:8:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "890:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:15"
									},
									"src": "875:32:15"
								},
								{
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:15",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 2191,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:15"
									},
									"src": "994:22:15"
								},
								{
									"documentation": {
										"id": 2192,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:15",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 2194,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:15"
									},
									"src": "1107:22:15"
								},
								{
									"body": {
										"id": 2202,
										"nodeType": "Block",
										"src": "1221:32:15",
										"statements": [
											{
												"expression": {
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2198,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "1231:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2201,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:15"
											}
										]
									},
									"documentation": {
										"id": 2195,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:15",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2203,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:15"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:15"
									},
									"scope": 2286,
									"src": "1207:46:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "1464:47:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2206,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "1474:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2208,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:15"
											},
											{
												"id": 2209,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:15"
											}
										]
									},
									"documentation": {
										"id": 2204,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:15",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2211,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:15",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:15"
									},
									"src": "1439:72:15",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2218,
										"nodeType": "Block",
										"src": "1711:44:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2214,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "1721:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2216,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:15"
											},
											{
												"id": 2217,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:15"
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:15",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2219,
									"name": "whenPaused",
									"nameLocation": "1698:10:15",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:15"
									},
									"src": "1689:66:15",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "1903:31:15",
										"statements": [
											{
												"expression": {
													"id": 2225,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2178,
													"src": "1920:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2224,
												"id": 2226,
												"nodeType": "Return",
												"src": "1913:14:15"
											}
										]
									},
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:15",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:15"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1897:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:15"
									},
									"scope": 2286,
									"src": "1850:84:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "2053:77:15",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2232,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "2067:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2238,
												"nodeType": "IfStatement",
												"src": "2063:61:15",
												"trueBody": {
													"id": 2237,
													"nodeType": "Block",
													"src": "2077:47:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2234,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2191,
																	"src": "2098:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2236,
															"nodeType": "RevertStatement",
															"src": "2091:22:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:15",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:15"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:15"
									},
									"scope": 2286,
									"src": "2002:128:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2252,
										"nodeType": "Block",
										"src": "2250:78:15",
										"statements": [
											{
												"condition": {
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:15",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2244,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2228,
															"src": "2265:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 2245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2251,
												"nodeType": "IfStatement",
												"src": "2260:62:15",
												"trueBody": {
													"id": 2250,
													"nodeType": "Block",
													"src": "2275:47:15",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2247,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2194,
																	"src": "2296:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2249,
															"nodeType": "RevertStatement",
															"src": "2289:22:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:15",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 2253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:15"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:15"
									},
									"scope": 2286,
									"src": "2202:126:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2268,
										"nodeType": "Block",
										"src": "2512:66:15",
										"statements": [
											{
												"expression": {
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2259,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "2522:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2264,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "2558:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2263,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2183,
														"src": "2551:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2267,
												"nodeType": "EmitStatement",
												"src": "2546:25:15"
											}
										]
									},
									"documentation": {
										"id": 2254,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:15",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2257,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2256,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2211,
												"src": "2498:13:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:15"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:15"
									},
									"returnParameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:15"
									},
									"scope": 2286,
									"src": "2463:115:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2284,
										"nodeType": "Block",
										"src": "2758:69:15",
										"statements": [
											{
												"expression": {
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2275,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "2768:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2278,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2280,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "2807:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2279,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "2798:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2283,
												"nodeType": "EmitStatement",
												"src": "2793:27:15"
											}
										]
									},
									"documentation": {
										"id": 2270,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:15",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2285,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2273,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2272,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2219,
												"src": "2747:10:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:15"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:15"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:15"
									},
									"scope": 2286,
									"src": "2710:117:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2287,
							"src": "615:2214:15",
							"usedErrors": [
								2191,
								2194
							],
							"usedEvents": [
								2183,
								2188
							]
						}
					],
					"src": "102:2728:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3631
						],
						"SignedMath": [
							3736
						],
						"Strings": [
							2541
						]
					},
					"id": 2542,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2542,
							"sourceUnit": 3632,
							"src": "127:37:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2289,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3631,
										"src": "135:4:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 2292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2542,
							"sourceUnit": 3737,
							"src": "165:49:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2291,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3736,
										"src": "173:10:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2293,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:16",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2541,
							"linearizedBaseContracts": [
								2541
							],
							"name": "Strings",
							"nameLocation": "259:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2296,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:16",
									"nodeType": "VariableDeclaration",
									"scope": 2541,
									"src": "273:56:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2294,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2295,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:16",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2299,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2541,
									"src": "335:42:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2297,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2298,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:16",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2306,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "505:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "520:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:16"
									},
									"src": "470:66:16"
								},
								{
									"body": {
										"id": 2353,
										"nodeType": "Block",
										"src": "708:627:16",
										"statements": [
											{
												"id": 2352,
												"nodeType": "UncheckedBlock",
												"src": "718:611:16",
												"statements": [
													{
														"assignments": [
															2315
														],
														"declarations": [
															{
																"constant": false,
																"id": 2315,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2352,
																"src": "742:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2314,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2322,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2318,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2309,
																		"src": "770:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2316,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3631,
																		"src": "759:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3631_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:16",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3451,
																	"src": "759:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:16"
													},
													{
														"assignments": [
															2324
														],
														"declarations": [
															{
																"constant": false,
																"id": 2324,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2352,
																"src": "794:20:16",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2323,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2329,
														"initialValue": {
															"arguments": [
																{
																	"id": 2327,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "828:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2325,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:16"
													},
													{
														"assignments": [
															2331
														],
														"declarations": [
															{
																"constant": false,
																"id": 2331,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:16",
																"nodeType": "VariableDeclaration",
																"scope": 2352,
																"src": "849:11:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2332,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:16"
													},
													{
														"AST": {
															"nativeSrc": "930:67:16",
															"nodeType": "YulBlock",
															"src": "930:67:16",
															"statements": [
																{
																	"nativeSrc": "948:35:16",
																	"nodeType": "YulAssignment",
																	"src": "948:35:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:16",
																						"nodeType": "YulLiteral",
																						"src": "971:2:16",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:16"
																				},
																				"nativeSrc": "967:15:16",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:16"
																		},
																		"nativeSrc": "955:28:16",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:16"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:16"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2324,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:16",
																"valueSize": 1
															},
															{
																"declaration": 2315,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:16",
																"valueSize": 1
															},
															{
																"declaration": 2331,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:16",
																"valueSize": 1
															}
														],
														"id": 2333,
														"nodeType": "InlineAssembly",
														"src": "921:76:16"
													},
													{
														"body": {
															"id": 2348,
															"nodeType": "Block",
															"src": "1023:269:16",
															"statements": [
																{
																	"expression": {
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:16",
																		"subExpression": {
																			"id": 2335,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2331,
																			"src": "1041:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2337,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:16"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:16",
																		"nodeType": "YulBlock",
																		"src": "1124:86:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:16",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:16",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:16"
																									},
																									"nativeSrc": "1164:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:16"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:16",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:16"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:16"
																							},
																							"nativeSrc": "1159:32:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:16"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:16",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:16"
																					},
																					"nativeSrc": "1146:46:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:16"
																				},
																				"nativeSrc": "1146:46:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:16"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 2296,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:16",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2331,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:16",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2309,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:16",
																			"valueSize": 1
																		}
																	],
																	"id": 2338,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:16"
																},
																{
																	"expression": {
																		"id": 2341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2339,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2309,
																			"src": "1227:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2342,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:16"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2343,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2309,
																			"src": "1260:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2347,
																	"nodeType": "IfStatement",
																	"src": "1256:21:16",
																	"trueBody": {
																		"id": 2346,
																		"nodeType": "Break",
																		"src": "1272:5:16"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2349,
														"nodeType": "WhileStatement",
														"src": "1010:282:16"
													},
													{
														"expression": {
															"id": 2350,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2324,
															"src": "1312:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2313,
														"id": 2351,
														"nodeType": "Return",
														"src": "1305:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2307,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "655:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:16"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "693:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:16"
									},
									"scope": 2541,
									"src": "637:698:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2379,
										"nodeType": "Block",
										"src": "1511:92:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2365,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2357,
																	"src": "1542:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:16",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2374,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2357,
																			"src": "1588:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2372,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3736,
																			"src": "1573:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3736_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:16",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3735,
																		"src": "1573:14:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2371,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2354,
																"src": "1564:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2362,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:16",
																"typeDescriptions": {}
															}
														},
														"id": 2364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:16",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2361,
												"id": 2378,
												"nodeType": "Return",
												"src": "1521:75:16"
											}
										]
									},
									"documentation": {
										"id": 2355,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:16",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "1459:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2356,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:16"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "1496:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:16"
									},
									"scope": 2541,
									"src": "1435:168:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2399,
										"nodeType": "Block",
										"src": "1782:100:16",
										"statements": [
											{
												"id": 2398,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2389,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2383,
																	"src": "1835:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2392,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2383,
																				"src": "1854:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2390,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3631,
																				"src": "1842:4:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3631_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:16",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3573,
																			"src": "1842:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2388,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2400,
																	2483,
																	2503
																],
																"referencedDeclaration": 2483,
																"src": "1823:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2387,
														"id": 2397,
														"nodeType": "Return",
														"src": "1816:49:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2381,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "1729:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:16"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "1767:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:16"
									},
									"scope": 2541,
									"src": "1708:174:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2482,
										"nodeType": "Block",
										"src": "2095:435:16",
										"statements": [
											{
												"assignments": [
													2411
												],
												"declarations": [
													{
														"constant": false,
														"id": 2411,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:16",
														"nodeType": "VariableDeclaration",
														"scope": 2482,
														"src": "2105:18:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2413,
												"initialValue": {
													"id": 2412,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2403,
													"src": "2126:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:16"
											},
											{
												"assignments": [
													2415
												],
												"declarations": [
													{
														"constant": false,
														"id": 2415,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2482,
														"src": "2141:19:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2414,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2424,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2419,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2405,
																	"src": "2177:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2416,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:16"
											},
											{
												"expression": {
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2425,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "2198:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2427,
														"indexExpression": {
															"hexValue": "30",
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2430,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:16"
											},
											{
												"expression": {
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2431,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "2223:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2433,
														"indexExpression": {
															"hexValue": "31",
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2436,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:16"
											},
											{
												"body": {
													"id": 2465,
													"nodeType": "Block",
													"src": "2293:95:16",
													"statements": [
														{
															"expression": {
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2451,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2415,
																		"src": "2307:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2453,
																	"indexExpression": {
																		"id": 2452,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2438,
																		"src": "2314:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2454,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2296,
																		"src": "2319:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2458,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2455,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2411,
																			"src": "2330:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2460,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:16"
														},
														{
															"expression": {
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2461,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2411,
																	"src": "2361:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2464,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2445,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2438,
														"src": "2281:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2466,
												"initializationExpression": {
													"assignments": [
														2438
													],
													"declarations": [
														{
															"constant": false,
															"id": 2438,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 2466,
															"src": "2253:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2437,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2444,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2440,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2405,
																"src": "2269:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:16"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:16",
														"subExpression": {
															"id": 2448,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2438,
															"src": "2290:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2450,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:16"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2467,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "2401:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2476,
												"nodeType": "IfStatement",
												"src": "2397:96:16",
												"trueBody": {
													"id": 2475,
													"nodeType": "Block",
													"src": "2418:75:16",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2471,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2403,
																		"src": "2468:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2472,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2405,
																		"src": "2475:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2470,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2306,
																	"src": "2439:28:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2474,
															"nodeType": "RevertStatement",
															"src": "2432:50:16"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2479,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "2516:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2477,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:16",
															"typeDescriptions": {}
														}
													},
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2409,
												"id": 2481,
												"nodeType": "Return",
												"src": "2502:21:16"
											}
										]
									},
									"documentation": {
										"id": 2401,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "2026:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "2041:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:16"
									},
									"returnParameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "2080:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2407,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:16"
									},
									"scope": 2541,
									"src": "2005:525:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2502,
										"nodeType": "Block",
										"src": "2762:75:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2496,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2486,
																			"src": "2807:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2494,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2492,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2499,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "2815:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2491,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2400,
															2483,
															2503
														],
														"referencedDeclaration": 2483,
														"src": "2779:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2490,
												"id": 2501,
												"nodeType": "Return",
												"src": "2772:58:16"
											}
										]
									},
									"documentation": {
										"id": 2484,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:16",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "2710:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:16"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "2747:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2488,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:16"
									},
									"scope": 2541,
									"src": "2689:148:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2539,
										"nodeType": "Block",
										"src": "2992:104:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2515,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2506,
																		"src": "3015:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2513,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:16",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2520,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2508,
																		"src": "3034:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2518,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:16",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2527,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2506,
																			"src": "3063:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2525,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2524,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2533,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2508,
																			"src": "3086:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2531,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2530,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2512,
												"id": 2538,
												"nodeType": "Return",
												"src": "3002:87:16"
											}
										]
									},
									"documentation": {
										"id": 2504,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:16",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "2929:15:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2505,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "2946:15:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:16"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "2986:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:16"
									},
									"scope": 2541,
									"src": "2914:182:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2542,
							"src": "251:2847:16",
							"usedErrors": [
								2306
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2565
						],
						"IERC165": [
							2577
						]
					},
					"id": 2566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2543,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2566,
							"sourceUnit": 2578,
							"src": "140:38:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2544,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2577,
										"src": "148:7:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2547,
										"name": "IERC165",
										"nameLocations": [
											"687:7:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2577,
										"src": "687:7:17"
									},
									"id": 2548,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:17"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2546,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:17",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2565,
							"linearizedBaseContracts": [
								2565,
								2577
							],
							"name": "ERC165",
							"nameLocation": "677:6:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2576
									],
									"body": {
										"id": 2563,
										"nodeType": "Block",
										"src": "844:64:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2556,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2551,
														"src": "861:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2558,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2577,
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2577_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2577_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2577",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:17",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2555,
												"id": 2562,
												"nodeType": "Return",
												"src": "854:47:17"
											}
										]
									},
									"documentation": {
										"id": 2549,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:17",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "789:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2550,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:17"
									},
									"returnParameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "838:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2553,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:17"
									},
									"scope": 2565,
									"src": "762:146:17",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2566,
							"src": "659:251:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2577
						]
					},
					"id": 2578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2567,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2568,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:18",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2577,
							"linearizedBaseContracts": [
								2577
							],
							"name": "IERC165",
							"nameLocation": "431:7:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:18",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "817:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2570,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:18"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "860:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2573,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:18"
									},
									"scope": 2577,
									"src": "790:76:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2578,
							"src": "421:447:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:18"
				},
				"id": 18
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3631
						]
					},
					"id": 3632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2579,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2580,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:19",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3631,
							"linearizedBaseContracts": [
								3631
							],
							"name": "Math",
							"nameLocation": "211:4:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2581,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:19",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2583,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:19",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:19"
									},
									"src": "277:29:19"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2588,
									"members": [
										{
											"id": 2584,
											"name": "Floor",
											"nameLocation": "336:5:19",
											"nodeType": "EnumValue",
											"src": "336:5:19"
										},
										{
											"id": 2585,
											"name": "Ceil",
											"nameLocation": "379:4:19",
											"nodeType": "EnumValue",
											"src": "379:4:19"
										},
										{
											"id": 2586,
											"name": "Trunc",
											"nameLocation": "421:5:19",
											"nodeType": "EnumValue",
											"src": "421:5:19"
										},
										{
											"id": 2587,
											"name": "Expand",
											"nameLocation": "451:6:19",
											"nodeType": "EnumValue",
											"src": "451:6:19"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:19",
									"nodeType": "EnumDefinition",
									"src": "312:169:19"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "661:140:19",
										"statements": [
											{
												"id": 2618,
												"nodeType": "UncheckedBlock",
												"src": "671:124:19",
												"statements": [
													{
														"assignments": [
															2601
														],
														"declarations": [
															{
																"constant": false,
																"id": 2601,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:19",
																"nodeType": "VariableDeclaration",
																"scope": 2618,
																"src": "695:9:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2600,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2605,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2602,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2591,
																"src": "707:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2603,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "711:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:19"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2606,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2601,
																"src": "730:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2607,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2591,
																"src": "734:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2613,
														"nodeType": "IfStatement",
														"src": "726:28:19",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2611,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2599,
															"id": 2612,
															"nodeType": "Return",
															"src": "737:17:19"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2615,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "782:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2616,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:19",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2599,
														"id": 2617,
														"nodeType": "Return",
														"src": "768:16:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2589,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:19",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "601:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "612:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:19"
									},
									"returnParameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "646:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "652:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:19"
									},
									"scope": 3631,
									"src": "585:216:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2647,
										"nodeType": "Block",
										"src": "984:113:19",
										"statements": [
											{
												"id": 2646,
												"nodeType": "UncheckedBlock",
												"src": "994:97:19",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2632,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2625,
																"src": "1022:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2633,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "1026:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2639,
														"nodeType": "IfStatement",
														"src": "1018:28:19",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2637,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2631,
															"id": 2638,
															"nodeType": "Return",
															"src": "1029:17:19"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2641,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2623,
																		"src": "1074:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2642,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2625,
																		"src": "1078:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2644,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2631,
														"id": 2645,
														"nodeType": "Return",
														"src": "1060:20:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2621,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:19",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "924:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "935:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:19"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "969:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "975:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:19"
									},
									"scope": 3631,
									"src": "908:189:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2689,
										"nodeType": "Block",
										"src": "1283:417:19",
										"statements": [
											{
												"id": 2688,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:19",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2660,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "1551:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2667,
														"nodeType": "IfStatement",
														"src": "1547:28:19",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2665,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2659,
															"id": 2666,
															"nodeType": "Return",
															"src": "1559:16:19"
														}
													},
													{
														"assignments": [
															2669
														],
														"declarations": [
															{
																"constant": false,
																"id": 2669,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:19",
																"nodeType": "VariableDeclaration",
																"scope": 2688,
																"src": "1589:9:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2668,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2673,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2670,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "1601:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2671,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2653,
																"src": "1605:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:19"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2674,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "1624:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2675,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "1628:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2677,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2653,
																"src": "1633:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2683,
														"nodeType": "IfStatement",
														"src": "1620:33:19",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2681,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2659,
															"id": 2682,
															"nodeType": "Return",
															"src": "1636:17:19"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2685,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "1681:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2686,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:19",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2659,
														"id": 2687,
														"nodeType": "Return",
														"src": "1667:16:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2649,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:19",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "1223:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "1234:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:19"
									},
									"returnParameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "1268:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "1274:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:19"
									},
									"scope": 3631,
									"src": "1207:493:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2717,
										"nodeType": "Block",
										"src": "1887:114:19",
										"statements": [
											{
												"id": 2716,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:19",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2702,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "1925:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2709,
														"nodeType": "IfStatement",
														"src": "1921:29:19",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2707,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2701,
															"id": 2708,
															"nodeType": "Return",
															"src": "1933:17:19"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2711,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2693,
																		"src": "1978:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2712,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2695,
																		"src": "1982:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2714,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2701,
														"id": 2715,
														"nodeType": "Return",
														"src": "1964:20:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2691,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:19",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "1827:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "1838:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:19"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "1872:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "1878:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:19"
									},
									"scope": 3631,
									"src": "1811:190:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2745,
										"nodeType": "Block",
										"src": "2198:114:19",
										"statements": [
											{
												"id": 2744,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:19",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2730,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2723,
																"src": "2236:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2737,
														"nodeType": "IfStatement",
														"src": "2232:29:19",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2735,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2729,
															"id": 2736,
															"nodeType": "Return",
															"src": "2244:17:19"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2739,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2721,
																		"src": "2289:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2740,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2723,
																		"src": "2293:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2742,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2729,
														"id": 2743,
														"nodeType": "Return",
														"src": "2275:20:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2719,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:19",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "2138:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "2149:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:19"
									},
									"returnParameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "2183:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "2189:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:19"
									},
									"scope": 3631,
									"src": "2122:190:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2763,
										"nodeType": "Block",
										"src": "2449:37:19",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2756,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2749,
															"src": "2466:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2757,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2751,
															"src": "2470:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2760,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2751,
														"src": "2478:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:19",
													"trueExpression": {
														"id": 2759,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2749,
														"src": "2474:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2755,
												"id": 2762,
												"nodeType": "Return",
												"src": "2459:20:19"
											}
										]
									},
									"documentation": {
										"id": 2747,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:19",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "2395:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "2406:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:19"
									},
									"returnParameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "2440:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:19"
									},
									"scope": 3631,
									"src": "2382:104:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2781,
										"nodeType": "Block",
										"src": "2624:37:19",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2774,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2767,
															"src": "2641:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2775,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2769,
															"src": "2645:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2778,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2769,
														"src": "2653:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:19",
													"trueExpression": {
														"id": 2777,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2767,
														"src": "2649:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2773,
												"id": 2780,
												"nodeType": "Return",
												"src": "2634:20:19"
											}
										]
									},
									"documentation": {
										"id": 2765,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:19",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "2570:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "2581:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:19"
									},
									"returnParameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "2615:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:19"
									},
									"scope": 3631,
									"src": "2557:104:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2804,
										"nodeType": "Block",
										"src": "2845:82:19",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2792,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2785,
																	"src": "2900:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2793,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "2904:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2795,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2796,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2785,
																		"src": "2910:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2797,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2787,
																		"src": "2914:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2799,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2791,
												"id": 2803,
												"nodeType": "Return",
												"src": "2892:28:19"
											}
										]
									},
									"documentation": {
										"id": 2783,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:19",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "2791:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "2802:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:19"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "2836:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:19"
									},
									"scope": 3631,
									"src": "2774:153:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2838,
										"nodeType": "Block",
										"src": "3219:260:19",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2815,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2810,
														"src": "3233:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2823,
												"nodeType": "IfStatement",
												"src": "3229:127:19",
												"trueBody": {
													"id": 2822,
													"nodeType": "Block",
													"src": "3241:115:19",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2818,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2808,
																	"src": "3340:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2819,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2810,
																	"src": "3344:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2814,
															"id": 2821,
															"nodeType": "Return",
															"src": "3333:12:19"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2824,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2808,
															"src": "3444:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2828,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2808,
																			"src": "3458:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2832,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2810,
																"src": "3467:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:19",
													"trueExpression": {
														"hexValue": "30",
														"id": 2827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2814,
												"id": 2837,
												"nodeType": "Return",
												"src": "3437:35:19"
											}
										]
									},
									"documentation": {
										"id": 2806,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:19",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "3165:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "3176:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:19"
									},
									"returnParameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "3210:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:19"
									},
									"scope": 3631,
									"src": "3148:331:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2964,
										"nodeType": "Block",
										"src": "3901:4018:19",
										"statements": [
											{
												"id": 2963,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:19",
												"statements": [
													{
														"assignments": [
															2852
														],
														"declarations": [
															{
																"constant": false,
																"id": 2852,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:19",
																"nodeType": "VariableDeclaration",
																"scope": 2963,
																"src": "4232:13:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2851,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2856,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2853,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "4248:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2854,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2844,
																"src": "4252:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:19"
													},
													{
														"assignments": [
															2858
														],
														"declarations": [
															{
																"constant": false,
																"id": 2858,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:19",
																"nodeType": "VariableDeclaration",
																"scope": 2963,
																"src": "4312:13:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2857,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2859,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:19"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:19",
															"nodeType": "YulBlock",
															"src": "4392:122:19",
															"statements": [
																{
																	"nativeSrc": "4410:30:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:19",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:19"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:19"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:19",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:19"
																				},
																				"nativeSrc": "4433:6:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:19"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:19"
																		},
																		"nativeSrc": "4420:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:19"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:19",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:19",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:19"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:19"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:19"
																				},
																				"nativeSrc": "4470:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:19",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:19"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:19"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:19"
																				},
																				"nativeSrc": "4486:13:19",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:19"
																		},
																		"nativeSrc": "4466:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:19"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:19"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2852,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:19",
																"valueSize": 1
															},
															{
																"declaration": 2852,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:19",
																"valueSize": 1
															},
															{
																"declaration": 2858,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:19",
																"valueSize": 1
															},
															{
																"declaration": 2842,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:19",
																"valueSize": 1
															},
															{
																"declaration": 2844,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:19",
																"valueSize": 1
															}
														],
														"id": 2860,
														"nodeType": "InlineAssembly",
														"src": "4383:131:19"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2861,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2858,
																"src": "4595:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2869,
														"nodeType": "IfStatement",
														"src": "4591:368:19",
														"trueBody": {
															"id": 2868,
															"nodeType": "Block",
															"src": "4607:352:19",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2864,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2852,
																			"src": "4925:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2865,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2846,
																			"src": "4933:11:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2850,
																	"id": 2867,
																	"nodeType": "Return",
																	"src": "4918:26:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2870,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2846,
																"src": "5065:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2871,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2858,
																"src": "5080:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2877,
														"nodeType": "IfStatement",
														"src": "5061:88:19",
														"trueBody": {
															"id": 2876,
															"nodeType": "Block",
															"src": "5087:62:19",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2873,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2583,
																			"src": "5112:20:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:19",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2875,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:19"
																}
															]
														}
													},
													{
														"assignments": [
															2879
														],
														"declarations": [
															{
																"constant": false,
																"id": 2879,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:19",
																"nodeType": "VariableDeclaration",
																"scope": 2963,
																"src": "5404:17:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2878,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2880,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:19"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:19",
															"nodeType": "YulBlock",
															"src": "5444:291:19",
															"statements": [
																{
																	"nativeSrc": "5513:38:19",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:19",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:19"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:19"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:19",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:19"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:19"
																		},
																		"nativeSrc": "5526:25:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:19"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:19",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:19"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:19",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:19",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:19"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:19"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:19"
																				},
																				"nativeSrc": "5653:20:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:19"
																		},
																		"nativeSrc": "5642:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:19"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:19"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:19",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:19",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:19"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:19"
																		},
																		"nativeSrc": "5700:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:19"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:19"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:19",
																"valueSize": 1
															},
															{
																"declaration": 2852,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:19",
																"valueSize": 1
															},
															{
																"declaration": 2852,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:19",
																"valueSize": 1
															},
															{
																"declaration": 2852,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:19",
																"valueSize": 1
															},
															{
																"declaration": 2858,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:19",
																"valueSize": 1
															},
															{
																"declaration": 2858,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:19",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:19",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:19",
																"valueSize": 1
															},
															{
																"declaration": 2879,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:19",
																"valueSize": 1
															},
															{
																"declaration": 2842,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:19",
																"valueSize": 1
															},
															{
																"declaration": 2844,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:19",
																"valueSize": 1
															}
														],
														"id": 2881,
														"nodeType": "InlineAssembly",
														"src": "5435:300:19"
													},
													{
														"assignments": [
															2883
														],
														"declarations": [
															{
																"constant": false,
																"id": 2883,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:19",
																"nodeType": "VariableDeclaration",
																"scope": 2963,
																"src": "5939:12:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2882,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2890,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2884,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2846,
																"src": "5954:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2886,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2846,
																			"src": "5973:11:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2888,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:19"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:19",
															"nodeType": "YulBlock",
															"src": "6008:362:19",
															"statements": [
																{
																	"nativeSrc": "6073:37:19",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:19",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:19",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:19"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:19"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:19"
																		},
																		"nativeSrc": "6088:22:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:19"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:19",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:19"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:19",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:19",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:19"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:19"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:19"
																		},
																		"nativeSrc": "6186:16:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:19"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:19"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:19",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:19",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:19",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:19",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:19"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:19"
																						},
																						"nativeSrc": "6333:12:19",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:19"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:19",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:19"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:19"
																				},
																				"nativeSrc": "6329:23:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:19",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:19"
																		},
																		"nativeSrc": "6325:31:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:19"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:19",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:19"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:19",
																"valueSize": 1
															},
															{
																"declaration": 2846,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:19",
																"valueSize": 1
															},
															{
																"declaration": 2852,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:19",
																"valueSize": 1
															},
															{
																"declaration": 2852,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:19",
																"valueSize": 1
															},
															{
																"declaration": 2883,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:19",
																"valueSize": 1
															},
															{
																"declaration": 2883,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:19",
																"valueSize": 1
															},
															{
																"declaration": 2883,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:19",
																"valueSize": 1
															},
															{
																"declaration": 2883,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:19",
																"valueSize": 1
															},
															{
																"declaration": 2883,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:19",
																"valueSize": 1
															}
														],
														"id": 2891,
														"nodeType": "InlineAssembly",
														"src": "5999:371:19"
													},
													{
														"expression": {
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2892,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2852,
																"src": "6436:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2893,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2858,
																	"src": "6445:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2894,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2883,
																	"src": "6453:4:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2897,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:19"
													},
													{
														"assignments": [
															2899
														],
														"declarations": [
															{
																"constant": false,
																"id": 2899,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:19",
																"nodeType": "VariableDeclaration",
																"scope": 2963,
																"src": "6775:15:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2906,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2901,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2846,
																			"src": "6798:11:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2903,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:19"
													},
													{
														"expression": {
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2907,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2899,
																"src": "7031:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2909,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2846,
																		"src": "7046:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2910,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2899,
																		"src": "7060:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2914,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:19"
													},
													{
														"expression": {
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2915,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2899,
																"src": "7100:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2917,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2846,
																		"src": "7115:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2918,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2899,
																		"src": "7129:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2922,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:19"
													},
													{
														"expression": {
															"id": 2929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2923,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2899,
																"src": "7170:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2925,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2846,
																		"src": "7185:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2926,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2899,
																		"src": "7199:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2930,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:19"
													},
													{
														"expression": {
															"id": 2937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2931,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2899,
																"src": "7240:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2933,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2846,
																		"src": "7255:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2934,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2899,
																		"src": "7269:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2938,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:19"
													},
													{
														"expression": {
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2939,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2899,
																"src": "7310:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2941,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2846,
																		"src": "7325:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2942,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2899,
																		"src": "7339:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2946,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:19"
													},
													{
														"expression": {
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2947,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2899,
																"src": "7381:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2949,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2846,
																		"src": "7396:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2950,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2899,
																		"src": "7410:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2954,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:19"
													},
													{
														"expression": {
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2955,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2849,
																"src": "7851:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2956,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2852,
																	"src": "7860:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2957,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2899,
																	"src": "7868:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2960,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:19"
													},
													{
														"expression": {
															"id": 2961,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2849,
															"src": "7896:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2850,
														"id": 2962,
														"nodeType": "Return",
														"src": "7889:13:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2840,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:19",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "3819:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "3830:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "3841:19:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:19"
									},
									"returnParameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "3885:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:19"
									},
									"scope": 3631,
									"src": "3803:4116:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3007,
										"nodeType": "Block",
										"src": "8161:192:19",
										"statements": [
											{
												"assignments": [
													2981
												],
												"declarations": [
													{
														"constant": false,
														"id": 2981,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:19",
														"nodeType": "VariableDeclaration",
														"scope": 3007,
														"src": "8171:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2980,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2987,
												"initialValue": {
													"arguments": [
														{
															"id": 2983,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2968,
															"src": "8195:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2984,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2970,
															"src": "8198:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2985,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2972,
															"src": "8201:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2982,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2965,
															3008
														],
														"referencedDeclaration": 2965,
														"src": "8188:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2989,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2975,
																"src": "8244:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2588",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2588",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2988,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3630,
															"src": "8227:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2588_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2992,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2968,
																	"src": "8264:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2993,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2970,
																	"src": "8267:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2994,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2972,
																	"src": "8270:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2991,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3004,
												"nodeType": "IfStatement",
												"src": "8223:101:19",
												"trueBody": {
													"id": 3003,
													"nodeType": "Block",
													"src": "8288:36:19",
													"statements": [
														{
															"expression": {
																"id": 3001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2999,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2981,
																	"src": "8302:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3002,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:19"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3005,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2981,
													"src": "8340:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2979,
												"id": 3006,
												"nodeType": "Return",
												"src": "8333:13:19"
											}
										]
									},
									"documentation": {
										"id": 2966,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:19",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 3008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "8067:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "8078:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "8089:19:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "8110:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2588",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2974,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2973,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2588,
														"src": "8110:8:19"
													},
													"referencedDeclaration": 2588,
													"src": "8110:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2588",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:19"
									},
									"returnParameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "8152:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:19"
									},
									"scope": 3631,
									"src": "8051:302:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3119,
										"nodeType": "Block",
										"src": "8644:1585:19",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3016,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3011,
														"src": "8658:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3022,
												"nodeType": "IfStatement",
												"src": "8654:45:19",
												"trueBody": {
													"id": 3021,
													"nodeType": "Block",
													"src": "8666:33:19",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3015,
															"id": 3020,
															"nodeType": "Return",
															"src": "8680:8:19"
														}
													]
												}
											},
											{
												"assignments": [
													3024
												],
												"declarations": [
													{
														"constant": false,
														"id": 3024,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:19",
														"nodeType": "VariableDeclaration",
														"scope": 3119,
														"src": "9378:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3033,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 3025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3027,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "9406:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3026,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3287,
																			3322
																		],
																		"referencedDeclaration": 3287,
																		"src": "9401:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3031,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:19"
											},
											{
												"id": 3118,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:19",
												"statements": [
													{
														"expression": {
															"id": 3043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3034,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3024,
																"src": "9839:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3035,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3024,
																				"src": "9849:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3036,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3011,
																					"src": "9858:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3037,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3024,
																					"src": "9862:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3040,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3044,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:19"
													},
													{
														"expression": {
															"id": 3054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3045,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3024,
																"src": "9888:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3046,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3024,
																				"src": "9898:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3049,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3047,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3011,
																					"src": "9907:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3048,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3024,
																					"src": "9911:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3051,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3055,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:19"
													},
													{
														"expression": {
															"id": 3065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3056,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3024,
																"src": "9937:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3057,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3024,
																				"src": "9947:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3058,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3011,
																					"src": "9956:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3059,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3024,
																					"src": "9960:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3062,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3066,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:19"
													},
													{
														"expression": {
															"id": 3076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3067,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3024,
																"src": "9986:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3068,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3024,
																				"src": "9996:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3069,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3011,
																					"src": "10005:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3070,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3024,
																					"src": "10009:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3073,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3077,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:19"
													},
													{
														"expression": {
															"id": 3087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3078,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3024,
																"src": "10035:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3079,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3024,
																				"src": "10045:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3080,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3011,
																					"src": "10054:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3081,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3024,
																					"src": "10058:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3084,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3088,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:19"
													},
													{
														"expression": {
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3089,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3024,
																"src": "10084:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3090,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3024,
																				"src": "10094:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3091,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3011,
																					"src": "10103:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3092,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3024,
																					"src": "10107:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3095,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3099,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:19"
													},
													{
														"expression": {
															"id": 3109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3100,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3024,
																"src": "10133:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3101,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3024,
																				"src": "10143:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3102,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3011,
																					"src": "10152:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3103,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3024,
																					"src": "10156:6:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3106,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3110,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:19"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3112,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3024,
																	"src": "10193:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3113,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3011,
																		"src": "10201:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3114,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3024,
																		"src": "10205:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3111,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2782,
																"src": "10189:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3015,
														"id": 3117,
														"nodeType": "Return",
														"src": "10182:30:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3009,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:19",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "8601:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:19"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "8635:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:19"
									},
									"scope": 3631,
									"src": "8587:1642:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3154,
										"nodeType": "Block",
										"src": "10405:164:19",
										"statements": [
											{
												"id": 3153,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:19",
												"statements": [
													{
														"assignments": [
															3132
														],
														"declarations": [
															{
																"constant": false,
																"id": 3132,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:19",
																"nodeType": "VariableDeclaration",
																"scope": 3153,
																"src": "10439:14:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3131,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3136,
														"initialValue": {
															"arguments": [
																{
																	"id": 3134,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3123,
																	"src": "10461:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3133,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3120,
																	3155
																],
																"referencedDeclaration": 3120,
																"src": "10456:4:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:19"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3137,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3132,
																"src": "10484:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3139,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3126,
																						"src": "10511:8:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2588",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2588",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3138,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3630,
																					"src": "10494:16:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2588_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3143,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3141,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3132,
																						"src": "10524:6:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3142,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3132,
																						"src": "10533:6:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3144,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3123,
																					"src": "10542:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:19",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3130,
														"id": 3152,
														"nodeType": "Return",
														"src": "10477:75:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3121,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:19",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3123,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "10343:9:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "10354:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2588",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3125,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3124,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2588,
														"src": "10354:8:19"
													},
													"referencedDeclaration": 2588,
													"src": "10354:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2588",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:19"
									},
									"returnParameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3155,
												"src": "10396:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:19"
									},
									"scope": 3631,
									"src": "10329:240:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3286,
										"nodeType": "Block",
										"src": "10760:922:19",
										"statements": [
											{
												"assignments": [
													3164
												],
												"declarations": [
													{
														"constant": false,
														"id": 3164,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:19",
														"nodeType": "VariableDeclaration",
														"scope": 3286,
														"src": "10770:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3163,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3166,
												"initialValue": {
													"hexValue": "30",
													"id": 3165,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:19",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:19"
											},
											{
												"id": 3283,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:19",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3167,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "10826:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3181,
														"nodeType": "IfStatement",
														"src": "10822:99:19",
														"trueBody": {
															"id": 3180,
															"nodeType": "Block",
															"src": "10844:77:19",
															"statements": [
																{
																	"expression": {
																		"id": 3174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3172,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "10862:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3175,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:19"
																},
																{
																	"expression": {
																		"id": 3178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3176,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "10893:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3179,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3182,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "10938:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3196,
														"nodeType": "IfStatement",
														"src": "10934:96:19",
														"trueBody": {
															"id": 3195,
															"nodeType": "Block",
															"src": "10955:75:19",
															"statements": [
																{
																	"expression": {
																		"id": 3189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3187,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "10973:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3190,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:19"
																},
																{
																	"expression": {
																		"id": 3193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3191,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "11003:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3194,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3197,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "11047:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3211,
														"nodeType": "IfStatement",
														"src": "11043:96:19",
														"trueBody": {
															"id": 3210,
															"nodeType": "Block",
															"src": "11064:75:19",
															"statements": [
																{
																	"expression": {
																		"id": 3204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3202,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11082:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3205,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:19"
																},
																{
																	"expression": {
																		"id": 3208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3206,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "11112:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3209,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3212,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "11156:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3226,
														"nodeType": "IfStatement",
														"src": "11152:96:19",
														"trueBody": {
															"id": 3225,
															"nodeType": "Block",
															"src": "11173:75:19",
															"statements": [
																{
																	"expression": {
																		"id": 3219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3217,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11191:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3220,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:19"
																},
																{
																	"expression": {
																		"id": 3223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3221,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "11221:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3224,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3227,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "11265:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3241,
														"nodeType": "IfStatement",
														"src": "11261:93:19",
														"trueBody": {
															"id": 3240,
															"nodeType": "Block",
															"src": "11281:73:19",
															"statements": [
																{
																	"expression": {
																		"id": 3234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3232,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11299:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3235,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:19"
																},
																{
																	"expression": {
																		"id": 3238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3236,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "11328:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3239,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3242,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "11371:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3256,
														"nodeType": "IfStatement",
														"src": "11367:93:19",
														"trueBody": {
															"id": 3255,
															"nodeType": "Block",
															"src": "11387:73:19",
															"statements": [
																{
																	"expression": {
																		"id": 3249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3247,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11405:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3250,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:19"
																},
																{
																	"expression": {
																		"id": 3253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3251,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "11434:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3254,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "11477:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3271,
														"nodeType": "IfStatement",
														"src": "11473:93:19",
														"trueBody": {
															"id": 3270,
															"nodeType": "Block",
															"src": "11493:73:19",
															"statements": [
																{
																	"expression": {
																		"id": 3264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3262,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3158,
																			"src": "11511:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3265,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:19"
																},
																{
																	"expression": {
																		"id": 3268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3266,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "11540:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3269,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "11583:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3282,
														"nodeType": "IfStatement",
														"src": "11579:64:19",
														"trueBody": {
															"id": 3281,
															"nodeType": "Block",
															"src": "11599:44:19",
															"statements": [
																{
																	"expression": {
																		"id": 3279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3277,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3164,
																			"src": "11617:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3280,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:19"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3284,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3164,
													"src": "11669:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3162,
												"id": 3285,
												"nodeType": "Return",
												"src": "11662:13:19"
											}
										]
									},
									"documentation": {
										"id": 3156,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:19",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3158,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "10713:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:19"
									},
									"returnParameters": {
										"id": 3162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3287,
												"src": "10751:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:19"
									},
									"scope": 3631,
									"src": "10699:983:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3321,
										"nodeType": "Block",
										"src": "11915:168:19",
										"statements": [
											{
												"id": 3320,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:19",
												"statements": [
													{
														"assignments": [
															3299
														],
														"declarations": [
															{
																"constant": false,
																"id": 3299,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:19",
																"nodeType": "VariableDeclaration",
																"scope": 3320,
																"src": "11949:14:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3298,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3303,
														"initialValue": {
															"arguments": [
																{
																	"id": 3301,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3290,
																	"src": "11971:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3300,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3287,
																	3322
																],
																"referencedDeclaration": 3287,
																"src": "11966:4:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:19"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3304,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3299,
																"src": "11998:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3306,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3293,
																						"src": "12025:8:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2588",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2588",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3305,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3630,
																					"src": "12008:16:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2588_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3310,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3309,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3299,
																						"src": "12043:6:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3311,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3290,
																					"src": "12052:5:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:19",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3317,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3297,
														"id": 3319,
														"nodeType": "Return",
														"src": "11991:75:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3288,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:19",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3322,
												"src": "11849:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 3322,
												"src": "11864:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2588",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3291,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2588,
														"src": "11864:8:19"
													},
													"referencedDeclaration": 2588,
													"src": "11864:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2588",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:19"
									},
									"returnParameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3322,
												"src": "11906:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:19"
									},
									"scope": 3631,
									"src": "11835:248:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3450,
										"nodeType": "Block",
										"src": "12276:854:19",
										"statements": [
											{
												"assignments": [
													3331
												],
												"declarations": [
													{
														"constant": false,
														"id": 3331,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:19",
														"nodeType": "VariableDeclaration",
														"scope": 3450,
														"src": "12286:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3333,
												"initialValue": {
													"hexValue": "30",
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:19",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:19"
											},
											{
												"id": 3447,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:19",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3334,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3325,
																"src": "12342:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3350,
														"nodeType": "IfStatement",
														"src": "12338:103:19",
														"trueBody": {
															"id": 3349,
															"nodeType": "Block",
															"src": "12361:80:19",
															"statements": [
																{
																	"expression": {
																		"id": 3343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3339,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12379:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3344,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:19"
																},
																{
																	"expression": {
																		"id": 3347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3345,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "12414:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3348,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3351,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3325,
																"src": "12458:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3367,
														"nodeType": "IfStatement",
														"src": "12454:103:19",
														"trueBody": {
															"id": 3366,
															"nodeType": "Block",
															"src": "12477:80:19",
															"statements": [
																{
																	"expression": {
																		"id": 3360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3356,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12495:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3361,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:19"
																},
																{
																	"expression": {
																		"id": 3364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3362,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "12530:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3365,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3368,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3325,
																"src": "12574:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3384,
														"nodeType": "IfStatement",
														"src": "12570:103:19",
														"trueBody": {
															"id": 3383,
															"nodeType": "Block",
															"src": "12593:80:19",
															"statements": [
																{
																	"expression": {
																		"id": 3377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3373,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12611:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3378,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:19"
																},
																{
																	"expression": {
																		"id": 3381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3379,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "12646:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3382,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3325,
																"src": "12690:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3401,
														"nodeType": "IfStatement",
														"src": "12686:100:19",
														"trueBody": {
															"id": 3400,
															"nodeType": "Block",
															"src": "12708:78:19",
															"statements": [
																{
																	"expression": {
																		"id": 3394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3390,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12726:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3395,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:19"
																},
																{
																	"expression": {
																		"id": 3398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3396,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "12760:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3399,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3402,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3325,
																"src": "12803:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3418,
														"nodeType": "IfStatement",
														"src": "12799:100:19",
														"trueBody": {
															"id": 3417,
															"nodeType": "Block",
															"src": "12821:78:19",
															"statements": [
																{
																	"expression": {
																		"id": 3411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12839:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3412,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:19"
																},
																{
																	"expression": {
																		"id": 3415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3413,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "12873:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3416,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3419,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3325,
																"src": "12916:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3435,
														"nodeType": "IfStatement",
														"src": "12912:100:19",
														"trueBody": {
															"id": 3434,
															"nodeType": "Block",
															"src": "12934:78:19",
															"statements": [
																{
																	"expression": {
																		"id": 3428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3424,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3325,
																			"src": "12952:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3429,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:19"
																},
																{
																	"expression": {
																		"id": 3432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3430,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "12986:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3433,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3436,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3325,
																"src": "13029:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3446,
														"nodeType": "IfStatement",
														"src": "13025:66:19",
														"trueBody": {
															"id": 3445,
															"nodeType": "Block",
															"src": "13047:44:19",
															"statements": [
																{
																	"expression": {
																		"id": 3443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3441,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "13065:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3444,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:19"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3448,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3331,
													"src": "13117:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3329,
												"id": 3449,
												"nodeType": "Return",
												"src": "13110:13:19"
											}
										]
									},
									"documentation": {
										"id": 3323,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:19",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3325,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3451,
												"src": "12229:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:19"
									},
									"returnParameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3451,
												"src": "12267:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:19"
									},
									"scope": 3631,
									"src": "12214:916:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3485,
										"nodeType": "Block",
										"src": "13365:170:19",
										"statements": [
											{
												"id": 3484,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:19",
												"statements": [
													{
														"assignments": [
															3463
														],
														"declarations": [
															{
																"constant": false,
																"id": 3463,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:19",
																"nodeType": "VariableDeclaration",
																"scope": 3484,
																"src": "13399:14:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3462,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3467,
														"initialValue": {
															"arguments": [
																{
																	"id": 3465,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3454,
																	"src": "13422:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3464,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3451,
																	3486
																],
																"referencedDeclaration": 3451,
																"src": "13416:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:19"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3468,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3463,
																"src": "13449:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3470,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3457,
																						"src": "13476:8:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2588",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2588",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3469,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3630,
																					"src": "13459:16:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2588_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3474,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3472,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3473,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3463,
																						"src": "13495:6:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3475,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3454,
																					"src": "13504:5:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:19",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3481,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3461,
														"id": 3483,
														"nodeType": "Return",
														"src": "13442:76:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3452,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:19",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3486,
												"src": "13299:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3457,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 3486,
												"src": "13314:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2588",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3456,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3455,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2588,
														"src": "13314:8:19"
													},
													"referencedDeclaration": 2588,
													"src": "13314:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2588",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:19"
									},
									"returnParameters": {
										"id": 3461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3486,
												"src": "13356:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:19"
									},
									"scope": 3631,
									"src": "13284:251:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3572,
										"nodeType": "Block",
										"src": "13855:600:19",
										"statements": [
											{
												"assignments": [
													3495
												],
												"declarations": [
													{
														"constant": false,
														"id": 3495,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:19",
														"nodeType": "VariableDeclaration",
														"scope": 3572,
														"src": "13865:14:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3494,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3497,
												"initialValue": {
													"hexValue": "30",
													"id": 3496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:19",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:19"
											},
											{
												"id": 3569,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:19",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3489,
																	"src": "13921:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3512,
														"nodeType": "IfStatement",
														"src": "13917:98:19",
														"trueBody": {
															"id": 3511,
															"nodeType": "Block",
															"src": "13939:76:19",
															"statements": [
																{
																	"expression": {
																		"id": 3505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3503,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3489,
																			"src": "13957:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3506,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:19"
																},
																{
																	"expression": {
																		"id": 3509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3507,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3495,
																			"src": "13988:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3510,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3513,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3489,
																	"src": "14032:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3527,
														"nodeType": "IfStatement",
														"src": "14028:95:19",
														"trueBody": {
															"id": 3526,
															"nodeType": "Block",
															"src": "14049:74:19",
															"statements": [
																{
																	"expression": {
																		"id": 3520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3518,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3489,
																			"src": "14067:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3521,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:19"
																},
																{
																	"expression": {
																		"id": 3524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3522,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3495,
																			"src": "14097:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3525,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3528,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3489,
																	"src": "14140:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3542,
														"nodeType": "IfStatement",
														"src": "14136:95:19",
														"trueBody": {
															"id": 3541,
															"nodeType": "Block",
															"src": "14157:74:19",
															"statements": [
																{
																	"expression": {
																		"id": 3535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3533,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3489,
																			"src": "14175:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3536,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:19"
																},
																{
																	"expression": {
																		"id": 3539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3537,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3495,
																			"src": "14205:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3540,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3543,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3489,
																	"src": "14248:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3557,
														"nodeType": "IfStatement",
														"src": "14244:95:19",
														"trueBody": {
															"id": 3556,
															"nodeType": "Block",
															"src": "14265:74:19",
															"statements": [
																{
																	"expression": {
																		"id": 3550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3548,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3489,
																			"src": "14283:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3551,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:19"
																},
																{
																	"expression": {
																		"id": 3554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3552,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3495,
																			"src": "14313:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3555,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:19"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3558,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3489,
																	"src": "14356:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3568,
														"nodeType": "IfStatement",
														"src": "14352:64:19",
														"trueBody": {
															"id": 3567,
															"nodeType": "Block",
															"src": "14372:44:19",
															"statements": [
																{
																	"expression": {
																		"id": 3565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3563,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3495,
																			"src": "14390:6:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3566,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:19"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3570,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3495,
													"src": "14442:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3493,
												"id": 3571,
												"nodeType": "Return",
												"src": "14435:13:19"
											}
										]
									},
									"documentation": {
										"id": 3487,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:19",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3573,
												"src": "13808:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:19"
									},
									"returnParameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3573,
												"src": "13846:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:19"
									},
									"scope": 3631,
									"src": "13792:663:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3610,
										"nodeType": "Block",
										"src": "14692:177:19",
										"statements": [
											{
												"id": 3609,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:19",
												"statements": [
													{
														"assignments": [
															3585
														],
														"declarations": [
															{
																"constant": false,
																"id": 3585,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:19",
																"nodeType": "VariableDeclaration",
																"scope": 3609,
																"src": "14726:14:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3584,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3589,
														"initialValue": {
															"arguments": [
																{
																	"id": 3587,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "14750:5:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3586,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3573,
																	3611
																],
																"referencedDeclaration": 3573,
																"src": "14743:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:19"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3590,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3585,
																"src": "14777:6:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3592,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3579,
																						"src": "14804:8:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2588",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2588",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3591,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3630,
																					"src": "14787:16:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2588_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3599,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3594,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3597,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3595,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3585,
																									"src": "14823:6:19",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3596,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:19",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:19",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3598,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3600,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3576,
																					"src": "14838:5:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:19",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3606,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3583,
														"id": 3608,
														"nodeType": "Return",
														"src": "14770:82:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3574,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:19",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:19",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "14626:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3579,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "14641:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2588",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3577,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2588,
														"src": "14641:8:19"
													},
													"referencedDeclaration": 2588,
													"src": "14641:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2588",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:19"
									},
									"returnParameters": {
										"id": 3583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "14683:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:19"
									},
									"scope": 3631,
									"src": "14610:259:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3629,
										"nodeType": "Block",
										"src": "15067:48:19",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3622,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3615,
																	"src": "15090:8:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2588",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2588",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3620,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:19",
																	"typeDescriptions": {}
																}
															},
															"id": 3623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3619,
												"id": 3628,
												"nodeType": "Return",
												"src": "15077:31:19"
											}
										]
									},
									"documentation": {
										"id": 3612,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:19",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3615,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 3630,
												"src": "15019:17:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2588",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3613,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2588,
														"src": "15019:8:19"
													},
													"referencedDeclaration": 2588,
													"src": "15019:8:19",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2588",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:19"
									},
									"returnParameters": {
										"id": 3619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3630,
												"src": "15061:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:19"
									},
									"scope": 3631,
									"src": "14993:122:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3632,
							"src": "203:14914:19",
							"usedErrors": [
								2583
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:19"
				},
				"id": 19
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3736
						]
					},
					"id": 3737,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3634,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:20",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3736,
							"linearizedBaseContracts": [
								3736
							],
							"name": "SignedMath",
							"nameLocation": "224:10:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3651,
										"nodeType": "Block",
										"src": "376:37:20",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3644,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3637,
															"src": "393:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3645,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3639,
															"src": "397:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3648,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3639,
														"src": "405:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:20",
													"trueExpression": {
														"id": 3647,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3637,
														"src": "401:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3643,
												"id": 3650,
												"nodeType": "Return",
												"src": "386:20:20"
											}
										]
									},
									"documentation": {
										"id": 3635,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:20",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3637,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 3652,
												"src": "325:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3636,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3639,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 3652,
												"src": "335:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3638,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:20"
									},
									"returnParameters": {
										"id": 3643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3652,
												"src": "368:6:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3641,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:20"
									},
									"scope": 3736,
									"src": "312:101:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3669,
										"nodeType": "Block",
										"src": "555:37:20",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3662,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3655,
															"src": "572:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3663,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3657,
															"src": "576:1:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3666,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3657,
														"src": "584:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:20",
													"trueExpression": {
														"id": 3665,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3655,
														"src": "580:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3661,
												"id": 3668,
												"nodeType": "Return",
												"src": "565:20:20"
											}
										]
									},
									"documentation": {
										"id": 3653,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:20",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3655,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 3670,
												"src": "504:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3654,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3657,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 3670,
												"src": "514:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3656,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:20"
									},
									"returnParameters": {
										"id": 3661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3670,
												"src": "547:6:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3659,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:20"
									},
									"scope": 3736,
									"src": "491:101:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3713,
										"nodeType": "Block",
										"src": "797:162:20",
										"statements": [
											{
												"assignments": [
													3681
												],
												"declarations": [
													{
														"constant": false,
														"id": 3681,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:20",
														"nodeType": "VariableDeclaration",
														"scope": 3713,
														"src": "859:8:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3680,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3694,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3682,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3673,
																	"src": "871:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3683,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3675,
																	"src": "875:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3685,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3686,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3673,
																				"src": "882:1:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3687,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3675,
																				"src": "886:1:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3689,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3692,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:20"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3695,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3681,
														"src": "911:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3700,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3681,
																						"src": "931:1:20",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3699,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3698,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:20",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:20",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3696,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:20",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:20",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3705,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3673,
																				"src": "945:1:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3706,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3675,
																				"src": "949:1:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3708,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3710,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3679,
												"id": 3712,
												"nodeType": "Return",
												"src": "904:48:20"
											}
										]
									},
									"documentation": {
										"id": 3671,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:20",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3673,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 3714,
												"src": "746:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3672,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3675,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 3714,
												"src": "756:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3674,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:20"
									},
									"returnParameters": {
										"id": 3679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3714,
												"src": "789:6:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3677,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:20"
									},
									"scope": 3736,
									"src": "729:230:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3734,
										"nodeType": "Block",
										"src": "1103:158:20",
										"statements": [
											{
												"id": 3733,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:20",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3724,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3717,
																			"src": "1228:1:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:20",
																		"subExpression": {
																			"id": 3728,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3717,
																			"src": "1242:1:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:20",
																	"trueExpression": {
																		"id": 3727,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3717,
																		"src": "1237:1:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3722,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:20",
																	"typeDescriptions": {}
																}
															},
															"id": 3731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3721,
														"id": 3732,
														"nodeType": "Return",
														"src": "1213:31:20"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3715,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:20",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3717,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "1061:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3716,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:20"
									},
									"returnParameters": {
										"id": 3721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "1094:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:20"
									},
									"scope": 3736,
									"src": "1048:213:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3737,
							"src": "216:1047:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:20"
				},
				"id": 20
			},
			"contracts/NFTToken.sol": {
				"ast": {
					"absolutePath": "contracts/NFTToken.sol",
					"exportedSymbols": {
						"Context": [
							2095
						],
						"Counters": [
							2169
						],
						"ERC165": [
							2565
						],
						"ERC721": [
							1325
						],
						"ERC721Enumerable": [
							1844
						],
						"ERC721Pausable": [
							1879
						],
						"ERC721URIStorage": [
							2005
						],
						"IERC165": [
							2577
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						],
						"IERC721Enumerable": [
							2037
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							2065
						],
						"IERC721Receiver": [
							1460
						],
						"NftToken": [
							3844
						],
						"Ownable": [
							147
						],
						"Pausable": [
							2286
						],
						"Strings": [
							2541
						]
					},
					"id": 3845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3738,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:21"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3845,
							"sourceUnit": 1326,
							"src": "57:57:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
							"id": 3740,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3845,
							"sourceUnit": 1880,
							"src": "115:76:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3741,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3845,
							"sourceUnit": 148,
							"src": "192:52:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3742,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3845,
							"sourceUnit": 1326,
							"src": "245:57:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"id": 3743,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3845,
							"sourceUnit": 1845,
							"src": "303:78:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3744,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3845,
							"sourceUnit": 2006,
							"src": "382:78:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3745,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3845,
							"sourceUnit": 2170,
							"src": "461:52:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3746,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"536:16:21"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1844,
										"src": "536:16:21"
									},
									"id": 3747,
									"nodeType": "InheritanceSpecifier",
									"src": "536:16:21"
								}
							],
							"canonicalName": "NftToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3844,
							"linearizedBaseContracts": [
								3844,
								1844,
								2037,
								1325,
								269,
								2065,
								1442,
								2565,
								2577,
								2095
							],
							"name": "NftToken",
							"nameLocation": "524:8:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3751,
									"libraryName": {
										"id": 3748,
										"name": "Counters",
										"nameLocations": [
											"562:8:21"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2169,
										"src": "562:8:21"
									},
									"nodeType": "UsingForDirective",
									"src": "556:36:21",
									"typeName": {
										"id": 3750,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3749,
											"name": "Counters.Counter",
											"nameLocations": [
												"575:8:21",
												"584:7:21"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2101,
											"src": "575:16:21"
										},
										"referencedDeclaration": 2101,
										"src": "575:16:21",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3754,
									"mutability": "mutable",
									"name": "_tokenIds",
									"nameLocation": "621:9:21",
									"nodeType": "VariableDeclaration",
									"scope": 3844,
									"src": "596:34:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2101_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3753,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3752,
											"name": "Counters.Counter",
											"nameLocations": [
												"596:8:21",
												"605:7:21"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2101,
											"src": "596:16:21"
										},
										"referencedDeclaration": 2101,
										"src": "596:16:21",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2101_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "abc8c7af",
									"id": 3756,
									"mutability": "mutable",
									"name": "marketplace",
									"nameLocation": "649:11:21",
									"nodeType": "VariableDeclaration",
									"scope": 3844,
									"src": "634:26:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3755,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "634:7:21",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NftToken.Item",
									"id": 3763,
									"members": [
										{
											"constant": false,
											"id": 3758,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "691:2:21",
											"nodeType": "VariableDeclaration",
											"scope": 3763,
											"src": "683:10:21",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3757,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "683:7:21",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3760,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "707:7:21",
											"nodeType": "VariableDeclaration",
											"scope": 3763,
											"src": "699:15:21",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3759,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "699:7:21",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3762,
											"mutability": "mutable",
											"name": "uri",
											"nameLocation": "727:3:21",
											"nodeType": "VariableDeclaration",
											"scope": 3763,
											"src": "720:10:21",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3761,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "720:6:21",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "672:4:21",
									"nodeType": "StructDefinition",
									"scope": 3844,
									"src": "665:84:21",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17b47cc4",
									"id": 3768,
									"mutability": "mutable",
									"name": "Items",
									"nameLocation": "785:5:21",
									"nodeType": "VariableDeclaration",
									"scope": 3844,
									"src": "753:37:21",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3763_storage_$",
										"typeString": "mapping(uint256 => struct NftToken.Item)"
									},
									"typeName": {
										"id": 3767,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3764,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "761:7:21",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "753:24:21",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3763_storage_$",
											"typeString": "mapping(uint256 => struct NftToken.Item)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3766,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3765,
												"name": "Item",
												"nameLocations": [
													"772:4:21"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3763,
												"src": "772:4:21"
											},
											"referencedDeclaration": 3763,
											"src": "772:4:21",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$3763_storage_ptr",
												"typeString": "struct NftToken.Item"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3775,
										"nodeType": "Block",
										"src": "850:2:21",
										"statements": []
									},
									"id": 3776,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "417274546f6b656e",
													"id": 3771,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "830:10:21",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2c085706431137c4f6f3dd1b9463be4fce81ae9fc7324495db1ce7e4f8fbc45f",
														"typeString": "literal_string \"ArtToken\""
													},
													"value": "ArtToken"
												},
												{
													"hexValue": "4152544b",
													"id": 3772,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "842:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4a19f13c43b6c23f9b61da05933841c1f6bac6bb4251e1ba09a4a4b16d663016",
														"typeString": "literal_string \"ARTK\""
													},
													"value": "ARTK"
												}
											],
											"id": 3773,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3770,
												"name": "ERC721",
												"nameLocations": [
													"823:6:21"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "823:6:21"
											},
											"nodeType": "ModifierInvocation",
											"src": "823:26:21"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:21"
									},
									"returnParameters": {
										"id": 3774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:0:21"
									},
									"scope": 3844,
									"src": "808:44:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3818,
										"nodeType": "Block",
										"src": "913:278:21",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3783,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3754,
															"src": "919:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2101_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3785,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "929:9:21",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2127,
														"src": "919:19:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2101_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2101_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:21:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3787,
												"nodeType": "ExpressionStatement",
												"src": "919:21:21"
											},
											{
												"assignments": [
													3789
												],
												"declarations": [
													{
														"constant": false,
														"id": 3789,
														"mutability": "mutable",
														"name": "newItemId",
														"nameLocation": "954:9:21",
														"nodeType": "VariableDeclaration",
														"scope": 3818,
														"src": "946:17:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3788,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "946:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3793,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3790,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3754,
															"src": "966:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2101_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3791,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "976:7:21",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2113,
														"src": "966:17:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2101_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2101_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "966:19:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "946:39:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3795,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1001:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1005:6:21",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1001:10:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3797,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3789,
															"src": "1013:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3794,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 947,
														"src": "991:9:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "991:32:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3799,
												"nodeType": "ExpressionStatement",
												"src": "991:32:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3801,
															"name": "marketplace",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3756,
															"src": "1037:11:21",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3802,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3789,
															"src": "1050:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3800,
														"name": "approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "1029:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1029:31:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3804,
												"nodeType": "ExpressionStatement",
												"src": "1029:31:21"
											},
											{
												"expression": {
													"id": 3814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3805,
															"name": "Items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3768,
															"src": "1067:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3763_storage_$",
																"typeString": "mapping(uint256 => struct NftToken.Item storage ref)"
															}
														},
														"id": 3807,
														"indexExpression": {
															"id": 3806,
															"name": "newItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3789,
															"src": "1073:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1067:16:21",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3763_storage",
															"typeString": "struct NftToken.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3809,
																"name": "newItemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3789,
																"src": "1103:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3810,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1130:3:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1134:6:21",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1130:10:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3812,
																"name": "uri",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3778,
																"src": "1153:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 3808,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3763,
															"src": "1086:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$3763_storage_ptr_$",
																"typeString": "type(struct NftToken.Item storage pointer)"
															}
														},
														"id": 3813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1099:2:21",
															"1121:7:21",
															"1148:3:21"
														],
														"names": [
															"id",
															"creator",
															"uri"
														],
														"nodeType": "FunctionCall",
														"src": "1086:77:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3763_memory_ptr",
															"typeString": "struct NftToken.Item memory"
														}
													},
													"src": "1067:96:21",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$3763_storage",
														"typeString": "struct NftToken.Item storage ref"
													}
												},
												"id": 3815,
												"nodeType": "ExpressionStatement",
												"src": "1067:96:21"
											},
											{
												"expression": {
													"id": 3816,
													"name": "newItemId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3789,
													"src": "1177:9:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3782,
												"id": 3817,
												"nodeType": "Return",
												"src": "1170:16:21"
											}
										]
									},
									"functionSelector": "d85d3d27",
									"id": 3819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "865:4:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3778,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "884:3:21",
												"nodeType": "VariableDeclaration",
												"scope": 3819,
												"src": "870:17:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:19:21"
									},
									"returnParameters": {
										"id": 3782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3819,
												"src": "905:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "904:9:21"
									},
									"scope": 3844,
									"src": "856:335:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 3832,
										"nodeType": "Block",
										"src": "1275:115:21",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 3827,
															"name": "Items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3768,
															"src": "1367:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$3763_storage_$",
																"typeString": "mapping(uint256 => struct NftToken.Item storage ref)"
															}
														},
														"id": 3829,
														"indexExpression": {
															"id": 3828,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3821,
															"src": "1373:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1367:14:21",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$3763_storage",
															"typeString": "struct NftToken.Item storage ref"
														}
													},
													"id": 3830,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1382:3:21",
													"memberName": "uri",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3762,
													"src": "1367:18:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3826,
												"id": 3831,
												"nodeType": "Return",
												"src": "1360:25:21"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1204:8:21",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3823,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1242:8:21"
									},
									"parameters": {
										"id": 3822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3821,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1221:7:21",
												"nodeType": "VariableDeclaration",
												"scope": 3833,
												"src": "1213:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:17:21"
									},
									"returnParameters": {
										"id": 3826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3833,
												"src": "1260:13:21",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3824,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1260:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:15:21"
									},
									"scope": 3844,
									"src": "1195:195:21",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3842,
										"nodeType": "Block",
										"src": "1441:61:21",
										"statements": [
											{
												"expression": {
													"id": 3840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3838,
														"name": "marketplace",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3756,
														"src": "1477:11:21",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3839,
														"name": "market",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3835,
														"src": "1491:6:21",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1477:20:21",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3841,
												"nodeType": "ExpressionStatement",
												"src": "1477:20:21"
											}
										]
									},
									"functionSelector": "73ad6c2d",
									"id": 3843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketplace",
									"nameLocation": "1403:14:21",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3835,
												"mutability": "mutable",
												"name": "market",
												"nameLocation": "1426:6:21",
												"nodeType": "VariableDeclaration",
												"scope": 3843,
												"src": "1418:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:21",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:16:21"
									},
									"returnParameters": {
										"id": 3837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1441:0:21"
									},
									"scope": 3844,
									"src": "1394:108:21",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3845,
							"src": "515:990:21",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268,
								1497,
								1500
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "32:1473:21"
				},
				"id": 21
			}
		}
	}
}